(["'])(mailto:|http:).*?\1	1
^1?$|^(11+?)\1+$	2
M-x replace-regexp <RET> x\([A-Z]\)z <RET> x\,(downcase \1)z	4
var exptags = /\[(b|u|i|s|center|code)\](.+?)\[\/(\1)\]/ig;	2
sed -r -e "s/^.*[,:]([^,:]+@[^,:]+).*$/\1/g" /etc/passwd	2
sed -n -r '/cn=/s/^cn=([^,]+),.*$/\1/p'    < logfile > dumpfile	2
s/(.)\1+/$1/g;	1
original.replaceAll("(.)\\1+", "$1");	1
"14442345".replaceAll("(.)\\1+", "$1");	1
originalString.replaceAll( "(.)\\1+", "$1" );	1
(.)\\1+	1
(.)\1+	1
s/<TAG[^>]*>([^<]*)</TAG[^>]*>/\1	2
^1?$|^(11+?)\1+$	2
^(1+)\1*=\1+$	2
sed -r --in-place 's/a(.*)b/x\1y/g;' your_file	2
perl -pi.bak -e 's/(foo|bar)/\U\1/g' *.txt	1
(["'])(?:(?=(\\?))\2.)*?\1	1
((?=(\\?))\2.)	1
echo 'junk "Foo Bar" not empty one "" this "but this" and this neither' | sed 's/[^\"]*\"\([^\"]*\)\"[^\"]*/>\1</g'	1
(\w)\1+	1
(\w)\1+	1
(\w)\1+	1
([a-zA-Z])\1+	1
([[:alpha:]])\1+	1
([[:alpha:]])(\1+)	2
s/'\(.*\)--\(.*\)'/'\1\2'/g	1
<(script|style).*?</\1>	1
/<([^>]+)>([^<]+)<\/\1>/	2
/<(?<name>[^>]+)>(?<value>[^<]+)</\1>/	2
"([\"'])(.*?)\1"	2
(\"|')[A-Za-z0-9\\W]+?\1	1
(\w*(?:[ ,\.])*?)\1	2
(\w+)\W+\1	2
\(.\)\(.\)\2\1	1
\([a-z]\)\([a-z]\)[a-z]\2\1	1
^((.)(?1)\2|.?)$	1
s/##\([^#]*\)##/${\1}/	1
sed 's/##\([a-zA-Z_][a-zA-Z_][a-zA-Z_]\)##/${\1}/'	1
sed 's/##\([a-zA-Z_]\{3\}\)##/${\1}/'	1
's/##\([a-zA-Z_]\+\)##/${\1}/g'	1
's/##\([a-zA-Z_]\{3\}\)##/${\1}/g'	1
(.)x\1	1
(.)y\1	1
(.)x\1|(.)y\2	1
^(.)(.*)\1([imsxeADSUXJu]*)$	2
(["\']).*?(?<!\\)(\\\\)*\1	1
([0-9])\1+	1
(\\d)\\1	1
replaceAll("(\\d)\\1+", "$1")	1
System.out.println("77433211".replaceAll("(\\d)\\1+", "$1"));	1
(?<=<link\b[^<>]*?)href\s*=\s*(['"])(?:(?!\1).)+\1	2
(?:<link\b[^<>]*?)(href\s*=\s*(['"])(?:(?!\2).)+\2)	2
(?:<link\s+.*?)(href\s*=\s*([\'\"])[^\'\"]+(\2))	2
(?<=<link\s+.*?)href\s*=\s*([\'\"])[^\'\"]+(\1)	2
<link\s+[^>]*(href\s*=\s*(['"]).*?\2)	2
\[([\^%#\$\*@\-;])([^\]]*?)(?=\1)([\^%#\$\*@\-;])\]	2
\[([\^%#\$\*@\-;])([^\]]*?)(?!\1)([\^%#\$\*@\-;])\]	2
?(?(?=b|img|a|script)notag|[a-zA-Z0-9]+)(?:\s[a-zA-Z0-9\-]+=?(?:(["",']?).*?\1?)?)*\s*	2
echo "This is a test with more than 15 characters" | sed "s/\(.\{15\}\).\+$/\1…/"	1
s/\(...............\).*/\1.../	1
s/^\(.\{12\}\).\{3\}.\+$/\1.../	1
%s/\("<input id=\)\(.\)\/>/\1'\2'\/>/g	1
(?:(['"])(.*?)(?<!\\)(?>\\\\)*\1|([^\s]+))	2
([\"'])(?:\\\1|.)*?\1	1
<([A-Z][A-Z0-9]*)[^>]*>(.*?)</\1>	2
perl -pnle "s/#(\d+)/chr(\1)/ge"	2
DateTime (?<1>[^;]+).+?axRecord.set.+?\k<1>	2
(?<=private datetime (?<1>\b\w+\b).+?)set_field[^;]+?\k<1>	2
(\1) \2-\3 x\4	4
sed -ne 's/.*\([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\).*/\1/p  # FAIL	1
:%s/^\v([^|]+\|[^|]+)\|.*$/\1/	2
sed -e 's/^\([^|]*|[^|]*\).*$/\1/'	1
:%s/^\([^\|]\+|[^\|]\+\)\|.*$/\1/g	1
(<([^>]*?password[^>]*?)>)([^<]*?)(<\/\2>)	2
:%s/\v((^\s+)(int|void).{-})\s+\{$\_.{-}^\2\}$/\1;/	2
sed -e 's/dn: cn=\([^,]*\),.*$/\1/'	1
String regex =  "(?<=<(My:tag)>)(?s:.*?)(?=</\1>)";	2
^(?>(=+).*\(2\))(?>[\r\n]+(?=\1=|[^=]).*)*	3
(a\*)(b\*)\1\2	1
s/(\d{5})/\r\n\1/gs	1
s/(?<=\D)(\d{5})(?=\D|$)/\n\1/g	1
([a-z]*) \1	2
egrep "^\w{6}$" /usr/share/dict/words | egrep "(.)(.)(.)\3\2\1"	1
Dim rx As New Regex("\b(?<word>\w+)\s+(\k<word>)\b", RegexOptions.Compiled Or RegexOptions.IgnoreCase)	2
([a-z]+).*(\1)	2
([a-z]{3}).*(\1)	1
(\d)\1{5}	1
(.*)\\1	2
f(.*)\1	2
(.+).*\1	2
(.+)\1	2
:1,$s/\n\(.*\)\n\(.*\)\n/,\1,\2\r/g	1
m|(\w)\1+|	1
(\w)\1+	1
(.)\1+	1
(\w)\1\1	1
(.)\1+	1
:s/;\n\(.*else\)/;\r//----\r\1/	1
<(htmltag>).*\1	1
"(\\w)\\1+"	1
(<!--X\d-->)(?!.*\1.*)	2
(?i)ca(?<length>\d+?)\x20.{\k<length>}\x20?	2
"(.)\1"	1
sed -e 's/{\(.\)}\(.\)/\1{\2}/g' file	1
sed -e 's/\(.\){\(.\)}/{\1}\2/g' file	1
sed -e 's/{\(.\)}\(.\)/\1{\2}/g' < in_file > out_file	1
sed -e 's/\(.\){\(.\)}/{\1}\2/g' < in_file > out_file	1
s/\(get[A-Z][A-Za-z0-9]*_\)\([A-Z]\)/\1\L\2/g	1
perl -pe 's/(get[A-Z][A-Za-z0-9]*)_([A-Z])/\1_\l\2/'	2
echo getFoo_Bar | sed 's/_\(.\)/_\L\1/'	1
Regex.Replace(input, @"(Hello)( -.*\1)", @"SUPERDOOPER$2");	2
src=(["'])(.*?)\1	2
/(?<=\<).*?src=(['"])(.*?)\1.*?(?=/?\>)/si	2
<([A-OQ-Z][A-Z0-9]*)\b[^>]*>(.*?)</\1>	2
123-(abc|def|ghi)-456-(?!\1)(abc|def|ghi)-789-(?!\1|\2)(abc|def|ghi)-0AB	4
:s/\(word\)/\1<ENTER>/	1
:s/\(word\)/\1\r/	1
\(word\)\1^QENTER	1
:s/\(word\)/\1\r/	1
sed -e 's/\(.\)*\.abc$/\1.def/'	1
ls *.abc | sed 's/\(.*\)\.abc/mv "\1.abc" "\1.def"/' | sh	1
^(?!.*([1-9]).*\1)[1-9]{9}$	4
.*([1-9]).*\1.*	1
:%s/">\(.*\)<\//Log message: \1/	1
%:s/.*>\(.*\)<\/.*/\1/	1
s/quick\(.*\)lazy/slow\1energetic/;	1
s/^.*"(.*)".*$/\1/	2
s/^.*"(.*)".*$/"\1"/	2
s/"(.*)"/\1/	2
sed -ne '/^zone/{s/.*"\([^"]*\)".*/\1/;p}' /etc/bind/named.conf	1
sed 's/\([^ ]+\) your \([^ ]+\)/ \2\1er/' < fail	1
sed -r 's/([^ ]+) your ([^ ]+)/ \2\1er/' < fail	2
sed 's/\([^ ][^ ]*\) your \([^ ][^ ]*\)/ \2\1er/' < fail	1
sed 's/\([^ ]\+\) your \([^ ]\+\)/\2\1er/' < fail	1
:%s/\/\*\!\d+(.*)\*\//\1/g	2
:%s/\/\*\!\d\+\(.*\)\*\//\1/g	1
1,$s/\v\/\*\!\d+\s*([^*]+)\*\//\1	2
s/([0-9])"/\1&Prime;/g	1
s/"([^"]*)"/&ldquo;\1&rdquo;/g	2
\b(\w)\1*\b	1
(.)(?:(?!\1).)	1
\b(\w)(?!\1*\b)\w*\b	2
^(\w)\w*?(?!\1)\w+$	1
^(?<FIRST>[a-zA-Z])[a-zA-Z]*?(?!\k<FIRST>)[a-zA-Z]+$	1
:%s/not_pattern\(pattern\)another_not_pattern/\1/	1
L\s*(\d{6})\s*(('\d*)\s*.*\n)?\s*(\d{7}(\s*\3)?)	2
\m(?:(\w)(?!\1))+\M	3
sed -r 's/(^.*)/\L\1/'	2
:%s/\[\(\d\)\]/[\1]/g	1
/<(\w+)>(\s|&nbsp;)*<\/\1>/	2
(?=(<\d{1,2}>))(?!(?<=<)\1(?=>))\1	1
:s/\(\d\+\) /\1/g	1
:s/\(\d\) *\(\d\) *\(\d\) *\(\d\) */\1\2\3\4 /g	1
:s/\(\d\)\s*\(\d\)\s*\(\d\)\s*\(\d\)\s*/\1\2\3\4 /g	1
s/^([a-zA-Z]+)_([a-zA-Z]+)$/\2_\1/	2
sed s/pattern1(pattern2)/\1/g	1
sed -n 's/set auto_upgrade {\([0-9] \)*\([0-9]\{1,\}\)}/\2/p'	1
<([A-Z][A-Z0-9]*)\b[^>]*>.*?</\1>	2
^(.{3}).*\1$	1
^(.{3}).*\1$	1
^(.{3}).*\1$	1
(?P<length>\d+):(?P<contents>.{\1})	2
s/\s*(<[^>]+>)\s*/\1/gs	2
s/(\s*(<))|((>)\s*)/\2\4/g	2
cat log | sed -e 's/"\([^:]*\):\([^"]*\)"/"\1" "\2"/'	1
(.+)(?=\1+)	2
^(\w+?)=(['"])(\w+?)\2$	2
/<([\w]+)[^>]*>.*?<\/\1>/	2
s/<b>(.+)<br>/<h3>\1<\/h3>/	2
$ cat test.html | gawk '/<li[^>]*><a[^>]*>(.*?)<\/a>.*/&&$0=gensub(/<li[^>]*><a[^>]*>(.*?)<\/a>.*/,"\\1", 1)'	2
/\.\([1-9]\)[([.$])]/.0\1\2/g	1
echo "- foo-bar - bar-foo -" | sed -e 's/\([[:alnum:]]\)-\([[:alnum:]]\)/\1\2/g'	1
<!(--)?(?=\[)(?:(?!<!\[endif\]\1>).)*<!\[endif\]\1>	1
/\.([^.]*(\.[^.]+$)?)/\1/	2
\[(=*)\[.*?\]\1\]	2
\[(=*)\[.*?\]\1\]	2
(.)\1	1
(\b\w*?(\w)\2.*?\b)	2
\([a-z]\)\1	1
(?<char>\w)\k<char>	1
\b(\S+)\b(?=.*\b\1\b.*)	2
new Regex( @"(.*)\b(\w+)\b(.*)(\2)(.*)", RegexOptions.IgnoreCase );	2
(\b\w+(?:\s+\w+)*)\s+\1	2
<(?<tag>\w*)(?:.*)>(?<text>.*)</\k<tag>>	2
s/(\d+)/\1000/;	2
s/(\d+)/ \1 + 1 /eg;        # causes warning under -w	2
$pattern =~ s/(\W)/\\\1/g;	1
(foo|bar)baz\1	1
\d{2}(-?)\d{3}\1\d{4}	1
\d{2}(-?)\d{3}\1\d{4}	1
<(.*?)>.*?</\1>	2
@"<(?<tag>\w*)>(?<text>.*)</\k<tag>>"	2
(Start)(\r\n)((.*)\2)+?(End)	3
reg=/^(\d{1,5})?/s ([a-z]{3,5}\b\d{3,5}\s) \s\1 $/;	1
^([1-5])? [a-z]{3,5}\d{3,5} +(\d{4}) +\2$	1
^[1-5]?\s[a-z]{3,5}\d{3,5}\s+(\d{4})\s+(\1)$	1
^(?:[1-5] )?[a-z]{3,5}\d{3,5} +(\d{4}) +\1$	1
^(?:[1-5] )?[a-z]{3,5}[0-9]{3,5} +([0-9]{4}) +\1$	1
sed 's|\(http:\/\/.*?\/\).*|\1|'	1
sed 's|\(http:\/\/.*\?\/\).*|\1|'	1
sed 's|\(http://[^/]*/\).*|\1|g'	1
perl -pe 's|(http://.*?/).*|\1|'	2
sed 's|(http:\/\/[^\/]+\/).*|\1|'	2
sed 's,\(http://[^/]*\)/.*,\1,'	1
:%s/^\([0-9]*\)_\(.*\)/\2/	1
:%s/\v^([0-9]*)_(.*)/\2/	2
(\d)\1.*\1\1	1
(\d)\1.*(\d)\2	1
\d*?(\d)\1\d*?(\d)\2\d*	1
\d*?(\d{2})\d+?\1\d*	1
(1{2})0\10	1
(\d{2})\d+\1\d*	1
(\d)\1.*\1\1	1
((\d)\2).*\1	4
((\d)\2).*((\d)\4)	1
$str =~ s/\((\w+)\)/$1:\1/; # pointless example	2
<(\w+)>(.*?)<\/\1>	2
@"<([^>]*)>(.*)</\1>"	2
<\s*?img\s+?[^>]*?\s*?src\s*?=\s*?(["'])((\\?+.)*?)\1[^>]*?>	2
\[\[([A-Za-z][A-Za-z\d+]*)(\|\1)*\]\]	3
<\s*?img\s+[^>]*?\s*src\s*=\s*(["'])((\\?+.)*?)\1[^>]*?>	2
(foobar).*\1	1
(foobar)(.*\1){4}	2
<\s*img\s+[^>]*?\s*class\s*=\s*(["'])((\\?+.)*?)\1[^>]*?>	2
(\b\S+\b)(?=.*\1)	2
\s+([\w]+)\s*=\s*(['"]?)(\S+)(\2)	2
s/(6a00d834.*?)(")/\1.jpg\2/	2
sed 's/Hello \(.*\)! Have a good day./Bye \1! Good night./' MyInputFile > MyOutputFile	1
echo "Hello somebody! Have a good day" | sed -e 's/Hello \(.*\) Have a good day/Bye \1 Good night./'	1
sed -n 's/^name=\([ 0-9a-zA-Z]*$\)/\1/p' filename	1
sed -i.bak 's/\\(public\\|private\\|protected\\)\\(.*\\)class/\\1 strictfp \\2 class/g' $file	2
(\w+) +\1	2
(\w+) +.*\1	2
(\w+) +.*\1.*	2
(\w+(?:\s+\w+)*) +\1	2
(\w.*) +\1	2
(\b\w+?\b)\.+?\b\1\b	2
(.+)\s+?\1	2
(.+).*?\1	2
(\w+)\s+?\1	2
replace(/([^\\])$/ig,"\1/");	4
replace(/(.)$/ig,"\1/");	4
replace(/(.)\/*$/,"\1/");	4
($re)(.*?)\1	2
'#(["\'])((?:(?![%<>]|\1).)*+%(?:(?!%|\1).)++%(?:(?!\1).)*+)\1#'	2
s/\( \)/,\1/g	1
([0-f])\1([0-f])\2([0-f])\3	1
(\'|").*\\\\\1.*?[^\\\\]\1	1
('|").*\\\1.*?[^\\]\1	1
/<(h[1-3])[^>]*>(?:.*?>)?([^<]+)(?:<.*?)?<\/\1>/i	2
(?<=,|^)([^,]*)(,\1)+(?=,|$)	3
\B^(.+).*?$(?:^\1.*?$)+\E	2
/(<script>)(.*)(<\/script>)/\1\2/gi	2
^(.)\\1*(?:(.)(?:\\1|\\2)*(?:(.)(?:\\1|\\2|\\3)*)?)?$	1
^(.)\1*(.)?(?:\1*\2*)*(.)?(?:\1*\2*\3*)*$	1
sed -e "/DB_NAME/ s/define('DB_NAME', '\(.*\)');/\1/" /path/to/file/to/search.txt	2
string pattern = @"(?<!^|&nbsp;)((?<!\s)&nbsp;(?!\s))(?!\1)";	1
((e).*?\2)	2
.*((e).*?\2).*	2
<!-- START (.*?) -->(.*?)<!-- END \\1 -->	2
(.?)(.?)(.?)(.?)(.?).?\5\4\3\2\1	1
<(p|ul)>(.*?)</\1>	2
sed -r 's/^ *([^ ]+) +[^ ]+ +(.+)/\1 \2/' $FILE	2
perl -p -e "s/(\w+) \d+ (.*)/\1 $2/" file	2
sed -r -e "s/([^ ]+) [0-9]+ (.*)/\1 \2/" file	2
echo "$info"|sed 's/^\(<input\( \)name\(=\)"\([^"]*\)" value="\([^"]*\)"\)\?.*/\4\2\3\2\5/'	1
echo "$info" | sed -n -r '/<input/s/<input +name="([^"]+)" +value="([^"]+)"[^>]*>[^<]*/\1 = \2\n/gp'	2
^1$|^(11+?)\1+$	2
(<xsl:template name=\"(?<templateName>\w+)\">.*?(?<=<xsl:call-template name=\"\k<templateName>\">).*?</xsl:template>)+	3
(?=(\d{30}))\d(?=\d{29,}?\1)	1
\(\d\{30,\}\)\1	1
\(\d\{4\}\)\1	1
$char =~ s/(.)(.)$/\2/g;	1
"+18001234567" =~ s/^\+1800(.*)$/sip:1641641800\1@tollfree.sip-happens.com/	2
!^\+1800(.*)$!sip:1641641800\1@tollfree.sip-happens.com!	2
s/<([^>]*)>([^<]*)<([^>]*)>/&lt;\1&gt;\2&lt;\3&gt;/	2
(.)(?!.{3}\3)	1
(.)(?!.{2}\3)(?<!\3.{3})	4
(.)(?<!\3.{3})	1
(subexpr)(?!.*\1)(?<!\1.+)	2
(e)(?!.*\1)(?<!\1.+)	2
(.)(?!.*\1)(?<!\1.+)	2
(.)(?!.{1}\3)(?<!\3.{2})	4
(.)((?!\1).)((?!\1|\2).)\3\2((?!\1\2\3).)\2\1	4
(\s+\w+=(?P<quote>(\'|\"))[^(?P=quote)]*(?P=quote))*	3
^(.*)(\r?\n\1)+$	3
/(.*)\1*/\1/	2
/\(.*\)\1*/\1/	1
(.*)\1*	2
<(Label|OtherTag|YetAnotherTag)>(\s*[^<]*)</\1>	2
\[(.*)\b=?([^=].*)?\](.*)\[/\1\]	2
^(Dog|Cat|Bird|Mouse)(, (?!\1)(Dog|Cat|Bird|Mouse))*$	3
(Dog|Cat|Bird|Mouse).+?\1	1
s/\.([A-Z])/. \1/g	1
(.)(?<!\1.)(?!\1)	1
/<p>( *[0-9]+.*?)<\/p>/<li>\1<\/li>/	2
^(?:2()|3()|4()|5()){4}\1\2\3\4$	1
^(?:2()|3()|4()|5()|6()){5}\1\2\3\4\5$	1
/^(-?[0-9]+)[^0-9\.]*([0-9]*).*$/\1\2/	2
(\S)\1+	1
^(?!.*((\S)\1|\s))(?=.*(\d.+){2,})(?=.*(\W.+){2,}).{8,}	4
^(?!.*((\S)\1|\s))(?=(.*\d){2,})(?=(.*\W){2,}).{8,}	4
^(?!.*(\S)\1)(?=.{6,})(?=(.*\d){2,})(?=(.*\W){2,})	4
(?!.*(\S)\1|.*\s)	4
^(?!.*(\S)\1|.*\s)(?=.{6,})(?=(.*\d){2,})(?=(.*\W){2,})	4
(client|duration|environment|technologies|role).+(client|duration|environment|technologies|role)(?!\1)	1
dig +noall +answer soa yahoo.com | sed 's/.*SOA\s*//' | sed 's/^\([^ ]*\). .*/\1/g'	1
{marker=(\d)}(.*?){/marker=(\1)}	2
.*([0-9]).+\1.*	1
^(?s)(.).*\1$	1
$ echo $json | sed 's/,//g;s/^.*reputation...\([0-9]*\).*$/\1/'	1
s/^.*reputation...\([0-9]*\).*$/\1/	1
/(\t)*/\1/g	1
$re = '~([a-z])(.?|(?R))\1~';	1
echo '"abc def ghi " klm "ghi ";' | sed 's/\"/\\"/g; s/^\\"\(.*\)\\"/\"\1\"/'	1
echo '"abc def ghi " klm "ghi ";' | sed -e 's/\"/\\"/g' -e 's/^\\"\(.*\)\\"/\"\1\"/'	1
\(.\)\1\{9,\}	1
^(.)\1{9,}$	1
(.)\1{9,}	1
(.)\1{9,}	1
perl -e 'undef $/;while($_=<>){s/^(((?!\b\3\b).)*)\b(\w+)\b(((?!\b\3\b).)*)$/\1UNIQUE:\3\4/gs;print $_;}' demo	4
s/^.*?\K(?!UNIQUE:)\b(\w+)\b(?=(?:(?!\b\1\b).)*$)/UNIQUE:\1/s	2
^([0-9])(?!\1+$)[0-9]+$	2
s/^.*\([0-9]*\.[0-9]*\): \[Tenured:.*$/\1/	1
grep SRC=\'.*\' | sed 's/SRC=.\(.*\)./\1/'	1
^([0-9])(?!\1+$)[0-9]+$|^[0-9]$	2
^([01])\1*$	1
^(\w+),.*\1	2
sed -n 's/^.*abc\([0-9]*\)xyz.*$/\1/p' example.txt	1
sed -n 's/^.*abc\([0-9][0-9]*\)xyz.*$/\1/p' example.txt	1
sed -e 's/.*\([0-9]*\).*/\1/'	1
echo abc123def | sed -n 's/[^0-9]*\([0-9]\+\).*/\1/p'	1
uptime | sed 's/.*up \([^,]*\), .*/\1/'	1
uptime | sed -E 's/^.+([0-9]+ days).+$/\1/'	2
([\t]+)if(.+)\n((\1[\t]+.+\n)+)	3
s:<(\w+)>\s*<\/\1>::g	2
sed -r 's/(.+)/"\1"/' /path/to/your/file	2
(.)\1{8}	1
\[([\'"])'.$key.'\\1\] = (.+?);	2
(\w)\1	1
^(\w)\1	1
File: (\w+)\.java\n.*^[\w \t]+(?:class|interface) \1	2
sed -e 's/xx_\([a-z]\)/\u\1/' < old.sql > new.sql	1
sed 's/xx_\(\w\+\)/\1/' filename	1
(.)\1+	1
echo abcdef | sed -e 's/\(abc\)/\U\1/'	1
(\w)\1+{4,}	1
(\w)(.*\1){2,}	2
(.)(.*\1){3}	2
.*(\w).*\1.*\1.*\1.*	1
^(a*)\1$	2
^((a|b)*)\1$	2
<([0-9])></\1>	1
<(\d+)></\1>	2
<([1-3])>(.*?)</\1>	2
<([1-3])></\1>	1
([aeiou])\1	1
([a-z])\1	1
([a-z])+\1	1
<(?<tag>\w*)>(?<text>.*)</\k<tag>>	2
sed -n 's/.*\(0-9\)\(0-9\)\(0-9\).*/\1,\2,\3/g'.	1
((\w)\2{3,})	1
(\w)\1{3,}	1
(\w)\1{2,}	1
:%g/M_TRACE/s/"\(.*\)"/"%s: \1", __FUNCTION__/c	1
:%g/M_TRACE/s/"\(.*\)"/"%s: \1", __FUNCTION__/igc	1
:%g/M_TRACE/s/"\(.*\)"\(, __FUNCTION__\)\?/"%s: \1", __FUNCTION__/	1
$ echo '/u01/app/ORAENV/oracle/oraInventory' | sed 's:.*/app/\(.*\)/oracle/.*:\1:'	1
(\[PHOTO.\]).*?(?<!\1.*?\[PHOTO.\].*)\[WAITPHOTO\]	2
if(/^\s*(constant)\s*(fixup|\/\*fixup\*\/|)\s*(private|)\s*(\w+)\s+=\s+<([a-zA-Z0-9]+)\s+(["']?)([a-zA-Z0-9.:\\]+)\6>\s*(\/\*\s*(.*?)\s*\*\/|)(\r|\n|\s)/)	2
if (Regex.IsMatch(textBox1.Text, "\b(?(?:90|(?:[0-8]?\\d))([ -/])[0-5]?\\d\\1[0-5]?\\d(\\.\\d{1,4})?\\1[NS])\b") == true)	4
\b([a-zA-Z])\1([0-9])\2\1\1\1\b	1
([a-zA-Z])\1([0-9])\2\1\1\1	1
(^<(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del)\b(.*\n)*?</\2>[ \t]*(?=\n+|\Z))	2
$a=~s/(^|:)([^*:]*)\*(?=(:|$))/\1f\(\2\)/g;	2
\<(\w+[^>])(?:.*)\>([^\s]+?)\</\1\>	2
<(\w+)>(?:(?!<fmt:message).)+</\1>	2
<([^>]+)[^>]*>([^<]*)</\1>	2
/<(\w+)[^>]*>(?:(?!<fmt:message|\$\{|<\/\1>).)*<\/\1>/i	2
/<(\w+)[^>]*>(?:(?!\$\{)[^<])*<\/\1>/i	2
/<(\w+)[^>]*>(?!\s*<)(?:(?!\$\{)[^<])*<\/\1>/i	2
s/,([^,]+),\1/,$1/g;	2
^(\w+).*?\1$	2
([A-Z0-9]+) (.*) \1 \2	2
([A-Z0-9]+) .* \1	2
(\w+) \w* (\w+) \w+ \1 \w* \2	2
\b(\w{2,})\b.*\b\1\b	1
([a-z])([0-9])\1	1
sed 's/href="(.*?)(\.|\,)"/href="{$\1}"/g' test.htm	2
sed 's/href="\(.*?\)(.|\,)"/href="{$\1}"/g' test.htm	1
sed 's/href="\(.*?\)\(.|\,\)"/href="{$\1}"/g' test.htm	1
sed -e 's|href=\"\(.[^"][^>]*\)\([.,]\)\">|href="\1">|g' file	1
sed -r -e 's/href="([^"]*)([.,]+)"/href="\1"/g' test.htm	2
sed 's/su\(.\)/newfolder\1/g'	1
s#/su\([0-9]\)/#/newfolder\1/#g	1
"(\1) \2-\3	4
/={7}(.*)={6}/\1/	2
html.gsub!(/\[(\S*?)\](.*?)\[\/\1\]/) { |m| escape_method($1, $2) }	4
s/(,[0-9.x ]*)",/\1'',/	2
s/((^|,)[0-9.x ]*)"(\s*(,|$))/\1''\3/	2
s/(\S),(\S)/\1|\2/g	1
sed 's/,\([^,]*\),\([^,]*\)$/|\1|\2/'	1
(?=(.)\1)	4
(?<=\d)(?=(.)\1)(?!p)\w(?<!q)	1
cat tmp.tmp | grep -i tag2 | sed 's/.*<Tag2>\(.*\)<\/Tag2>.*/\1/'	1
:command -range=% YourNameHere <line1>,<line2>s/^\v([^|]+\|[^|]+)\|.*$/\1/	2
(\d+)[Hh].{\1}	2
echo "http://www.google.com/test/" | sed -nr "s/.*www\.(.*)\.(?:com|net).*$/\1/p"	2
^1?$|^(11+?)\1+$	2
s.matches("([123456789TJQKA])([dchs])\\1(?!\\2)[dchs]|([123456789TJQKA])\\3")	4
sed -e 's/^.*\/\([^\/]*\)$/\1/'	1
^(?:on the (?<area>\w+)() ?|the (?<weather>\w+)() ?|in (?<location>\w+)() ?|falls() ){4}\1\2\3\4$	2
^(.*)\t(.*)\n\1	2
/(<(h1|h2|h3))(.+?)".$title."(.+?)(<\/\\2>)/i	2
(a+)b+\1	2
s:^\([^<].*\)$:<p>\1</p>:g	1
attribute_name=(['"])[^\1]*\1	1
attribute_name=(['"])[^'"]*\1	1
s!(\w+://[a-zA-Z0-9.]+/\S+/)([^ /]+)\n(\1[^ /]+\n)+!\1\2!	3
sed -e :a -e "s/[0-9]\([0-9]\{4\}\)/\*\1/;ta" $today_temp_log	1
sed -e :a -e "s/[0-9]\{12\}\([0-9]\{4\}\)/\*\*\*\*\*\*\*\*\*\*\*\*\1/;ta" $today_temp_log	1
sed -e :a -e "s/\(CARD_NUMBER=\[\**\)[0-9]\([0-9]\{4\}\)/\1\*\2/;ta"	1
sed -e '/.*\[[0-9]\{12,19\}\]/!b' -e 'h' -e 's/.*\([0-9]\{4\}\)/\1/' -e 'x' -e 's/\(.*\[\)\([0-9]*\)\([0-9]\{4\}\)./\1\2/' -e 's/[0-9]/*/g' -e 'G' -e 's/\n//'	1
sed -e '/.*\[[0-9]\{12,19\}\]/!b' -e 'h' -e 's/.*\([0-9]\{4\}\)/\1/' -e 'x' -e 's/\(.*\[\)\([0-9]*\)\([0-9]\{4\}\)./\1\2/' -e 's/[0-9]/*/g' -e 'G' -e 's/\n//'	1
sed -e 'h' -e 's/.*\([0-9]\{4\}\)/\1/' -e 'x' -e 's/\(.*\[\)\([0-9]*\)\([0-9]\{4\}\)./\1\2/' -e 's/[0-9]/*/g' -e 'G' -e 's/\n//'	1
sed -e 'h' -e 's/.*\([0-9]\{4\}\)/\1/' -e 'x' -e 's/\(.*\[\)\([0-9]*\)\([0-9]\{4\}\)./\1\2/' -e 's/[0-9]/*/g' -e 'G' -e 's/\n//'	1
sed -e '/.*\[[0-9]\{12,19\}\]/!{s/[0-9]/x/g;b}' -e 'h' -e 's/.*\([0-9]\{4\}\)/\1/' -e 'x' -e 's/\(.*\[\)\([0-9]*\)\([0-9]\{4\}\)./\1\2/' -e 's/[0-9]/*/g' -e 'G' -e 's/\n//'	1
sed -e '/.*\[[0-9]\{12,19\}\]/!{s/[0-9]/x/g;b}' -e 'h' -e 's/.*\([0-9]\{4\}\)/\1/' -e 'x' -e 's/\(.*\[\)\([0-9]*\)\([0-9]\{4\}\)./\1\2/' -e 's/[0-9]/*/g' -e 'G' -e 's/\n//'	1
sed -e :a -e "/CARD_NUMBER=/s/[0-9]\([0-9]\{4\}\)/\*\1/;ta" $today_temp_log	1
:%s/^\([0-9/]* [0-9:]* \)\(.*\)/\/*\1*\/ \2/	1
echo abc | sed -n 's/a\(\bc\|\)/\1/p'	1
echo abc | sed -n 's/a\(\\|bc\)/\1/p'	1
(.+)\1+	2
(<[^>]*>)\+\1\+\1	2
sed -e "s|\([0-9]*\)px|int((\1 * 2)/3)|g" file.css	4
(aaa)?((.)\3*)$	2
:%s/\([A-Z]\)\([A-Z][A-Z]*\)/\1\L\2/g	1
:%s/\[\(\w\+\)\]\s\+=\s\+.*$/[\1] = [\1]/	1
^(\d)(?!\1)\d+$	1
ls *.pdf | sed 's/\"/\\"/;s/^\(.*\).pdf$/convert "&" "\1.png"/' | bash	1
^[A-Z]{2}([ \-])[0-9]{2}[ ,][A-Z0-9]{1,2}[A-Z]\1[0-9]{4}$	1
sed -n '/"/!{p;b}; s/\(.*\)"[^"]*/\1" /;s/\(.*"\)\([^"]*\)\(".*"\)/\1 \3/;p' textfile	1
sed -re 's/^(char \* path_list_\[)1(\] = \{ ")[^"]*(" \})\W*$/\12\2\/lib\/foo", "\/lib\/bar\3/' source.c	1
^([1-5])(?!\1)([1-5])(?!\1|\2)([1-5])(?!\1|\2|\3)([1-5])(?!\1|\2|\3|\4)[1-5]$	4
s@(<(img|a)\s[^>]*?\s(src|href)=)(["'])http://[^'"]*?(/Content/[^'"]*?)\4@$1$4$5@g	2
([AKQJT2-9])\1	1
^([AKQJT2-9])\1$	1
^([AKQJT2-9])\1$	1
($match,$unused) = $string ~= (([AKQJT2-9])\2); # in perl	4
^[AKQJT2-9]([hscd])[AKQJT2-9](?!\1)[hscd]$	1
^[AKQJT2-9]([hscd])[AKQJT2-9](?!\1)[hscd]$	1
^[AKQJT2-9]([hscd])[AKQJT2-9](?!\1)[hscd]$	1
^([AKQJT2-9])([hscd])(?!\1)(?!.\2)[AKQJT2-9][hscd]$	1
(\'|")((?:(?!\1).)*)\1	2
$str =~ s/\b((\w+)\s+\2)\b/[\1]/g;	4
\b(\w+)\s+\1\b	2
$str =~s{\b(\w+)(\s+)\1\b}{[$1$2$1]}g;	2
<(?<Tag>font|span)\b(?<Attributes>[^>]+)>(?<Content>.+?)</\k<Tag>>	2
(\W{2,})(?=\1+)	2
(\W{1,9})(?=\1{2,})	1
(\W{1,5})(?=\1+)	2
(\W{1,9})(?=\1+)	2
(\W{2,}?)(?=\1+)	2
(?:^|(.)(?!\1))(.)(?!\2)	4
(?:(.)\1+)*(.?)	1
(?:^|(.)(?!\1))(.)(?!\2)	4
(.)(\1)+	3
echo $PATH | sed -n -e "s/^.*\/1-1\.\([0-9][0-9]*\).*/\1/"	1
sed -n -e "s/^.*\/1-1\.\([0-9]\+\).*/\1/"	1
([a-zA-Z0-9])\1\1	1
sed -r 's/(^|,)([0-9]{3}-[0-9]{4})(,|$)/\1208-\2\3/g' contacts.csv	1
sed -n '/color/ s/.*color:[[:space:]]*#[[:space:]]*\([[:xdigit:]]\+\)[[:space:]]*;.*/\1/p'	1
sed -n '/color/ s/.*color: *#\([^;]\+\);.*/\1/p' css_file	1
^(?:\b(?:(?!(?:Dave|Imma|Dive)\b)\w+[ \t]+)*(?:Dave()|Imma()|Dive())[ \t]*){3}$\1\2\3	1
sed 's/^\(\h*\)\(.*\)$/\1<!-- \2 -->/' web.xml	1
sed 's/^\([ \t]*\)\(.*\)$/\1<!-- \2 -->/' web.xml	1
sed 's/^\([ \t]*\)\(.*[0-9a-zA-Z<].*\)$/\1<!-- Security: \2 -->/' web.xml	1
(.)(?=.*?\1)	2
perl -ne '$_=reverse;s/(.)(?=.*?\1)//g;print scalar reverse;' FILE_NAME	2
s/(.)(?=.*?\1)//g	2
perl -pe 's/(.)(?=.*?\1)//g' FILE_NAME	2
perl -pe 's/\G$1//g while (/(.).*(?=\1)/g)' FILE_NAME	4
perl -pe 's/(.)(?=.*?\1)//g'	2
X(?:A()|B()){2}\1\2Y	1
sed -e 's,.*|\(.*\)|.*,\1,'	1
sed -e 's,[^|]*|\([^|]*\)|.*,\1,'	1
sed -e 's,[^|]*|\(.*\)|.*,\1,'	1
sed "s/\(.*\)/\t\1/" $filename > $sedTmpFile && mv $sedTmpFile $filename	1
([a-z])\1{3}	1
([a-z])\1{3}	1
"ffffffff".matches("([a-z])\\1{3,}") = true	1
([a-z])\1\1\1	1
"asdffffffasdf".matches("([a-z])\\1{3,}") = false	1
"fffffasdf".matches("([a-z])\\1{3,}") = false	1
| sed -n 's/.*\[\(.*\)\].*/\1/p'	1
sed -n "s/.*\[\(.*\)\].*/\1/p"	1
^(?!.*?(.).*?\1)[lrsa]*m[lrsa]*$	4
'#(?:\b(?>great\b()|leather\b()|shoes\b()|\w++\b)\W*+)++\1\2\3#i'	2
sed -si 's/\([a-zA-Z]\+\)\(\[[^\]]*\]\)/\.\1(\1\2)/g' SignalData	4
(\W)\1{N-1,}	1
echo /foo/1-1.962/sing | sed -e  "s#.*/1-1\.\([0-9]\+\).*#\1#"	1
(?!(([\"'])(?:\\\\?+.)*?\\1))	4
"([\"'])(?:\\\\?+.)*?\\1"	1
\:([\d\w]+)|\1	2
(?<=:(\w+)\b.*)\1	2
%s/\[\(\d\+\),\s\+\d\+,\s\+\(\d\+\),\s\+\(\d\+\)\]/[\1, 2, \2, \3]/	1
1,$s/\[\(\d\+\),\s\+\d\+,\s\+\(\d\+\),\s\+\(\d\+\)\]/[\1, 2, \2, \3]/g	1
:%s/\(\[[^,],\s*\)1,/\12,/	1
sed -r -e 's/\|([^|]+)\|/\\left|\1\\right|/g'	2
s/([0-9+]*)[^0-9+]*([0-9+]*)[^0-9+]*([0-9+]*)[^0-9+]*([0-9+]*)/\1\2\3\4/	2
"\(.*?\)".*?\1	1
(["\'])([^"\']+)\1	2
(["'])([^"']+)\1/	2
(["'])[^"']+\1	1
\((["'])([^"']+)\1,?.*\)	2
\((["'])([^"']+)[^\\]\1,?.*?\)	2
^\(.*\)$\n\1$	1
/(src|href)=("|').*?\/([^/]*?)\2/gi	2
echo "getFoo_Bar" | sed 's/^\(.\{7\}\)\(.\)\(.*\)$/\1\l\2\3/'	1
sed -n -e "/[0-9]/s/^[^0-9]*\([0-9]*\)[^0-9]*\([0-9]*\)[^0-9]*\([0-9]*\)[^0-9]*\([0-9]*\)[^0-9]*\([0-9]*\)[^0-9]*\([0-9]*\)[^0-9]*\([0-9]*\)[^0-9]*\([0-9]*\)[^0-9]*\([0-9]*\).*$/\1 \2 \3 \4 \5 \6 \7 \8 \9/p"	1
echo "foobarbaz" | sed 's/^foo\(.*\)baz$/\1/'	1
echo "foobarbaz" | sed -r 's/^foo(.*)baz$/\1/'	2
echo "foobarbaz" | sed -r 's/^foo(.*)b(.)z$/\2 \1 \2/'	2
sed -i 's/\([0-9]\{1,3\}\)\.\([0-9]\{1,3\}\)\.[0-9]\{1,3\}\.[0-9]\{1,3\}/\1.\2.xxx.xxx/g' mylogfile.log	1
sed -E -e 's/([0-9]+\.[0-9]+)\.[0-9]+\.[0-9]+/\1.xxx.xxx/g'	2
sed -i.bak -E -e 's/([0-9]+\.[0-9]+)\.[0-9]+\.[0-9]+/\1.xxx.xxx/g' file.txt	2
's/\(\<input[^>]\+\?\)alt\(=[^>]\+\?>\)/\1title\2/g'	1
.?|(..+?)\\1+	2
(..+?)\\1+	2
(..+?)\1+	2
.?|(..+?)\1+	2
(.{2,})\1+	1
less file.diff | sed -e "s/---\/dev\null\n+++ \(.*\)/--- \1\n+++ \1/"	1
sed -e "N; s/.*null\n+++ \(.*\)/--- \1\n+++ \1/" filename.txt	1
\b(\w+)\s+\1\b	2
(\b\w+\b)\W+\1	2
str.replaceAll("(\\.)\\1+", "$1")	1
sed 's|\x27\([^\x27[:space:]]*\)[[:space:]]|\x27\1|g	1
sed -e ":a" -e "s|\x27\([^\x27[:space:]]*\)[[:space:]]|\x27\1|;ta"	1
sed 'h;s/[^\x27]*\x27\(.*\)/\n\x27\1/;s/ //g;x;s/\([^\x27]*\).*/\1/;G;s/\n//g'	1
sed '/.*=.*\x27.*\x27.*/ {h;s/[^\x27]*\x27\(.*\)/\n\x27\1/;s/ //g;x;s/\([^\x27]*\).*/\1/;G;s/\n//g}'	1
[aA](.)\1{7}	1
\(([0-9]{3})\)([ .-]?)([0-9]{3})\2([0-9]{4})|([0-9]{3})([ .-]?)([0-9]{3})\5([0-9]{4})	1
sed "s/(\{0,1\}\([0-9]\{3\}\))\{0,1\}\([ .-]\{0,1\}\)\([0-9]\{3\}\)\2\([0-9]\{4\}\)/\1\3\4/"	1
\(?([0-9]{3})\)?([ .-]?)([0-9]{3})\2([0-9]{4})	1
sed '/^.\{0,74\}$/ b; :a;N;s/\(.\{75\}[^\n]*\)\n\(.\{75\}\)/\1 \2/;ta; s/\n/ /g' ebook.txt	1
dos2unix < ebook.txt | sed '/^.\{0,74\}$/ b; :a;N;s/\(.\{75\}[^\n]*\)\n\(.\{75\}\)/\1 \2/;ta; s/\n/ /g'	1
sed '/^$/! {:a;N;s/\(.\{75\}[^\n]*\)\n\(.\{75\}\)/\1 \2/;ta}' ebook.txt	1
(?!.*(.).*\1)	4
^(?!.*(.).*\1)[A-G]{7}$	4
.*(.).*\1	1
$str =~ s/ ([A-Z]) ([A-Z]) / \1\2 /g;	1
s/([A-Z]) ([A-Z])/\1\2/g	1
((.)(.))(\2\3)+	3
((.)(?!\2)(.))\1+	4
((.)\2{N}).*?((?!\2)(.)\4{M})	4
(.{2})\1+	1
(?=(.))\1{N}	1
(?=(.)(?!\1)(.))	4
(?=(.))\1{N}.*?(?=(?!\1)(.))\2{M}	1
(?=(?!\1)(.))\2{M}	4
sed 'h;s/[^=]*=[^=]*=*=#\(.*\)$/\1/;s/\([^=]\)#/\1/g;x;s/\([^=]*=[^=]*=\+#\).*/\1/;G;s/\n//g' inputfile	1
sed 'h;s/[^=]*=*=#\(.*\)/\1/;s/\([^=]\)#/\1/g;x;s/\([^=]*=\+#\).*/\1/;G;s/\n//g' inputfile	1
cat $rootFilename | perl -pe 's/Policy[ \t]+([a-zA-Z0-9_]+)[ \t]*[;=].*/\1/g'	2
sed -e 's/Policy[ \t]\+\([a-zA-Z0-9_]\+\)[ \t]*[;=].*/\1/g' $rootFilename	1
(A|B)|(\d)(\r\n\1|(\d))*	3
^([0-9])\1{3}$	1
^(?=([0-9]))\1{4}$	1
\b(the|and)\b\s*\1	1
(?<=(.))(?!\1)	1
%s/blockDontForget">\n*\s*<p><span><a\(.*\)<\/span>/blockDontForget"><p><a\1/g	1
sed -r 's/(....),(....),(.*\.ext)(http.*\.ext)/\1,\2,\3\n\1,\2,\4/g'	2
sed -r "s/([A-Z0-9,]{10})(.+\.ext)(.+\.ext)/\1\2\n\1\3/" < input	2
sed 's/\(\([^,]*,\)\{2\}\)\(.*\.ext\)\(http:.*\)/\1\3\n\1\4/' inputfile.txt	1
\w*(\w)\w*\2	1
:%s/^\(\s*println(.*);\)\s*$/\/\/\1/gc	2
:%s/^\(\s*println(.*);\)\s*$/\1\/\/comment/gc	2
1,$s/\(\d\)\(\d\d\d\)\(\d\d\)*\>/\3/g	1
1,$s/\(\d\)\(\d\d\d\)\(\d\d\)/\3/g	1
(?:<(?<tag>\w*)>(?<text>.*)</\k<tag>>)	2
(?:<(?<tag>\w*)>(?<text>.*?)</\k<tag>>)	2
(.+)\1	2
sed 's|\([^/]*/\)[^/]*\(/[^/]* .*\)|\1FOO\2|' filename	1
^(?:(.)(?!\1\1)){6,}$	1
$ echo 'key1 = "test string1" ; key2 = "test string 2"' | sed -r 's/ *([^ "]*) *("[^"]*")/\1\2/g'	2
's/\(.*\),\(.*\),\(.*\)"\(.*\)\" \(.*\),\(.*\)/\1,\2,\3 \4 \5 \6/g'	1
(\w+)\s+\1	2
(\d*?)\|([^|]+)\|([^|]+)\|(.{\1})\|	2
sed 's/.*pid \([0-9]*\).*/\1/'	1
value=(['"])(.+)\1	2
^(?:[A-z]{2}\d{3}[, ]*)|(?:\d{5}[, ]*)|(?:([A-z]{2})\d{3} ?- ?\4\d{3}[, ]*)|(?:\d{5} ?- ?\d{5}[, ]*)$	1
([A-Z]{2})\d{3}(?:\s*-\s*\1\d{3})?	1
(?:\b(?:\d{5}(?:\s*-\s*\d{5})?|([A-Z]{2})\d{3}(?:\s*-\s*\1\d{3})?)(?:,\s*)?)+	1
$package_name =~ s{^(\w+::w+)}{\1};	2
sed 's/\([0-9]\{2\}\)\([0-9]\{3\}\)\([0-9]\{3\}\)\([0-9]\)-\([0-9]\{3\}\.[0-9]\{3\}\)/\1.\2.\3.\4-\5/')	1
sed 's/\([0-9][0-9]\)\([0-9][0-9][0-9]\)\([0-9][0-9][0-9]\)\([0-9]\)/\1.\2.\3.\4/' in.txt > out.txt	1
sed 's/\([0-9][0-9]\)\([0-9][0-9][0-9]\)\([0-9][0-9][0-9]\)\([0-9]\)/\1.\2.\3.\4/' in.txt	1
echo "987654321" | sed 's/\([0-9][0-9]\)\([0-9][0-9][0-9]\)\([0-9][0-9][0-9]\)\([0-9]\)/\1.\2.\3.\4/'	1
sed 's/\([0-9]\{2\}\)\([0-9]\{3\}\)\([0-9]\{3\}\)\([0-9]\)\(-[0-9]\{3\}\.[0-9]\{3\}\)/\1.\2.\3.\4\5/g'	1
:s/.*\(word\).*\(word\).*\(word\).*/.*\1.*\2.*newWord.*/g	1
^(?=[1-4]{4}$)(?!.*(.).*\1).*$	2
.*(.).*\1	1
^(?:1()|2()|3()|4()){4}\1\2\3\4$	1
<([A-Z])\1*>	1
<[A-Z]([A-Z][A-Z])\1*>	1
<[A-Z]([A-Z]{2})(?i:\1*)>	2
sed -e 's/:/:00000/;s/:0*\([0-9]\{6,\}\)$/:\1/'	1
sed 's/<\([a-z]*\) \([^\/>]*\)\/>/<\1 \2><\/\1>/'	1
\1(?i)\1$	1
^(?=(a*)A*$)\1(?i)\1$	2
\1(?i)\1	1
^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\s)(?=(?:(\w)(?!\1{2}))+).{6,12}$	3
^(?=.*[A-Z])(?=.*\d)(?!.*(.)\1\1)[a-zA-Z0-9@]{6,12}$	2
(?!.*(.+)\1\1)	4
(?!.*(.)\1\1)	4
sed -re 's,[a-z]+(_[a-z]+)+,&_,g' -e 's,_([a-z]),\u\1,g'	1
cat *.[ch] | sed 's/\([_A-Za-z0-9][_A-Za-z0-9]*\)/\nzzz \1\n/g' | grep -w zzz | sed 's/^zzz //' | grep '_[a-z]' | sort -u > list1	1
cat list1 | sed 's/\(.*\)/glob_sub "\\<\1\\>" xxxx_\1/;s/\(xxxx_.*\)_a/\1A/g;s/\(xxxx_.*\)_b/\1B/g;s/\(xxxx_.*\)_a/\1C/g;s/\(xxxx_.*\)_t/\1T/g' | sed 's/zzz //' > list2	1
ca(([bt])\1*)?y	4
ca(([bt])\2*)?y	2
ca(([bt])\2)?y	1
ca([bt])\1*y	1
<((\w+)=\2)>|\(((\w+)=\4)\)|\[((\w+)=\6)\]	2
(\4d+)(\2d+)(\2d+)	4
sed -re 's|<a [^>]*>([^<]*)</a>|\1|g'	2
<(.*?)>.*?</\1>	2
<\s*([^>]+?)\s*>[^<]*</\s*\1\s*>	2
$pattern = "/<([\w]+)([^>]*?)(([\s]*\/>)|(>((([^<]*?|<\!\-\-.*?\-\->)|(?R))*)<\/\\1[\s]*>))/s";	2
"(?<=(^.*)\\G.*)(?<=\\G\\1.)"	2
"(?=(.*))(?<=(?<=(^.*))(?=\\2.\\1)\\G.*)"	2
"(?=(.*))(?<=(?<=(^.*))\\G.*)(?<=(?=\\2\\2.\\1)^.*)"	2
"(?=(.*))(?<=(?<=(^.*))\\G.*)(?<=(?=\\2.\\1)\\G.*)"	2
|<([^>]+)>([^<]*)</\1>|	2
((\d+)(?<type>[HV]))((\d+)\k<type>)*	3
<(\S+)[^<>]*>[^<]*</\1>	2
<([^<>]+)>[^<]*</\1>	2
:%s/^\(.*\)$/"\1"/	1
cat foo.txt | sed s/^\(.*\)$/"\1"/g	1
(?<=^|[\s,])(?:([\'"]).*?\1|[^\s,\'"]+)(?=[\s,]|$)	1
(?<=^|[\s,])(?:(['"]).*?\1|[^\s,'"]+)(?=[\s,]|$)	1
(?<N>.)+.?(?<-N>\k<N>)+(?(N)(?!))	3
sed -e 's/\([a-zA-Z]\)C/\1 c/g' infile.txt	1
(.)(\1)*	3
theString.matches("(.)\\1*")	1
^(.)\1*$	1
^((.)\2*)$	2
(["'])(?:\\\1|[^\1])*?\1	1
perl -ne "if (/<(script|style)>.*?<\/\1>/) { print $1; } " sample	4
<(?:(script|style)[^<]*(?:<(?!/\1)[^<]*)*</\1>|[!/]?[a-zA-Z-]+[^<>]*>)	1
^(\d+)$\r?\n?(?=[\s\S]*^\1$)	2
^(\d+)$\r?\n?(?=.*^\1$)	2
^1?$|^(11+?)\1+$	2
^1?$|^(11+?)\1+$	2
'(\S+)\s*?=\s*([\'"])(.*?|)\2	2
count_items=`curl -u username:password -L "websitelink" | sed -e 's/<\/title>/<\/title>\n/g' | sed -n -e 's/.*<title>\(.*\)<\/title>.*/\1/p' | wc -l`	1
echo '<div id="example""><a href="">title</a></div>' | sed -E -n 's/(.*<div.*<a href="">)([^<]*)(<.*<\/div>.*)/\2/p'	2
s/(:[^:])(.*)\1/$1$2/g	2
\b(\w+):(?=.*\b\1:?)	2
$subject =~ s/\b(\w+):(?=.*\b\1:?)//g;	2
regexp_replace('Thanks . . . .  ', '((\\W)\\s*)(\\2\\s*)+', '\\2')	3
(\W)(\s*\1)+	3
regexp_replace('Thanks . . . .  ', '(\\W)(\\s*\\1)+', '\\1')	3
select regexp_replace('Thanks ! !!!!!!!!', '(\\s*)((\\W)\\s*)(\\2\\s*)+', '\\1\\2');	3
echo '12 BBQ ,45 rofl, 89 lol' | sed  's/^.*,\([0-9][0-9]*\).*$/\1/g'	1
/[^\s>]+[\s]*(<([^>]+)>)(.*)(</\2>)[\s]*[^\s<]+/g	2
^1$|^(11+)\1+$	2
^(11+?)\1+$	2
^1?$|^(11+?)\1+$	2
sed 's/\([0-9]\+\) \+\([0-9]\+\) \+\([0-9]\+\)/\1.0 \2.0 \3.0/' file	1
:g/\([0-9]\+\) /s//\1.0 /g	1
:g/\.0\(  *\)$/s//\1/g	1
%s/shop_(*)/shop_\1 wp_\1/	2
%s/shop_\(.*\)/shop_\1 wp_\1/	1
%s/shop_\(.\+\)/shop_\1 wp_\1/	1
sed 's/\(.*\)/\1 ;NULL;NULL;1/' selection.csv	1
sed 's/\(.*\)/NULL;0;400;6;2010-07-27;\1/' selection.csv	1
sed -e 's/\([A-Z]\)[0-9]*/\1/g' -e 's/[0-9]*[^0-9A-Z]*//g' -e 's/[0-9]*$//' -e '/^$/d' < filename	1
^[\w\s]+=(["'])\w+?\1	1
^(\w+)\s+(\w+)\s*=\s*(['"])(['"]*)\3	2
(["'])\w+?\1	1
^(\w+)\s+(\w+)\s*=\s*(['"])((?:(?!\3).)*)\3	2
<\s*?img\s+[^>]*?\s*src\s*=\s*(["'])((\\?+.)*?)\1[^>]*?>	2
<\s*?img\s+[^>]*?\s*src\s*=\s*(["'])((\\?+.)*?)\1[^>]*?>	2
sed -i '/\([^|]*|\)\{17\}/{s/\([^|]*|\)/"\1/14;s/\(|[^|]*\)/"\1/16}' inputfile	1
sed -i '/\([^|]*|\)\{7\}/{s/\([^|]*|\)/"\1/4;s/\(|[^|]*\)/"\1/6}' inputfile	1
^\{(\d+)\}.{\1}$	2
s/\(_\)\(.\)/\u\2/g	1
:'<,'>s/\(_\)\(.\)/\u\2/g	1
s/0*([0-9]+)[0-9]{3}K/\1M/g	2
sed -e 's~\(http://[^/?]*\)=~\1~'	1
(?P<first>[a-z]+)_(?P<middle>\w+)_(?P<last>[a-z]+)|(?P=first)_(?P=middle)	2
@"\&lt\;(?<Tag>\w+).*?\&lt\;/\k<Tag>\&gt\;"	2
replaceAll("\\?i\\b(\\w+)\\b(\\s+\\1)+\\b", "$1");	3
"(?i)\\b(\\w+)\\b(\\s+\\1)+\\b"	3
(abc|def)( ?(\\d+|(?:(?!\\1)[a-z])+)?)*	3
"/\{(something(:else)?)\}(.*?)\{\/something\\2\}/is"	2
"/\{(something(:else|))\}(.*?)\{\/something\\2\}/is"	2
%s/\(.*|\S*\).\(.*\)/\1\2/g	1
egrep -v "(.)\1"	1
egrep "^((.)[^\1])*$"	4
echo "aacbb" | grep -E "(\w)\1"	1
sed -ne 's/^.*foo="\([^"]*\)".*$/\1/p'	1
sed -n 's/\(foo="[^"]*\)/\n\1\n/g;s/[^\n]*\n*foo="//g;s/\n"[^n]*$//p' file	1
'(\d+)(sheep){\1}'	2
(.*)<XYZ>\1	2
^([a-z]*)<[A-Z]*>\1$	2
"^([a-z]*)<[A-Z]*>\\1$"	2
<([A-Z][A-Z0-9]*)\b[^>]*>.*?</\1>	2
<([A-Z][A-Z0-9]*)\b[^>]*>(.*?)</\1>	2
echo 'first url, second url, third url' | sed 's/.*second \([^ ]*\).*/\1/'	1
echo 'first url, second url, third url' | sed 's/.*second \(url\)*.*/\1/'	1
<\s*form[^>]*\s+action=(["'])(.*?)\1	2
(.)X\1	1
sed -e 's/ *-\{0,1\},\{0,1\} *[Pp][Aa]\{0,1\}[Rr]\{0,1\}[Tt].\{0,1\} *\([0-9]\{1,\}\) *$/ (\1)/'	4
(\'|")([^\1\r\n]*)\1	2
(\'|")(.*)\1	2
(\'|")([^\1\r\n]*)\1	2
(\'|")(((?!(\1|\r|\n)).)*)\1	3
\d+ - (\d+) of \1	2
\d+ - (\d+) of \1	2
\d+\s+-\s+(\d+)\s+of\s+\1	2
([A-Z])?.*?([^A-Z]|\1)	1
([A-Z]).*\\1	1
([1-4])\1{3}	1
([1-4]).*\1.*\1.*\1	1
([1-4])\1{3}	1
(["'])(pattern)\1|^(pattern)$	1
^(")?(pattern)\1$	1
^(")?(pattern)(?(1)\1|)$	1
(['"])(?:(?!\1).)*\1	1
(['"]).*?\1	1
(t)[^\1]*?\1	1
(t)(?:(?!\1).)*\1	1
(t)(?:(?!\1).)*\1	1
s/X([^X]*)X([^Y]*)Y([^Y]*)Y/X\1X\2Y\1Y/	2
(.)\1+	1
regexp_replace(path,'/([^/]+(/[^/]+)?).*','\1');	4
\b([^\s\w])\w+\1\b	1
sed -e '/ \(.....\)*....1/s/^\([^ ]*\) .*$/\1/;t;d'	1
sed -e '/ \(.........\)*........1/s/^\([^ ]*\) .*$/\1/;t;d'	1
^ (?: a (?= a* (\1?+ b) b* (\2?+ c) ) )+ \1 \2 $	4
sed  -r -i 's/ ( *)/\1/g' in	2
Blah: (.*?), BLah Blah (.+?), \1	2
(.)(\s?\1)+	3
(.)(\s*\1)+	3
@"({.*?})(.*)\1"	2
(.)\1{2,}	1
sed -e 's/\(.*\)\(style="[^"]*"\)\(.*\)/AAA\1\nBBB\2\nCCC\3/g' test.txt	1
sed -e 's/\(.*\)\(style="[^"]*"\)\(.*\)/AAA\1\nBBB\2\nCCC\3/g' test.txt  | sed '/BBB/s/ //g' | sed -e :a -e '$!N;s/\nBBB//;ta' -e 'P;D' | sed -e :a -e '$!N;s/\nCCC//;ta' -e 'P;D' | sed -e 's/AAA//g'	1
/^(?:([a-zA-Z0-9-().&@?"#,+'\s\/])(?!\1\1)){7,}$/	2
<\?xml[^>]+>\s*<\s*(\w+).*?<\s*/\s*\1>	2
^(([a-z])(?1)?\2|[a-z]?)$	1
^(([a-z])(?1)\2|[a-z]?)$	1
^(?:((.)(?1)\2|)|((.)(?3)\4|.))$	4
^(([a-z])(?1)\2|[a-z]?)$	1
^((.)(?1)\2|.)$	1
^(.|(.)(?1)\2)$	1
^((.)(?1)\2|.?)$	1
sed -n 's/.*<a href="\([^"]*\)">.*/\1/p' input-file | xargs wget	1
(?(2)\2|)   # matches \2 if it exist, empty otherwise.	1
^(.)(.)(.) ... \3\2\1$	1
str.gsub(/\[url=\s*(?!http)([^\]]+)\](.*?)\[\/url\]/,'[url=http://\1]\2[/url]')	4
([a-zA-Z])\1{5,}	1
(\w)\1{5,}	1
(.)\1{5,}	1
(\w)\1{5,}	1
(.)\1{5,}	1
(.)\1+	1
(.)\1{3,}	1
@"(\r\n|\s)\1+"	1
(.)\1\1	1
(\r\n|\n|\r)\1+	1
/^(\d{1,2})(\/|-)(\d{1,2})\2(\d{2}|\d{4})$/	1
(\d+)\1	2
(\d)(?=\d*\1)	2
sed 's|^parts=.*,\(.*,-1\)$|parts=newPathX,newSizeX,\1|gi'	1
^(1[012]|0[1-9])([\/\-])(0[1-9]|[12]\d|3[01])\2((?:19|20)?\d{2})$	1
(\w*)\s\1	2
(?<=(.))(?!\1).*	1
(.)\1*	1
%s/\([^ ]\)  */\1 /g	1
s/\([^ ]\) \+/\1 /g	1
s/\(\S\)\s\+/\1 /g	1
^#?(\$\w+)\s*=.*[\r\n]+#?\1\s*=.*$	2
"<\s*img\s(?:.+?\s*=\s*(\"|')?.*?\1\s*)?/>"	1
(\w)(\w(?<!\1))\1(\w(?<!\1|\2))	4
(\w)(\w(?<!\1))\2	4
(\w)(\w(?<!\1))(\w(?<!\1|\2))\2	4
(\w)\1(\w(?<!\1))\2	4
(\w)\1(\w(?<!\1))	1
(\w)(\w(?<!\1))\1\2	4
\b(?=lol)\S*(\S+)(?<=\blol)\1*\b	2
\b(?=zomg)\S*(\S+)(?<=\bzomg)\1*\b	2
sed -i 's/page-\([0-9]*\)/apple-\1.html/' <filename>	1
"(V.\s+Guimaraes)\s*-\s*(FC-Porto\b).*?"\s+"\1\s*-\s*\2.*?"	2
$line =~ s/\/(\d+)\//\/\1+1\//;	2
(?:<(?P<tag>script|style)[\s\S]*?</(?P=tag)>)|(?:<!--[\s\S]*?-->)|(?:<[\s\S]*?>)	1
(?:(?:<(?P<tag>script|style)[\s\S]*?</(?P=tag)>)|(?:<!--[\s\S]*?-->)|(?:<[\s\S]*?>))|(?P<text>[^<>]*)	2
(\\w)\\1+	1
(a)\1	1
/<(\w+)(( to|from)=\"([^\"]+)\")+>.*</\1>/	2
sed 's/[^-\t]*\t[^-\t]*\t\([^-\t]*\).*/\1/' films.txt	1
^(\d)(?!\1+$)\d{10}$	2
([0-9]).*\1.*\1.*	1
([0-9]).*\1.*\1.*\1	1
%s!\v%(^http://%(www\.)?(%([^./]+\.)+[^./]+)%(/.*)?$\_.{-})@<=^http://%(www\.)?\1%(/.*)?\n!!g	2
var = (?:([`'"])(?:(?!\1).)*\1|[^\s;>]*$)	1
var = (?:([`'"])(?:(?!\1)(?:\\.|.))*\1|[^\s;>]*$)	1
sed -r 's/^\s*([0-9]+)\s*([0-9.e+]+).*/\1 \2/' file	2
(["'])((\\.|[^\1\\])*?)\1([\r\n]+)	3
(["'])((\\.|[^\1\\])*?)\1	3
(["'])(?:\\.|(?!\1).)*\1(?:[\r\n]+)	1
sed 's/\([^\t]*\t\)\{2\}\([^\t]*\).*/\2/' films.txt	1
sed -r 's/([^\t]*\t){2}([^\t]*).*/\2/' films.txt	2
^\(.*\)\n\1$	1
(.)\1*	1
^(?!(.)\1*$)[0-9A-Z]{0,25}$	4
(?!(.)\1*$)	4
("|'|[\s\S])(.*?)\1	2
(\[|\](^The ))\2	1
s|'\([^'"]*\)"\([^']*\)'|'\1\"\2'|g	1
:%s/\(.\|^\)&\(.\)/\1\\\&\2/g	1
s/return \(BBQ\);/exit(\1);\nreturn \1;/	4
'#<a[^>]*?href=("|\')?(.*?)[\\1|>]#is'	2
(["']).*?\1	1
s/<\(\w*\)/<\U\1/	1
([A-Z])\1	1
^([\t ]*)(?:abstract|class|interface).*?^\1\}	2
^(?:(\d)\1{4}){2}$	1
^(\d)\1{4}(?!\1)(\d)\2{4}$	4
((\d)\2{4}){2}	1
([\pS\pP])\\1+	1
(?:^|([\pS\pP])\\1+)((?:[^\pS\pP]|([\pS\pP])(?!\\3))*)	3
(?:[^\pS\pP]|([\pS\pP])(?!\\3))*	3
x(?:a(?P<a>))?(?:b(?P<b>))?(?:c(?P<c>))?((?P=a)|(?P=b)|(?P=c))	1
x(?:a())?(?:b())?(?:c())?(\1|\2|\3)	1
x(?:a(?<m>))?(?:b(?<m>))?(?:c(?<m>))?\k<m>	1
sed -n -e 's/^.*htm?\(.*jpg\).*$/\1/p' concept.htm	1
perl -pe 's/^.*htm?\(.*?jpg\).*$/\1/'	1
sed -n -e 's/^.*htm?\([^"]*jpg\).*$/\1/p'	1
echo "/home/repository/tags/1.9.1/1.9.1.8/core" | sed 's@/home/repository/tags/.*/\(.\+\)$@/home/repository/tags/XXX/\1@'	1
sed 's/a \(.*\) b/a {add.sh \1} b/g' input.txt	1
grep -e '^a .* b$' input.txt | sed -e 's/a \(.*\) b/\1/g' | while read LINE; do ./add.sh $LINE; done	1
sed 's/^\([^ ]* \)\(.*\)\( [^ ]*\)$/\1\"\2\"\3/' input.txt | xargs -L 1 ./add.sh	1
sed 's/^a \(.*\) b$/a \"\1\" b/' input.txt | xargs -L 1 ./add.sh	1
private const String regex = @"^(?:\b(?:\d{5}(?:\s*-\s*\d{5})?|([A-Z]{2})\d{3}(?:\s*-\s*\1\d{3})?)(?:,\s*)?)+$";	1
private const String regex = @"^(?:\b(?:\d{5}(?:\s*-\s*\d{5})?|([a-zA-Z]{2})\d{3}(?:\s*-\s*\1\d{3})?)(?:,\s*)?)+$";	1
@"^(?i)(?:\b(?:\d{5}(?:\s*-\s*\d{5})?|([A-Z]{2})\d{3}(?:\s*-\s*\1\d{3})?)(?:,\s*)?)+$"	1
PM_NUMBER=`cat um.htm | LANG=sv_SE.iso88591 sed -n 's/.*ol.st.*pm.*count..\([0-9]*\).*/\1/p'`	1
(.)\1	1
(s|strike)\]#si', '<strike>\\1<	1
find . -exec sed -r -e 's/(^.*)Copyright \(c\) 2008 - 2009/\1Copyright (c) 2008 - 2010/g' {} \;	2
find . -exec sed -r -i'' -e 's/(^.*)Copyright \(c\) 2008 - 2009/\1Copyright (c) 2008 - 2010/g' {} \;	2
s/^.*\(\d+\).*$/\1/	1
s/^.*\(:digit:\).*$/\1/	1
s/^.*String.*>\(.*\)<.*$/\1/	1
s/^.*String.*>\(\d+\)<.*$/\1/	1
s/^[^\d]*\(\d+\)<[^\d]**$/\1/	1
s/((.)\2)\2+/$1/g;	1
:%s/"\(\d\+\),\(\d\+\)"/"\1.\2"/g	1
grep -hP '^[ \t]+[a-z]*' *.s | sed 's/^[ \t]\+\([a-z]*\).*/\1/' | sort | uniq -c	1
(?<n>a)(b)\2(c)	1
(?<n>a)(b)\1(c) matches abbc where n is a, 1 is b and 2 is c	1
(b)\2	1
(?i)([aeiouy])(?!\1)[aeiouy]$	1
(?i)(?=[aeiouy]{2}$)(.)(?!\1).	1
(\S)(?![\s\S]*\1)	2
(.)\1*	1
(.)\1+	1
^(\d)(?:\1| )*\1$	1
(\*\*|__)(?=\S)([^\r]*?\S[*_]*)\1	2
^(\d)( *\1)+$	3
^(\d)(\1| )*\1$	3
^(?!.*@)(?!.*\d{4})(?!.*?(.)\1{3}).*$	2
@|\d{3}\d+|(.)\1{3}	1
/\[(.*?)\](.*?)\[\/\1\]/is	2
/\[(.*?)\](.*?)\[\/\1\]/	2
$str=~ s/(.)\1+/$1/g;	1
s/(.)\1/$1/g;	1
Regex.IsMatch("ab", @"^(?:(a)|\1b)$") == False	1
ISBN(?:-13)?:?\x20*(?=.{17}$)97(?:8|9)([ -])\d{1,5}\1\d{1,7}\1\d{1,6}\1\d$	1
(a|b){2}\1	1
echo "abcd MATCH1 STRING MATCH2 efgh MATCH1 ijk MATCH2 MATCH2 lmnop MATCH1" | grep -Po '^.*?MATCH1.*?MATCH2' | sed 's/^.*MATCH1\(.*\)MATCH2$/\1/'	1
echo "abcd MATCH1 STRING MATCH2 efgh MATCH1 ijk MATCH2 MATCH2 lmnop MATCH1" | perl -pe 's|^.*?MATCH1(.*?)MATCH2.*$|\1|'	2
sed -r 's/MATCH1/&\n/;s/MATCH2/\n&/;s/^.*\n(.*)\n.*$/\1/'	2
\[B\](.*?)\[\/B\] : **\1**	2
echo "/home/one/two/three/myfile.txt" | sed 's|\(.*\)/.*|\1|'	1
^((?<char>x)(?!\k<char>)|[^x\W])*$	3
^((?<char>\w)(?!\k<char>))*$	3
^((\w)(?!\2))*$	3
(.)\1	1
sed -i.old -E -e "s/#+[[:space:]]*print (.*)/logging.debug(\1)/" FILE	2
sed 's/STRING_1 \"(.*)\"/\1/g' FILE_1 >FILE_2	2
sed 's/.*"\(.*\)"/\1/' FILE_1 > FILE_2	1
Mr\.X, (["'])([^\1]+)\1 dedi\.	2
sed 's/STRING_1\s*:\s*"\([^"]*\)"/\1/g' FILE_1 >> FILE_2;	1
sed 's/.*STRING_1\s*:\s*"\([^"]*\)".*/\1/g' FILE_1 >> FILE_2;	1
/(\w)"(\w)/\1'\2/g	1
@"(\w)\1{2,}"	1
@"(\w)\1{2}"	1
(.*)\\2	2
(.*)\2	2
<a href=\"travis\.php\?theTaco=([0-9]+)\">\1<\/a>	2
(.*)\1	2
sed -r 's/.*href="([^"]*)".*/\1/' file	2
<([^/>]+)>([^<]*?)<\1>	2
^(EMAIL), \1$	1
s/\(\[[^ ]*\) /\1_/	1
m/DROP TABLE IF EXISTS (\`?)$tableName\1 || m/CREATE TABLE (\`?)$tableName\2/	1
'([ \w-]+)'", " `\\1'	2
M-x query-replace-regxp RET double \(a-z0-9+\) RET archiver & BOOST_SERIALIZATION(\1)	4
$str =~s/(\d)(\1*)/$1.(length($2)+1)/eg;	2
^(['"])​​​​​​​​​​​​​​.*?\1$	1
s/(\w+)\.(EntityState)/Get\2(\1)/	2
(\w)\1	1
s/(\w)\1/\($1$1\)/g;	1
\b(\w)\w+\s+\b(\w)\w+\s+\b(\w)\w+\s+\b(\w)\w+\s+\(\1\2\3\4\)	1
\b(\w)\w+\s+\b(\w)\w+\s+\(\1\2\)	1
\b(\w)\w+\s+\b(\w)\w+\s+\b(\w)\w+\s+\(\1\2\3\)	1
\b(\w*(\w)\w*(?!\2)\w+)\b	2
\bSccTeamFoundationServer\s*=\s*(['"]?)([^\1\n]*)\1	2
\v(^\s*)regexForFunctionName\(.*[^;](\n\1\{)?(\n$|\n\1\s.*){-}\n\1\s.*\zs(whatToFind)	2
:%s/^\([^.]*\)$/\1\/index.html/	1
set fresult [regsub -all {"((?:[^"\\]|\\.)+)"|([^,"]+)} $line {{\1\2} } fields]	1
/<(\S+).*>(.*)<\/\1>/	2
sed "s/foo_bar('\([^']*\)')/booch['\1']=$\1/g" infile > outfile	2
^1?$|^(11+?)\1+$	2
^(\w{1,})\1\s\w{1,}((?:\s\w{1,})?)+\s+&\s+\w{1,}\s(((?:\s\w{1,})?)+)\1$	2
%s/\\(replay-pattern-later\\) pattern2/\1/gc	1
find . -type file | sed 's!\(.*\)/\([^/0-9]*\)-\([0-9][^/]*\)\.\([^./]*\)$!\0 \1 \2 \3 \4!'	1
curl -u $1:$2 --silent "https://mail.google.com/mail/feed/atom" | perl -ne 'print "\t" if /<name>/; print "$2\n" if /<(title|name)>(.*)<\/\1>/;'	2
s@\n\((/\?s)\|(VOCAL_NOISE)\)\n@\1@g	1
str.replaceAll("(\\w)(\\1+)", "$2");	2
str.replaceAll("(\\w)\\1+", "$1");	1
^(?!.*([._%+-])\1)[\w.%+-]+$	4
^(?!.*([._%+-])\1)[A-Za-z0-9._%+-]+$	4
^(?:[0-9A-Za-z]+|([._%+-])(?!\1))+$	3
^([A-Za-z0-9]|([._%+-])(?!\2))*$	3
(?!.*([._%+-])\1)[A-Za-z0-9._%+-]+@(?!.*([._%+-])\1)[A-Za-z0-9._%+-]+	4
(?!.*([._%+-])\1)[A-Za-z0-9._%+-]+	4
^(?!.*([._%+-])\1)(?=.*@)[\w.%+@-]+$	4
(?!.*([._%+-])\1)[A-Za-z0-9._%+-]+@[A-Za-z0-9._%+-]+	4
(?!.*([._-])\1)(?=.*@)[\w.@-]+	4
/^(?:(?!([a-zA-Z0-9-().&@?""#,+''\s\/])\1\1)[a-zA-Z0-9-().&@?""#,+''\s\/]){7,}$/	4
^([a-z])lu([a-z])\2er$	1
([a-z])lu(?!\1)([a-z])\2er	4
@".*(?!(.)\1{3,})"	4
@"(.)\1{3,}"	1
^((.)\2{0,3}(?!\2))*$	3
/ *\([;:,.]\) */\1 /	1
echo $NUM | sed -r 's/^([0-9]{16})([0-9]{15})([0-9]{15,16}) ...$/\1,\2,\3, .../'	1
(\w)\1	1
(.)\1+	1
(.)\1	1
s#(dir1/)(?!tmp/)[^/]+#\1/dir3#;	1
^([a-zA-Z])([a-zA-Z])([a-zA-Z])\3([a-zA-Z])\1\1$	1
^(?=.*\p{Lu})(?:.*\p{Ll})(?=.*\d)(?=.*\W)(?!.*(.).*\1.*\1)	2
^(?=.*[A-Z])(?:.*[a-z])(?=.*\d)(?=.*\W)(?!.*(.).*\1.*\1)	2
> perl -pe "s/(\S+),\s*(\S+)/( firstname ='\1' and lastname = '\2' )/" input.txt	2
(.)\1	1
sed -re s/[^=,]*=([^,]*)/\1/g	2
<(tr|TR)[^>]*>.*<\/\1>	1
... | sed "s/[^0-9]*0*([1-9][0-9,.]*)/\1/g"	2
sed -i 's/test:(.*$)/\1/'	2
(.*)_\1	2
<(tagstart)>(.*?)</\1>	2
$ perl -nle 'print if /^((.)(?1)\2|.?)$/i' /usr/share/dict/words	1
^(?:((.)(?1)\2|)|((.)(?3)\4|.))	4
^((.)(?1)\2|.)$	1
^(.|(.)(?1)\2)$	1
^((.)(?1)\2|.?)$	1
$str =~ s/.*(group=\d+).*/\1/;	2
\s*'.$configname.'\s*=\s*("?)(?<value>.*?)\1\s*[\'$]	2
<(helpMe)>(?<value>.*?)</\1>	2
<(helpMe)>(.*?)</\1>	2
<([a-z][a-z0-9]*)\b[^>]*>(.*?)</\1>	2
/(\b\w\b)\s+(?=\b\w\b)/\1/g	1
(\d{1,2})([-/.])(\d{1,2})\2(\d{4})	1
ID=$(xinput list | sed '/TouchPad/s/^.*id=\([0-9]*\).*$/\1/')	1
ID=$(xinput list | sed -n 's/.*touchpad[[:blank:]]*id=\([0-9]\+\)[[:blank:]]*.*/\1/Ip')	1
(:)(.+?)\1	2
CREATE RULE ISBN_Rule AS @value LIKE 'ISBN\x20(?=.{13}$)\d{1,5}([-])\d{1,7}\1\d{1,6}\1(\d|X)$'	1
'ISBN\x20(?=.{13}$)\d{1,5}([- ])\d{1,7}\1\d{1,6}\1(\d|X)$'	1
(.)\1{2,}	1
(?!.*(.)\1{2})^[a-zA-Z0-9.,()-]*$	4
(?!.*(.)\1{2})	4
:a;s/\(\n[^\n]*\)_\([^\n]*\n\)/\1-\2/;ta	1
sed 's/\(.*href="\)\([^"]*\)\(".*\)/\1\n\2\n\3/;:a;s/\(\n.*\)_\(.*\n\)/\1-\2/;ta;s/\n//g' inputfile	1
/<\w+\s+[^>]*?(?<=\s)version\s*=\s*(["'])(.+?)\1[^>]*?\s*\/?>/sg	2
^(["'])(\\.|(?!\\|\1).)*\1$	3
s!.*\(/TOKEN.+TOKEN.*\)!\1!	1
echo "./a//...b/TOKEN/abc/TOKEN/xyz"|sed 's#.*\(/TOKEN/.*/TOKEN/.*\)#\1#'	1
<(\w+)>.*?</\1>	2
find . -type f -name '*.php' -exec sed -ne "s/.*setLabel('\([^']\+\)').*/\1/p" {} \;	1
\bflvFileName\s*:\s*("|')(?:\s*([^,\1\s]+)\s*,?)+(?<!,)\s*\1	2
(?!.*?(.)\1{3,})	4
(?<! [:\s] ) \s* ( ["'] ) (?: (?! \1 ) . )+ \1	1
if:b@\(:b@value:b@\):b@\n@:b@\{@:b@\n@:b@_select:b@\.:b@Add:b@\({.#}\):b@;:b@\n@:b@\}@:b@\n@:b@else:b@\n@:b@\{@:b@\n@:b@_select:b@\.:b@Remove:b@\(\1\):b@;:b@\n*:b*\}*	1
echo "toto tata titi" | sed -r "s/.*( .*?)$/\1/"	2
<ourTag\:([a-z]*[0-9]+?).*ID=\"\1\"	2
(['"]).+?\1 *<[^>]+>	1
"/^(?:20|19)[0-9]{2}([-.\\/])(?:0?[1-9]|1[012])\\1(?:0?[1-9]|[12][0-9]|3[01])$/"	1
sed 's/.*\([0-9]*:[0-9]*.[0-9]*\)elapsed.*/\1/'	1
 ?attribute_name=(['"]).*?\1	1
cat myfile | tr -d '\n' | perl -pe 's/.*?({{.*?}})/\1\n/g' | grep {{	2
"(?si)<(.*):Envelope.*<\\1:Body>"	2
host example.org | grep 'has address' | sed 's/\([a-zA-Z\\. ]+\)\([0-9\\.]+\)/\2/'	1
string regex = @"\[([^=]+)[=\x22']*(\S*?)['\x22]*\](.+?)\[/(\1)\]";	2
\[([^=]+)[=\x22']*(\S*?)['\x22]*\]|\[/(\1)\]	2
^(?=.*[A-Z0-9])(?!(.)\1*$)[A-Z0-9.,?_-]*$	2
^(["\']).*\1$	1
(href|src)=([\"|']?)([^ \"'>]+\.(jpg|png|gif))\\2	2
| [[\1 (Misuri)|\1]] || ciudad || \2	1
%s/\(emission_mazda_3_c1_zjz6_16_\)\(05\)\(_ho2s_front.xml\)/\104\3/	1
s/(emission_mazda_3_c1_zjz6_16_)(05)(_ho2s_front.xml)/\104\3/	1
sed -e 's/\(emission_mazda_3_c1_zjz6_16_\)\(05\)\(_ho2s_front.xml\)/\104\3/' input.txt	1
s/\(emission_mazda_3_c1_zjz6_16_\)\(05\)\(_ho2s_front.xml\)/\104\3/	1
sed -n 's/.*video=\([^"]*\)">/\1/p' inputfile	1
%s/([a-z])([A-Z])/\1\u\2/gc	1
%s/\(\l\)\(\u\)/\1\_\l\2/gc	1
([^"']+)(http:\\/\\/example.com\\/)([0-9a-zA-Z-\\\/\._]+)([\?]?)(.+?)\1	2
:%s/(\d+\.\d\d)\d+/\1/g	2
grep -E "([0-9]{3})\1" foo	1
s/([^\^])([A-Z]+|[0-9]+)/\1 \2/g	2
s/([A-Z]+|[0-9]+)/ \1/g	2
@"^(?!.*?([-'\s]).*?\1).{3,48}$"	4
@"^(?!([789])\1{8}$|0[024]).*$"	4
([789])\1{8}$	1
^(?:\b\d{1,2}(?:([, -])(?!\1)[, -]?|))+$	1
([abc123])(,\1)*	3
s!\d+,(.*2x4x 92 5/8 STUD GRADE FIR)!1234,\2!	2
^P([1-6]{1})(?!\1)([1-6]{1})$	1
^P([1-6])([^\\1\D07-9])$	1
P([1-6])[^\1A-Za-z0789]	1
+27 (\1)\2 \3 \4	4
s/([\W_]|=\*|->)\1+//g	1
s/([\W_]|=\*|->)\1+/$1/g	1
s/(==>|=\*|->|[\W_])\1+/$1/g	1
([^A-Za-z0-9\s]+)\1+	2
s/(?:^|(?<=\n))(.*)\n(?:\1(?:\n|$))+//g	2
perl -pe "s/([0-9]+)\s(.*)/'\1' '\2'/g" file > file2	2
^--(?:\[(=*)\[[\s\S]*?(?:\]\1\]|$)|[^\r\n]*)	2
sed -r 's,^(.*/ABC/[^/]+).*,\1,'	2
<(/?(?:b|i|u)|code\s[^>]+class\s*=\s*(['"]).*?\2[^>]*?)\s+>	2
sed -re 's/([A-Z]+)( )([A-Z]+)/\1-\3/g'	2
$ sed -re 's/ ([A-Z])/-\1/g'	1
sed 's/ \([^0-9]\)/-\1/g'	1
sed 's/\(.* \)\([0-9]*\)/("\1\2" "#\2")/' inputfile	4
sed 's/\(.* \)\(.*\)/("\1\2" "#\2")/' inputfile	4
sed 's/;\([0-9]*\),\([0-9]*\);/;\1.\2;/g;s/;\([0-9]{6}\)00;/;\101;/g;s/;\(\r\?\)$/\1/' inputfile	1
sed 's/;\([0-9]*\),\([0-9]*\);/;\1.\2;/g;s/;\(\r\?\)$/\1/' inputfile	1
sed 's/;\([0-9]\{6\}\)00;/;\101;/g'	1
sed -r 's/;([0-9]{6})00;/;\101;/g'	1
s/;\([0-9][0-9][0-9][0-9][0-9][0-9]\)00;/;\101;/g	1
\<(?<tag>[^ ]+)[^\>/]*(\>[^\<]*</\k<tag>\>|/\>)	2
s/\/([biu])([^/]\+)\/\1/<\1>\2<\/\1>/g	1
\b(\w+)\b\W*=\W*\w*\W*\bas\b[\s\S]{1,150}(?!\b\1\b\W*==\W*\bnull\b)	2
(.)(?<!\1.+)(?!.*\1)	2
(.)(?<!\1.+)(?!.*\1)(.)(?<!\2.+)(?!.*\2)	4
(.)(?<=^(?:(?!\1).)*\1)(?=(?:(?!\1).)*$)	2
regex: (?:(?!\1).)*\1	4
%s/\(.\+\)\n\(\C[A-Z0-9-]\+\)\n\(.\+\)/\1^I\2^I\3/	1
^(\d)\1*$	1
^(?!(\d)\1+$)\d{3}(?!0{2})\d{2}(?!0{4})\d{4}$	4
grep "public string .+$" < file | sed "s/public string (.+)$/\1/" > out	2
s#&\([^[:space:]]*\);#\&amp;\1;#g	1
s/\&\([^ ]*\);/\&amp;\1;/g	1
s/&([^ ]*);/&amp;\1;/g	2
(.)(?<!\1.+)(?!.*\1).*(.)(?<!\2.+)(?!.*\2)	4
perl -i.bak -pe 'BEGIN{undef $/;} s/^#ifdef blah.*(^#else blah(.*))?#endif blah/\2/smg' test.c	2
$whatever ~= s/#ifdef.*?(?:#else\n(.*?))?#endif/\1/si	2
<a href=(('|")[^\2]+?\2|[^>]+)	2
(.)\1+	1
(.)\1+	1
(.)\1{3}	1
%s/KEY (`.*`) (\(.*\)) USING BTREE/KEY \1 USING BTREE (\2)/gc	2
%s/KEY \(`.*`\) \((.*)\) USING BTREE/KEY \1 USING BTREE \2/gc	2
<(\w+).+src=[\x22|'](?![^\x22']+mysite\.com[^\x22']+)([^\x22']+)[\x22|'].*>(?:</\1>)?	2
s/^(\t*)  /\1\t/g;	2
ruby -ne 'print $_.gsub(/(.*class=")(.[^"]*)(".*)/, "\\1inputpink\\3"  ) if /name=/&&/type=/&&/value=/' file	4
.s/\([0-9]\+\)\(||.*\)$/\1/g	1
perl -pi -e 's/(\d+)/\1\l0/g' myfile.txt	2
perl -pi -e 's/(\d+)/\1 0/g' myfile.txt	2
:s/\v(.*) (.*) (.*) (.*)/\4 \3 \2 \1/	2
\1(tab)\2(tab)\3	1
sed -n '/^Important1.*$/s/^Important1: *\b\(.*\)\b */\1/p'	1
(?=((x+x+)+))\1y	2
s/(.*)\1/$1/g	2
echo "http://uploading.com/files/b76f5e86/hcadssoto720.part1.rar" | sed 's|\([^/]*/\)\{4\}\([0-9a-f]*\).*|\2|'	1
s/^(.*)\|(.*)$/\1|1|||\2|||/	2
sed -n 's/^.*>\([^<]*\)<.*$/\1/p'	1
Regex.Replace(html, "%<(\w+)\b[^>]*>\s*</\1\s*>%", "")	2
<(\w+)\s*>\s*</\1\s*>	2
<(\w+).+src=[\x22|'](?![^\x22']+mysite\.com[^\x22']+)([^\x22']+)[\x22|'].*>(?:</\1>)?	2
#<(\w+).+src=[\x22|'](?![^\x22']+mysite\.com[^\x22']+)([^\x22']+)[\x22|'].*>(?:</\1>)?#im	2
(xx - )(.*?)\1	2
^[^\s=(!@#)]\1*$	1
"MarkerBeg\s+(\w+)\s+(.*)\s+MarkerEnd\s+\1"	2
(.).*?\1	1
$ egrep -vi '(.).*\1' wordlist	1
echo "11/12/2011" | sed -E 's/([0-9][0-9]?)\/([0-9][0-9]?)\/([0-9][0-9][0-9][0-9])/\3-\2-\1/'	1
's: [[ [^\|]* | (.*) ]]:\1:g'	1
echo '[[target|visible]]' | sed -r 's:^\[\[[^\|]*\|(.*)\]\]$:\1:'	2
^1+:1$|^(11+):\1$|^(11+?)\2+:\2\2+$	2
(1)|(11+)\1*	2
'#^(.)\1{2,}#'	1
sed -r  's/"?([^"]+)*"?\s<?([^>]+@[^>]+)>?/["\1","\2"]/' <<< 'Hello World <helloworld@gmail.com>'	2
sed 's/\(:pro3:\).*/\1 "new value"/'	1
:%s /\\\([^\\]\{6\}\)[^\\]*/\\\1\~1\\/g	1
:s# ##ge|s#\v\\\zs(\w{6}).{-}\ze\\#\1\~1#&|s#\\$##&	1
:s# ##ge|s#\v\\\zs(\w{6}).{-}\ze\\#\1\~1#&	1
^(\3\d{4})-(\2\d\d?)-(\1\d\d?)$	4
/^\d{2}([.\/-])\d{2}\1\d{4}$/	1
/^(\d{2})([.\/-])(\d{2})\2(\d{4})$/	1
^(\d{2})(\/|-|\.)(\d{2})\2(\d{4})$	1
/<([A-Z][A-Z0-9]*)\b[^>]*>(.*?)<\/\1>/gi	2
$_ =~ s/\/\/(.*)###branchdb###/\1$arg/	2
~<(tag)>.*?</\1>~	1
~<([^>]+)>.*?</\1>~	2
$line =~ s/(?<=^|  )(\w+?, [\w ]+?.)(?=$|  )/"\1"/g;	2
sed 's/\(^[^.]*\.[^.]*\.\)\(.*$\)/\1/g'	1
sed 's/^\(\([^.]*\.\)\{2\}\).*/\1/'	1
sed -r 's/^(([^.]*.){2}).*/\1/'	2
:%s/\( ->\).*/\1/	1
sed -e 's/\([^.]\+\)\.\(.\)/\1.\u\2\.\2/'	1
's/\([a-h]\)/\U\1\E.\1/'	1
/<([A-Z][A-Z0-9]*)\\b[^>]*>(.*?)</\\1>/gi	2
^(={1,3})abc\1$	1
^(=+)abc\1$	2
(=+)[^=]+\1	2
<([bip])>.*?</\1>	1
^1?$|^(11+?)\1+$	2
sed -i "s/\$_REQUEST\[\([^\x5d]*\)\]/MYCLASS::myfunction(\1)/g" *.php	4
count\s*=\s*(["']?)\d+\1	1
sed 's;\(\(/[^/]\+\)*\)/train\(\(/[^/]\+\)*\)\.wav;\1/FOO\3.wav;'	1
's/\([0-9][0-9]*\).*/\1/g'	1
's/\([0-9][0-9]*\)/\1/g'	1
sed 's/([0-9]+).*/\1/g'	2
sed 's/^\([0-9][0-9]*\).*$/\1/' file.txt	1
sed 's/^.*\(\[URL.*\)$/\1/' file.txt	1
:s/^.*\(\[URL.*\)$/\1/	1
sed 's/^\(.*\)#.*$/\1/'	1
^(?!(.*(a|b|c|d|e|f|g).*(\2)))((a|b|c|d|e|f|g)+)$	4
r"([a-z])([^\1])([^\1\2]){2}([^\1\2\3])"	4
sed -i file 's/\(this\.label1\.Text = "Version      \)1.1.1.Beta\(";\)/\11.1.2.Beta\2/'	1
/^(\d{1,2})([\/.-])(\d{1,2})\2(\d{2})$/	1
/^(\d{1,2})([\/-\.])(\d{1,2})\2(\d{2})$/	1
(\w*)(?:(?= has recruited too many people today\.)|(?<=You are being recruited into the army of \1))	2
G; s/\n/&&/; /^\([ ~-]*\n\).*\n\1/d; s/\n//; h; P	1
^\([ -~]*\n\).*\n\1	1
sed -n 'G; s/\n/&&/; /^\([ -~]*\n\).*\n\1/d; s/\n//; h; P'	1
sed 's/\(\(.*;\)\{8\}\)O\(.\{3\}\);/\1\2;/g'	1
sed 's/\(\(.*;\)\{8\}\)O\(.\{3\}\);/\1\3;/'	1
sed 's/\(\([^;]*;\)\{8\}\)O\(.\{3\}\);/\1\3;/'	1
(?>(?<Quote>""|').*?(?<!\\)\k<Quote>)	2
echo "a[ 'xxx' ]" | sed "s/a\[ '\(.*\)' \]/a[ \1 ]/"	1
sed -r '$!N; s~\n~~; s~(<a )~\n\1~ig; s~[^<]*<a[^>]*href\s*=\s*"([^"]*)"[^\n]*~\1\n~ig' test	2
s/^\(\w\+\)\s*\(.*\)$/\1\t\t\t\2/g	1
@Pattern(regexp="^(?!(\\d)\\1{8})")	4
string.match(/([^-\s\w])\1*|[-\w]+/g); // works	4
(([^-\s\w])\2*|[-\w]+)	2
(([^-\s\w])\2*|[-\w]+)	2
echo 'my_file_name-02-and_some' | sed 's/.*[-_]\([0-9][0-9]*\)[-_].*/\1/g'	1
echo 'my_file_name-002-and_some' | sed 's/.*[-_]\([0-9][0-9]*\)[-_].*/\1/g'	1
sed 's/^.*\(.\)\([0-9][0-9]\)\1.*$/\2/;s/^.*(\([0-9][0-9]\)).*$/\1/;s/^.*\[\([0-9][0-9]\)\].*$/\1/'	1
twonum=`echo 'my_file_name-00-andsome' | sed 's/^.*\(.\)\([0-9][0-9]\)\1.*$/\2/'`	1
echo plop-02-plop | sed -e 's/^.*\(.\)\([0-9][0-9]\)\1.*$/\2/'	1
echo plop-02plop | sed -e 's/^.*\(.\)\([0-9][0-9]\)\1.*$/\2/'	1
sed -e '/^.*\(.\)\([0-9][0-9]\)\1.*$/!d;s//\2/'	1
sed -ne 's/^.*\(.\)\([0-9][0-9]\)\1.*$/\2/p'	1
\[start (\w+)\].*?\[end \1\]	2
sed -n '/openissues/p' test.txt | sed  's/.*(openissues)\(.*\)(\/openissues).*/\1/'	1
sed 's/.*(openissues)\(.*\)(\/openissues).*/\1/' test.txt	1
echo "06700|067|0055555" | sed -e 's/^\(06700|067|00\)\([0-9]*\)/\2/g'	1
sed -r 's/^(06700|067|00)([0-9]*)/\2/g' strings	2
Replace-regexp: \([0-9]+\)-\([0-9]+\) with: \1--\2	1
__\((\'|")([^\1]+)\1	2
__\(('|")(.*?)\1\).*	2
__\(('|").*?\1\).*	1
('|").*?\1	1
(a*b*)?\1*	2
([0-9]*)[a-zA-Z]{\1}	2
(?<=(.))\1	1
^(?!.*(.).*\1).*$	4
sed "s/\(1234\)/\n\1/g" input.txt > output.txt	1
$ sed "s/\(1234\)/\\`echo -e '\n\r'`\1/g" input.txt > output.txt	1
$ echo test1234foo123bar1234 | sed "s/\(1234\)/\\`echo -e '\n\r'`\1/g"	1
echo test1234foo123bar1234 | sed 's/\(1234\)/\n\1/g'	1
sed '/twolines/{G;s/\(two\)\(lines\)\(\n\)/\1\3\2/;}'	1
sed -e :a -e '/^[ \n]*$/{$d;N;ba' -e '}' -e '$ s/\([^ ]\)*?>[ ]*/\1?>/' file.php > new_file.php	1
(?!.*([1-9]).*\1)	4
(?!.*([1-9]).*\1)^[1-9]{1,9}$	4
^(?:([1-9])(?!.*\1))+$	3
^(?:([1-9])(?!\1))+$	3
^(?:([1-9])(?![1-9]*?\1))*$	3
$line =~ s/express(?<JARNAME>[a-zA-Z_]+?\.jar)/turbo\1/g;	2
([a-z])\1	1
^([a-zA-Z])\1+$	1
([a-zA-Z])\1	1
s/([^,]*,[^,]*,[^,]*),.+/\1/	2
s/([^,]*,){3}.+/\1/	2
echo "1 1 2 2 2 5" | grep -c -E '([^ ])( \1){1}' # Result: 1, expected: 2 or 3	1
:%s/\(\n\)\n\+/\1/g	1
#\[([a-z]+)\](.*?)\[/(\1)\]#i	2
\[(php)\].*?\[/(\1)\]	1
/\[(\w+)\](.*?)\[\/\1\]/s	2
\[(\w+)\].*?\[/\1\]	2
\[([a-z]+)\].*\[/\1\]	2
\[([a-z]+)\].*?\[/\1\]	2
Pattern.compile("^\\s*(?:(?!\\p{Digit}+\\b)(?!\1)(\\p{Alnum})\\p{Alnum}*\\s*)+\\Z");	2
"(?i)^(?:J()|U()|G()|[GLERS]()|\\w){4,}+$\\1\\2\\3\\4"	1
<([^>]+)>([^<]*)</\1>	2
:%s/\/\*\(\_.\)*\*\//\1/	1
:%s/\/\*\(\_.*\)\*\//\1/	1
sed 's/\(=.*\)tenure/\1disposition/g' file.txt	1
sed 's/=(.*)tenure/=\1disposition/g' file.txt	2
sed 's/\(=.*\)tenure/\1disposition/g'	1
sed 's/=\(.*\)tenure/=\1disposition/g'	1
sed -e 's/\(.*\)ABC/\1DEF/' myfile	1
sed -e 's/\(.*\)ABC/\1DEF/g'	1
sed -e 's/\(.*\)ABC$/\1DEF/g'	1
src=(["']).*?\1	1
<a[^>]+?href=('|")([^\1]+?)\1	2
^\d{4}(?:([.:])\d{4})?(?:-\d{4}(?:\1\d{4})?)?$	1
(\w)\1*	1
(\w)\1*	1
(bcd...)\1{2,}	1
([b-df-hj-np-tv-z])\1{2,}	1
(\w)(?<!.*?\1)	2
perl -e '$foo="This is a sentence"; while ($foo =~ s/((.).*?)\2/$1/ig)  { print "<$1><$2><$foo>\n"; } print "$foo\n";'	2
(.+) \1	2
'(.+) \\1'	2
r'(.+) \1'	2
<([a-z][a-z0-9]*)\b[^>]*>(.*?)(C=D;O=A){1}(.*?)</\1>	2
(\w+)\s+('|")([^\2\\]*(\\.[^\2\\]*)*)\2\s*;	3
1,$s/^classcode:[\t ]\+\([0-9]\+\)\/\([0-9]\+\)/classcode: \2\,\1/	1
perl -ne s/.*(http.*?.torrent).*/\1/ 1.html	2
sed /http.*.torrent/s/.*(http.*.torrent).*/\1/;/http.*.torrent/p 1.html	2
^([a-z])\1-([A-Z])\2.*	1
\b([a-z]+)((?:\s|<[^>]+>)+)(\1\b)	2
%s/^.*\.\(\w\+\.\w\+\)$/\1/g	1
%s/^.*\.\([0-9a-z\-]\+\.[0-9a-z\-]\+\)$/\1/g	1
std::string regx="(aaa)bb\\1"	1
"(aaa)bb\\1"	1
std::string regx="(aaa)bb\\1";	1
([1-9])([\1-9])\1(0)([\1-\2])\3\2	4
([1-9])(?!\1)[1-9]	1
([1-9])([1-9])(\1)0([1-9])\4\2	1
([1-9])((?!\1)[1-9])\10((?!\1|\2)[1-9])\3\2	4
([1-9])((?!\1)[1-9])\1[0]((?!\1|\2)[1-9])\3\2	4
(\"|').+?\1	1
new_output=`egrep -R -l "${images}" * | sed 's/.*\(slide[0-9]+\).*/\1/'`	1
sed -i.bak 's/^\("[^"]\+"\),\d\+,"X",-99,-99,-99,-99,-99,-99,-99,\([0-9]\+\),\([0-9]\+\)/\1,\2,\3/' FILE(S)	1
([0-9])\1*	1
\b(\d)\1+\b	1
^(\d)\1+$	1
\b(\d+)\1+\b	2
\b(\d)\1+\b	1
(\d)\1+	1
^(\d)\1+$	1
(\w)\1{2,}	1
r"(\w)\1{2,}"	1
(\w).*\1.*\1	1
(\w)\1\1	1
@(["'])[^]*?\1	1
^(.|()\d\d){N-1}\2	1
^(.|()\d\d){14}\2	1
:%s/  \([a-z]*\)/    \1/g	1
#(\h\h)\1\1	1
^#([0-9a-fA-F][0-9a-fA-F]?)\1\1$	1
^(?:([a-z\[\]])(?!\1{2,}))+$	3
^(?:([a-z])(?!\1{2,}))+$	3
(?!^.*?([@'_-]).*\1.*$)	4
(?!^.*?([.-]).*\1.*\1.*$)	4
(?!^.*?([.-]).*\1.*\1.*$)^.*$	4
(['"])((?:\\\1|(?!\1).)+)\1	2
([\'"])((?:\\\\\\1|(?!\\1).)+)\\1	2
(["'])(?<title>[^"']*)\1\s+by\s+(?<author>[\p{L}\s']+)\s*-\s*(?<comment>.*)$	2
echo $(cat ~/Desktop/test.html | sed -n "s/<title>\(.*\) - />\1</p")	1
sed -n "s/.*<title>\([^<>]*\) - .*/\1/p" ~/Desktop/test.html	1
<([A-Z][A-Z0-9]*)class=\"(byLineTag|byline|author|by)\"[^>]*>(.*?)</\1>	2
<([A-Z][A-Z0-9]*).*?class=\"(byLineTag|byline|author|by)\"[^>]*?>(.*?)</\1>	2
(\D?)\1*	1
^(?:(\D?)\1*\d+)+$	1
(?:(\D?)\1*\d+)+	1
~{(\w+)(.*?)}(.*?){/\\1}~si	2
sed -r 's/\s+(\S+)\s+/,\1,/'	2
/^.*?(?!<(a|b|i|u|em|strong).*?>.*?)\btest\b(?!.*?<\/\1>)/i	2
/^.*?(?!<(a|b|i|u|em|strong).*?>.*?)\b(?:kw1|kw2|kw3)\b(?!.*?<\/\1>)/i	2
sed 'h;s/.*,([a-z]+),.*/(\1)/;s/[aeiou]//g;x;s/([a-z]+),[a-z]+,([a-z]+)/\1: \2 /;G;s/\n//'	4
(?!.*(\d)\1)	4
^(?!.*(\d)\1).*$	4
(\d)\1	1
(\d)\1	1
(\d)\1	1
\\(stuff([0-9]+)\\)=[^\\1]	2
(stuff\([0-9]+\))=\1	2
M-x flush-lines RET \(stuff([0-9]+)\)=\1 RET	2
s/((?<!a)a|(?<!a|t)t)((?<!t)\1|t){3,6}(?!\2|t)/\U$&/gi	1
((?<!t)\1|t){3,6}	4
([abc])\1*	1
(["']).*?\1	1
([\'\']).*?\1	1
$ echo 'the blue dog and blue cat wore blue hats' | sed 's/blue \(dog\|cat\)/gray \1/g'	1
Console.WriteLine(Regex.Replace("cakkkkeee", "(.)\\1+", "$1"));	1
"(.)\\1+"	1
(.)\\1+	1
(.)\1+	1
([0-9])\1	1
([0-9])\1{8}	1
((?:[A-Z-])+)\1{1}	2
$line =~ s/([A-Za-z0-9]+-)\1+/\1/gi;	2
^([^-.]+)(?:-150x150)?\.png\b(?!.*\1-150x150\.png\b)	2
(.*)\1	2
:s/| \+\(.*[^ ]\) \+| \+\(.*[^ ]\) \+|/| \2 | \1 |/g	1
:s/\v\| +(.*[^ ]) +\| +(.*[^ ]) +\|/| \2 | \1 |/g	2
:s/\(|[^|]*\)\(|[^|]*\)|/\2\1|/g	1
@"\b(?<word>\w+)\s+(\k<word>)\b"	2
(.)\1{5,}	1
\<{(:a.*\:).*:a*}\>.*\<\/\1\>	2
$string =~ s/(\w+) ( \1)+/$1/g	3
((?:\b|^)[\x20-\x7E]+\s)(.*(\1))+	3
((?:\b|^)[\x20-\x7E]+)(\1)+	3
$string ~= /((?:\b|^)[\x20-\x7E]+\s)(.*(\1))+/$1/ig	3
((?:\b|^)[\x20-\x7E]+\s)(\1)+	3
$string =~ s/(\d+ (.*))( \d+ (\2))+/$1/g;	3
s/((old-string).*?){2}\2/\1\1new-string/	2
^(\w+)-(?=\1\b)	2
r'J:\\f[ruv]?o+\\\w+\\b[ae]r(\d+)?\\(?(1)TURI\1\d*|MONO\d+)\\\w+\.(dat|rtf|jpeg)'	2
r'J:\\f[ruv]?o+\\\w+\\b[ae]r(\d+)?\\(?(1)TURI\1\d*|MONO\d+)	2
(?(1)TURI\1\d*|MONO\d+)	4
<(\w+)(\s+(\w+)\s*\=\s*(\'|")(.*?)\\4\s*)*\s*>	3
<(\w+)(\s+(\w+)(\s*\=\s*(\'|"|)(.*?)\\5\s*)?)*\s*>	3
\1 (\3-2)\n\2\n	4
grep href page.html | sed 's/^.*href="\([^"]*\)".*$/\1/' | xargs | sed 's/ /,/g'	1
sed -i "s/\(\s\)#menu\(\s\)/\1#MENU\2/"	1
sed -i "s/\(\s+|[#.][a-z_][a-z0-9_-]*\)#pattern\(\s+|[#.:]\)/\1#PATTERN\2/"	1
sed -i "s/\(^|>\)#menu\($|<\)/\1#MENU\2/"	1
| sed -r 's/[ \t]#menu([#. \t])/ #MENU\1/g;s/([ \t]#[^ \t]+[.#])menu[ \t]/\1MENU /g'	2
s/([ \t]#[^ \t]+[.#])menu[ \t]/\1MENU /g'	2
| sed -r 's/([ \t])#menu([#. \t])/\1#MENU\2/g'	1
sed 's@<\([^<>][^<>]*\)>\([^<>]*\)</\1>@\2@g'	1
cat $FILENAME | grep "<tr><td>" | sed 's@<\([^<>][^<>]*\)>\([^<>]*\)</\1>@\2@g'	1
^([0-9])\1*$	1
"^([0-9])\\1*$"	1
^(\d)\1*$	1
<img\s([^>]*)style\s*=\s*('|\").*?\2([^>]*)>	2
('|")...\2	1
^(?!.*(.)\1)((?=.*[^\w\d\s])(?=.*\w)|(?=.*[\d])(?=.*\w)).{6,50}$	4
(.)\1{2,}	1
(LIKE|<|>|<>|=|IS(?: NOT)?|(?:NOT )?IN)\s*(([\"'\(]).*?\3|[^\s]+)	1
sed -e ':begin;s/\(.*(".*\)oldfoo\(.*").*\)/\1newfoo\2/;t begin'	2
([A-Za-z]+)=(?P<quote>['"])(.+?)(?P=quote)	2
cat regtest | sed 's/|\([0-9]*\)\.\([0-9]*\)0*|/|\1\.\2|/g'	1
cat regtest | sed 's/|\([0-9]*\)\.\([0-9]*\)0|/|\1\.\2|/g'	1
cat regtest | sed -r 's/(00*)([^.0-9])/\2/g'	2
cat regtest | sed -r 's/(\.[1-9])*(00*)(\|)/\1\3/g'	2
cat regtest | sed -r 's/(00*)(\|)/\2/g'	2
\b(\w+)\b(?<!\b\1\b.*\b\1\b)(?!.*\b\1\b)	2
sed -n -e 's!\([mM][iI][xX]\)!<font color="red">\1</font>!g;/[mM][iI][xX]/p'	1
$inner = "(:?\d{1,3}(?:([.,])\d{3})*(?:(?!\1)[.,]\d{2})?|\d*(?:[.,]\d{2})?)";	4
\(?([0-9]{3})\)?([ .-]?)([0-9]{3})\2([0-9]{4})	1
((\w)(?=\2))+\2	3
^(?!000)([0-6]\d{2}|7([0-6]\d|7[012]))([ -]?)(?!00)\d\d\3(?!0000)\d{4}$	1
REGEXP_REPLACE(num,'^(00|\+)?(\d*)(\@.*)?$','\2')	2
(\w)\1	1
s/(\w)\1/$1/	1
(.)\1	1
sed -r 's/.*app:([\s\w\d]*):.*/\1/'	2
sed -r 's/.*\:([^\:]*)\:.*/\1/'	2
\[([^=\[\]]+)[=\x22']*([^ \[\]]*)['\x22]*\](.+)\[/\1\]	2
sed -r 's/^([^ ]+) *= *(.+)$/<string name="\1">\2<\/string>/' < file	2
^(?=(Set-Cookie:\s*))(?:\1|.*?;\s*)(?:__[a-z]+|__utma_a2a|has_js|Drupal\.toolbar\.collapsed|MNO_abc_qrst_\d+)=[^;]*(?:;|$).*$	2
sed "s/summary(\(.*\))/print('\1')\n\0/" ...	2
<([A-Z][A-Z0-9]*)\b[^>]*>(.*?)</\1>	2
REGEXP '^(.)\1$'	1
s/^\(pm.max_children = \).*/\15/	1
s/^.*\(pm.max_children = \).*/\15/	1
s/^[#;]*[:space:]*\(pm.max_children = \).*/\15/	1
([0-9])[a-z];?(\1[a-z];?)*	3
([0-9])([a-z]*);?(\1([a-z]);)?(\1([a-z]);)?(\1([a-z]);)?(\1([a-z]);)?	2
^(?=.*(\w)(.*\1){1}.*$)((?!\1).)*\1(((?!\1).)*\1){1}((?!\1).)*$	4
^(?=.*(\w)(.*\1){1,2}.*$)((?!\1).)*\1(((?!\1).)*\1){1,2}((?!\1).)*$	4
^(?=.*(\w)(.*\1){2}.*$)((?!\1).)*\1(((?!\1).)*\1){2}((?!\1).)*$	4
^(.)(?!\1\1){8,}$	1
^(?:([a-z])(?!.*\1)){1,4}$	2
^[A-Z](?:([\- '])(?!$|\1)|[a-zA-Z\x{E0}-\x{EF}])+$	1
^[A-Z](?:([\- '])(?!$|\1)|[a-zA-Z\u00E0-\u00EF])+$	1
(?!.*(.)\1{3})	4
^(?!.*(.)\1{3}).*(?=.{8,})(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\Q~!@#$%^&*()-_=+[]{}|;:,.<>/?\E]).*$	4
\[(\w+).*?\].*?\[/\1\]	2
sed -r "s/([^0-9]+19.+)/\${color orange}\1\$color/" thisweek.txt	2
(.)\1\1	1
(.)\1\1	1
(.)\1{2}	1
((\w)\2{2,})	1
((\w)\2)	1
^([1-5])[abc](?!\1)([1-5])[abc](?!\1|\2)([1-5])[abc](?!\1|\2|\3)([1-5])[abc](?!\1|\2|\3|\4)[1-5][abc]$	4
sed -r "s/.*f?DocumentId=([0-9]+).*/\1/" testdata | paste -sd","	2
sed -r "s/.*=([0-9]+)$/\1/" testdata | paste -sd","	2
$ vi -c '%s/\(\(^[A-Z0-9]\+\)\s\+.*\n\)\(\2\s.*\n\)*/\1/' file.txt	1
/^\(\([A-Z0-9]\+\)\s\+.*\n\2\)\+	1
$ grep -Pzo "(?s)^(\s*)\N*main.*?{.*?^\1}" *.c	2
([\s.'-,])\1+	1
([\s.\'-,])\1+	1
s/([\s.'-,])\1+/$1/g	1
/([ _-,.])\1*/\1/g	1
~s/(?s)(Heading)\r(^\d*\w+\s*\d+:\d+|\d+:\d+)(.*?)(\d+)(.*?\r)(?=Heading)/\1 (\2-\4)\r\2\3\4\5/g;	2
(?=(\w+)(\1+))	4
(\w+)\1+	2
^(11+?)\1+$	2
$ perl -MEnglish -nle 'print "$PREMATCH<$MATCH>$POSTMATCH" while /(\w+)(\1+)/gi' /usr/share/dict/words	2
(?=(.*?)(\w+)(\2+)(.*))	2
^(11+)\1+$	2
(.+)\1+	2
$ perl -nle 'print length($2 . $3), " $`.$1<$2$3>$4" while /(?=(.*?)(\w+)(\2+)(.*))/gi' /usr/share/dict/words | perl -pe 's/\.//g' | uniq	4
(<\s*a\s[^>]*href=)(["\'])(?:[^\1]*;url=)([^\1]*)(\1[^>]*>)	2
(["'])(?:(?!\1).)*\1	1
(["'])(?:(?!\1).)+\1	1
^(?:(?!\1)a1()|(?!\2)a2()|...|(?!\n)an())*$	4
([T\s](([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)?(\15([0-5]\d))?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?	4
^(\s*)if \(DEBUG.*(?:\n\1  .*)*\n\1\}	2
(\d).*\1	1
$ echo "hello world doddy" | sed 's/\(.\) \([^\1]\)/\1\2/g'	1
[^1-7]|.{8}|(.).*\1	1
echo "hello world doddy" | sed -e 's/\(.\) \1/\1  \1/g' -e 's/\(.\) \(.\)/\1\2/g'	1
echo "hello world doddy" | sed -e 's/\(.\) \1/\1  \1/g' -e 's/\(.\) \(.\)/\1\2/g'	1
^(?!.*(.).*\1)[1-7]{0,7}$	4
grep -n "not found" < textfile.log | sed -n "s/.*\('.*'\).*/\1/p"	1
grep -n "not found" < textfile.log | sed -n "s/.*'\(.*\)'.*/\1/p"	1
sed -n "/not found$/ {s/^[^']*'\([^']*\).*/\1/; p}" filename	1
(?!.*(.).*\1)	4
^(?:[2-9][0-8][0-9])(?!(\d)\1+$)([2-9][0-9]{2}[0-9]{4})$	4
(?!(\d)\1{6})	4
(?!.*(.)\1)	4
^(?:[2-9][0-8][0-9])(?!.*(\d)\1)([2-9][0-9]{2}[0-9]{4})$	4
^(?:[2-9][0-8][0-9])(?!.*(\d).*\1)([2-9][0-9]{2}[0-9]{4})$	4
(.{3,})\\1+	1
sed -r 's/^\/src\/([^/]+)_([^/]+)\/\1$/\/src\/\2\/\1/'	2
<(\w+)\s*(?:\w+(?:=(?:'(?:[^']|(?<=\\)')*'|"(?:[^"]|(?<=\\)")*"))?\s*)*>(.*?)</\1\s*>	2
(\d\d)\1\1	1
(\d\d?)\1\1	1
(\d)\1\1	1
(.)\1	1
^(?!.?(.).?\1)(?i:[TPI]{1,3})$	4
(.).\1	1
^(?i:([TPI])(?!.*?\1)){1,3}$	4
{block:([a-z_-\s]+)}.*{/block:\1}	2
sed 's/\([a-zA-Z]\)\1\+/\1/g'	1
sed 's/@"\([^.]*\)\.png",/&\n@"\1",/' input	1
:g/{\(.*\)}\(.*\){\/\1}/s/{\1}.*{\/\1}/{\1}\2{\/\1}/	1
{\(.*\)}.*{\/\1}	1
find /myproject/templates -type f | xargs sed -i 's/{{\s*\(\S*\)\s*}}/{{ \1 }}/g'	1
(.).*\1	1
(.).*\1	1
(\d)(?=.*\1)	2
s/^.*\sfunction\s([^\(]*)\(.*$/\1/i	1
sed -i 's/[^=]*=\([^,]*\)/\1 /g'	1
echo 'T h e   t e x t   i s   W h a t   I  w a n t   r e p l a c e'|sed -r "s/(([a-zA-Z])\s){1}/\2/g"|sed 's/\  / /g'	1
s%\([][^$.\*]\)%\\\1%g	1
sed -i".backup" 's/<KEYS>([^<]*)<\/KEYS>/\1/g' somefile.xml	2
([a-z]*) ([a-z]*){\1.length}	2
/([^s])s$/\1/	1
^(?!\d)(?!.*(.)\1)(?=.*\d)[\w\d$@#]{8,10}$	2
^.*(.)\1+$   that ended with same letters..	1
((.)\2*)	2
<([A-Z][A-Z0-9]*)>.*?</\1>	2
str =~ s/([A-Z][a-z])/ \1/g;	1
:'<,'>/(\s\d)/\s\1\$/g	1
:%s/(\b\d)/$\1/g	1
:%s/\(\<\d\)/$\1/g	1
/(\s)([\d])/\1 $\2/g	1
sed 's/[^0-9.]*\([0-9.]*\).*/\1/'	1
:%s/\(\s\)\(\d\)/\1$\2/g	1
:%s/(\s)(\d)/\1$\2/g	1
(?<=,|^)([^,]*)(?=,)(?=.*,\1(,|$))	2
%([^']) --> /100\1	1
grep '\(.\)\1[^\r\n]$' *	1
Regex.Replace(tweet,@"(\S)\1{2,}","$1$1");	1
([a-z])(?!.*\1)([a-z])(?!.*\2)(.)(\3)(.)(\5)	4
(?=([^A-Z]*))(\1[A-Z])(?=([^A-Z]*))	2
((.)\2*)	2
((.)\1*)	4
((.)\3*)	2
r = '([abc])\1\1'	1
r = '(\w)\1{2}`	1
^(11+?)\1+$	2
^1?$|^(11+?)\1+$	2
^(1+)\1$	2
^(1?|^(11+?)\2+)$	2
sed 's/\([^:]\):/\1 /' data.txt	1
<(?P<foo>.*)>(.*)</(?P=foo)>	2
<(?<foo>.*)>(.*)</(\k<foo>)>	2
s/(.*)\/(.*)/\1.\/\2/	2
sed 's/^\(\d\.\)/0\1/;s/\.\(\d\)\./.0\1./g;\.\(\d\)$/.0\1/' INPUTFILE	1
^(\d{1,4})\n(?=\1$)	1
^(\d{1,4})\n+(?:\1\n+)*\s*(?:((?:(?:\w|[^\S\n])*[a-zA-Z](?:\w|[^\S\n])*))\s*(?:\n|$)|)	2
:while 1 | :%s/\(\(\d\+\) .*\)\n\2/\1, \2/g | :endwhile	1
:%s/\(\(\d\+\) .*\)\n\2/\1, \2/g	1
:'<,'>s/^\(\_.*\)\%V/<p>\1<\/p>/	1
|([\'"])(.*?)\1|i	2
/<([a-zA-Z][a-zA-Z0-9]*)\b[^>]*>(.*?)</\1>/	2
/Subject:/!d;s/.*CN=\(.*\)\([\/].*\)/\1/p	1
echo $string | sed -n '/Subject:/s/.*CN=\(.*\)\([\/?].*\|$\)/\1/p'	1
(?i:^\s*(create)\s+(aggregate|function|(unique\s+)?index|table)\s+)(['"`]?)(\w+)\4	2
(?i:^\s*(create(?i:\s+or\s+replace)?)\s+(aggregate|function|(unique\s+)?index|table)\s+)(['"`]?)(\w+)\4	2
(?i:^\s*(create(\s+or\s+replace)?)\s+(aggregate|function|(unique\s+)?index|table)\s+)(['"`]?)(\w+)\4	2
<([A-Z][A-Z0-9]*)\b[^>]*>(.*?)</\1>	2
s/\(.*=\)\([a-z]\)/ \2/	1
sed -r 's/.*PROTO=(\w+).*/\1/' yourFile	2
\(.\)\1\1	1
@"\b([a-z]+)\.\1"	2
(..+?)\1+	2
([0-9]|([0-9][0-9])|([0-9][0-9][0-9]))|(([0-9]|([0-9][0-9])|([0-9][0-9][0-9]))&&\3A&&[0-9])	1
:%s/.*\(\".*\"\).*/\1/	1
sed -re 's/([A-Za-z0-9_]*);/init->\1 = \1;/g'	2
s/([^\S\n]*)[^;\n]+?(\w+)\s*;/\1init->\2 = \2;/g	2
awk '{for(i=1;i<=NF;i++) if($i~/;/){ gsub(/\*/,"",$i);a=gensub(/(\w*);/, "init->\\1 = \\1; ","g",$i);printf a;}print ""}' yourFile	2
sed -re 's/[^;]* [*]?([A-Za-z0-9_]+) *;/init->\1 = \1; /g'	2
<\s*?img\s+[^>]*?\s*src\s*=\s*(["'])[[\\?+.]*?]\1[^>]*?>	1
:%s/"\(\d\+\)"/\1/g	1
:%s/\"\([0-9]*\)\"/\1/g	1
:%s/"\(\d\+\)"/\1/c	1
^(9)\1+$	1
\([a-zA-Z]\)\1\1	1
([a-zA-Z])\1\1	1
([a-z])\1{2}	1
^a([a-z])\1$	1
(.)\1{4,}	1
([^A-Za-z0-9])\1+	1
(.)\1+	1
(<pattern>)\1{min, max}	1
(.)\1{5,}	1
([a-zA-Z_:][-a-zA-Z0-9_:.]+)=(["'])(.*?)\\2	2
:s/\(\S\+\)/"\1"/	1
[^\w\s]|(.)\1	1
[^\w\s]|(.)(?=\1)	1
s.sub(/<([a-z]+)>([\s\S]+)<\/[a-z]+>/,"first=\\1 second=\\2")	4
perl -pe 's/(^|[.?!]\s*)([a-z])/$1\U\2/g' inputfile >outputfile	2
^([123])\s*(?!\1)([123])\s*(?!\1|\2)([123])$	4
^(\d)\s*(?!\1)(\d)\s*(?!\1|\2)(\d)$	4
^(abc).*?\1$	1
(ab[cd]) bbb \1	1
@"^(ab[cd]) bbb \1$"	1
echo "wares.php?id=5&x1=4&x2=33&x3=1" | sed "s|x1=\([0-9][0-9]*\)|x1=[1:\1]|"	1
echo " some_text =  '12.3.012';" | sed -r "s/[^']+'([.0-9]+)'\s*;/\1/"	2
'%(<overlay(?=\s)[^>]*(?<=\s)x\s*=\s*(["\']))\s*600\s*(\2[^>]*/?>)%'	2
echo '#include "..\etc\filename\yes"' | sed 's&\(#include.*\)\\&\1\/&g'	1
sed 's/^[0-9]\+ [0-9]\+ \(.*\) [0-9]\+ [0-9]\+$/\1/;s/ /_/g'	1
's/\<\([Aa]ssassin\)\>\(.*\)\<\([Hh]itman\)\>/\3\2\1/'	1
sed -r 's/^test[[:alnum:]]*\.([[:digit:]]+)\.out$/\1/'	2
(\w)\1{2}	1
sed -e 's/.*\[  *\(.*\)  *\].*/\1/'	1
sed -e 's/.*\[  *\(.*\)  *\].*/\1/' -e 's/ *$//'	1
\[(.*?)\].*?[/\1]	2
########TEMPLATEENGINE([^#]+)##############(((?!########TEMPLATEENGINE(?!\1)).)*)########TEMPLATEENGINE\1##############	3
return inputStr.replaceAll("(.)(?=.*\\1)", "").length() >= 3;	2
sed -r '/^\s*include/b;/^\s*! /b;G;:a;s/^(\.(not|and|or|eqv|neqv)\.)(.*\n.*)/\3\1/;ta;s/^\.([^0-9]{2,})(.*\n.*)/\2%\1/;ta;s/^(.)(.*\n.*)/\2\1/;ta;s/\n//'	2
cat /var/named/zonefile.db | perl -e "while(<>){ s/\d+(\s*;\s*[sS]erial)/20091218\1/; print; }"	2
:%s!\s*\([!<>=/*+-]\+\)\s*! \1 !g	1
(.?)(.?)(.?)(.?)(.?)(.?)(.?)(.?)(.?).?\9\8\7\6\5\4\3\2\1	1
sed -e :aloop -e 's/,[.]*{.*\(Glob.*\)},/,\1,/g;/,/N;//aloop'	1
sed 's/,[.]*{.*\(Glob.*\)},/,\1,/g'	1
(src\s*=([\'"]).*?(?=\2))	2
(0*) 1 \1	2
$str =~ s/(.*)\n(.*)?$/\1\n   \2/g;	2
$str =~ s/(.*?\n)/   \1/g;	2
([a-zA-Z]+)(?:[^ ]* ){0,5}\1[^a-zA-Z]	2
<\s*(?:img|input|area)\s[^>]*alt\s*=\s*("|\')([^\1>]*)\1[^>]*>	2
sed 's/.*"\([^"]*\)".*/\1/;s/<\([^>]*\)>/\1/' file | egrep "\.[a-z]{1,3}$"	1
sed 's/.*"\([^"]*\)".*/\1/;s/<\([^>]*\)>/\1/' file	1
sed '/MailingLists/d;s/.*"<\?\([^">]*\)>\?".*/\1/;' input_file	1
sed 's/^<outline text="\([^"]*\)" type="rss" xmlUrl=\("[^"]*"\) htmlUrl=\("[^"]*"\) \/>/<a href=\2 title=\3>\1<\/a>/' input_file	1
sed 's/<b>\(.*\)<\/b>/\1/g' [file]	1
s/<b>(.*)<\/b>/\1/g	2
sed -r 's/<b>(.*)<\/b>/\1/g' [file]	2
s/<b>\(.*\)</b>/\1/g	1
\{block:(Posts|Photos|Videos)(\s\[.*?\])?\}(\s?[^\"]+\s?)\{\/block\1\}	2
^(?:part[12]|(part)1,\12)$	1
^((part)1(, (\22))?)?(\4)?$	4
^((part)1(, \22)?)?(part2)?$	1
sfref=('|").*?\1	1
(.)\1{2,}	1
(?s)<(.+?)>\b\w+\b</\1>	2
(<([^>\s]*)[^>]*>[*<]*somethin[*<]*</\2>)	2
\bvalue\s*=\s*(["'])([^\1]*)\1	2
\bvalue\s*=\s*(['"])(.*?)\1	2
\bvalue\s*=\s*(["'])(?:(?!\1).)*\1	1
sed -e 's/.*\([^ ]*a\.site[^ ]*\).*/\1/g' input	1
/<span\b[^>]*\bclass=\s*(['"]?)forbes_entity\1[^>]*>[\s\S]*?<\/span>/ig	1
^(?:[*]())?date(?:(?!\1)[*](?:date)?|)$	1
$string =~ s/\b\w*(\w)\w*\1\w*\b//g;	1
"<a\\s+[^>]*href=(['\"])(.*?)\\1[^>]*>"	2
^(?!.*([a-zA-Z])\1\1)	4
sed -e 's/^Tests run: \([0-9]*\), Failures: \([0-9]*\), Errors: \([0-9]*\), Skipped: \([0-9]\).*$/\1,\2,\3,\4/'	1
cat test.log | sed -e 's/^Tests run: \([0-9]*\), Failures: \([0-9]*\), Errors: \([0-9]*\), Skipped: \([0-9]\).*$/\1,\2,\3,\4/'	1
@|com|yahoo|hotmail|gmail|googlemail|\d+|(\pL)\1\1	1
<f:validateRegex pattern="@|(\w)\1\1|com|yahoo|gmail|hotmail|googlemail|\d"/>	1
(@|(\w)\2\2|com|yahoo|gmail|hotmail|googlemail|\d)	1
LocText=(["']{1})([^\1]+)\1	2
<(\w+)>.+</\1>	2
:%s/^\([A-Za-z_]+\).*/\1/	1
sed -r 's/^.*(Queries.*)$/\1/'	2
"([A-Z][a-zA-Z]+)\\s+\\1"	2
([A-Z][a-zA-Z]+)\s+\1	2
\S*(.)\1{3,}\S*	1
^(?=.{8,})(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?:(.)(?!\1{3}))+$	3
%s/^\(rs[0-9]\{1,12\}\)-/\1\t/g	1
s/version is:(.*)/\1/g	2
^(?:(?!how).)*(how)(?:(?!\1).)*\1(?:(?!\1).)*$	1
<pre>sed -i "" -e 's/NSLocalizedString(\(.*\), \(.*\))/NSLocalizedStringFromTable(\1, table, \2)/g' "FILENAME"</pre>	4
\b([a-z])\w+\1\b	1
(\w+) text1: (.*?) \1 text2: \2	2
\b([1-9]|1[0-8])\b(?!.*\b\1\b.*)	2
^(?:foo()|bar()|baz()){3}\1\2\3$	1
echo 1234567890abcdefghijklmnopqrstuvwxyz | sed 's/[0-9]\+\(.*\)/X\1/g'	1
url\(\s*(['"]?+)(.*?)\1\s*\)	2
s/(?<first>foo+)/\k<first>bar/	2
sed 's/^/\n/;:a;s/\(\n[^"]*"[^ "]*\) \([^"]*"\)\n*/\1_\2\n/;ta;s/\n//;ta;s/\n//' file	1
sed -r ':a;s/"/\n/;s/"/\n/;:b;s/(\n[^\n ]*) ([^\n]*\n)/\1_\2/g;tb;s/\n/%%%/g;ta;s/%%%/"/g' file	2
sed -e 's,.*<title>\([^<]*\)</title>.*,\1,g'	1
s/\[(.*?)\]/<h1>\1<\/h1>/g	2
M-x query-replace-regexp \(<[^>]*>\) --> \1\n	1
cat ip6hdr.txt | xargs -n4 | sed '1,1s/\([0-9]*\) \([0-9]*\) \([0-9]*\) \([0-9][0-9]\)\([0-9][0-9]\).*/\1 \2 \3 \400 /'	1
echo "87 123 45 6"  | sed -re 's/([0-9])([0-9])/\2\1/g'	1
sed -e 's/\<\([0-9]\)\([0-9]\)\>/\2\1/g'	1
s/\(.*\).../\1/	1
sed 's/\(.*\)_download=\(.*\)/\2_\1/'	1
sed -E 's/\.(^M?)/\1/' testfile	1
(\d)\1{7}	1
^(?:12345678|(\d)\1{7})$	1
@"^(?:(?!123456789|(\d)\1{7}).)*$"	4
echo "aaa -Dprop=var Class arg" | perl -pe 's|.*?(-Dprop=([a-z]*))?.*?Class (.*)|\3 \2|'	2
echo "aaa -Dprop=var Class arg" | perl -pe 's|.*(-Dprop=([a-z]*)).*Class (.*)|\3 \2|'	2
echo "aaa -Dprop=var Class arg" | perl -pe 's|.*(-Dprop=([a-z]*))?.*?Class (.*)|\3 \2|'	2
perl -pe 's|^.*?(?:-Dprop=([\S]+))?\s+Class\s+(.*?)$|\2 \1|'	2
([0-9])(?!\1\1\1)[0-9]{3}	1
(\d)((?!\1)\d)+	3
^(\d)\1*$	1
[RegularExpression(@"(\d)((?!\1)\d)+")]	3
^(\d)\1*$	1
:%s/:\(\S\)/: \1/g	1
%s/:\([^ ]\)/: \1/g	1
^\d(?:\s?(?:(?!\1)(?:pcs|pc|pieces|piece|stk|bags|bag|boxes|box|bx)()|(?!\2)(?:male|m|female|f)()|)){2}$	4
s/([\d\w])\s([\d\w])/\1\n\2/gi	1
/(<)([a-z]+)(.*?>.*?)(\2)(.*?</\1>)/	2
(.+)\1{2,}	2
(.+?)\1{2,}	2
sed -e "s/^\([0-9]\{4\}\)\([0-1][0-9]\)\([0-3][0-9]\)\([0-2][0-9]\)\([0-6][0-9]\)\([0-6][0-9]\)/\1\/\2\/\3 \4:\5:\6/g" <filename>	1
([YMD])(?=\1)	1
(1|2|3)abc\d{\1 + 1}	1
(1|2|3)abc\1	1
"^(?:1()|2()|3())abc(?:(?=\\1)\\d{2}|(?=\\2)\\d{3}|(?=\\3)\\d{4})$"	1
([a-z])(?!.*\1)(?<!\1.{0,10})([a-z])(?!.*\2)(?<!\2.{0,10})(.)(\3)(.)(\5)	4
(a)\1	1
<([^>]+)>([^<]*<(?!/?\1)[^<]*)*<\1>	3
((\d)\2*)	2
^(?!.*(\d)\1{8})\d{8,}$	4
\<([^>]+)\>&lt;!\[CDATA\[\d*(.*)\]\]&gt;\</\1\>	2
^[\w\d][\w\d](?:([.-])[\w\d][\w\d])(?:\1[\w\d][\w\d]){,8}	1
^[[:alnum:]]{2}([-.])[[:alnum:]]{2}(?:\1[[:alnum:]]{2}){0,8}$	1
^[a-z0-9]{2}([.-])([a-z0-9]{2}\1){0,8}[a-z0-9]{2}$	1
(?:([A-Z]{3,}))(.|\n)*?\1	1
"(?:([A-Z]{3,}))(.|\n)*?\1"	1
s/(.*)HERE.*?THERE/\1/	2
^(\d)\1{3}\d{3}$	1
nmap gc :s/\(\<\|_\)\([a-zA-Z]\)\([a-zA-Z]*\)/\u\1\u\2\L\3/g<CR>	1
s/\(\<\|_\)\([a-zA-Z]\)\([a-zA-Z]*\)/\u\1\u\2\L\3/g	1
nmap gc :s/\(\<\\|_\)\([a-zA-Z]\)\([a-zA-Z]*\)/\u\1\u\2\L\3/g<CR>	1
/^[^\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\`\\1\\2\\3\\4\\5\\6\\7\\8\\9\\0\\_\\+\\=\\{\\}\\:\\"\\;\\\\\<\\>\\?\\,\\.\\/\ ]*$/	1
class=\"spell\"[^>]*>\s*<(\w+)>?\s*<(\w+)>?\s*(.*?)<\/\2>\s*<\/\1>\s*<\/a>	2
sed -i 's/\(font-family:\) \(.*[^;]\)\(;.*\)/\1 Verdana\3/g'	1
sed 's/[[0-9]\+] \([A-Za-z ]*[^-]\) -.*[^-]- \(.*\)/\1-\2/'	1
(^|.)(^|(?!\\1))(.)\\3$	4
(?:^(\d)\1$)|(?:^.*(\d)(?!\2{2})(\d)\3$)	4
(?:^(\\d)\\1$)|(?:^.*(\\d)(?!\\2{2})(\\d)\\3$)	4
sed "s/[0-9]{2}\:[0-9]{2}\:[0-9]{2}\(\.[0-9]{1,3}\)/\1/g" input_file.csv > output.csv	1
sed 's/\(:[0-9][0-9]\)\.[0-9]\{3\}/\1/g' input_file.csv > output.csv	1
sed 's,\(:[0-9]\{2\}\).[0-9]\{3\},\1,g'	1
sed "s/\([0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}\)\.[0-9]\{1,3\}/\1/g" input_file.csv > output.csv	1
(?<=(.))(?!\1)	1
<([^ >]+)[^>]*>string</\1>	2
target=$(echo $f | sed 's,_[0-9]\+\(\.[a-z]\+\)$,\1')	1
sed -n 's/^.*\(matched text regexp\).*/\1/w matched_text_file' source_file	1
(a|b)\1	1
(a|b)\1	1
(1|2)(3|4)\1\2	1
^(?!.*--)(?!.*(\(|\)|\+).*\1)(?:\D*\d\D*){11}$	2
"(\w)\1"	1
"(.)\1"	1
^((.)(?!\2))+$	3
(.)\1	1
\<a.+?href=(?<q>["'])(.+?)\k<q>.*?>([^\<]+)	2
re=^(.*?)\1+$	2
(.+?)(?=\1)	2
(.+?)\1+	2
\(?([0-9]{3})\)?([ .-]?)([0-9]{3})\2([0-9]{4})	1
([ABCD]).*\1	1
"([0-9]+?)\1+"	2
r"([0-9]+?)\1+"	2
(.+)\1\1	2
(.+)\1\1	2
(.+).*?\1.*?\1	2
echo "50.00.00..00.00" | sed 's/\.//;s/\(..\)$/.\1/'	1
'(?!.+?<(?!br>)[^ >]+>.+?<br>.+?</\\1>)'	4
sed -e 's/,[1][4]\([0-9][0-9]\),/,2\1,/'	1
's/,[1][4]([0-9][0-9])/,2\1/'	1
target\s*=\s*(?:(")\s*)?#Mobile\s*\1	1
target\s*=\s*(["']?)\s*?#Mobile\s*\1	1
target\s*=\s*(['"])(?=\1)\s*#MOBILE\s*(?<=\1)\1	1
(?P<q>['"])(?>((?!(?P=q)).)*)(?P=q)	3
\\d*(\\d)\\1{3}\\d*	1
\\d*(\\d)\\1{2}\\d*	1
\\d*(\\d)\\1{2,}\\d*	1
.*(\d)\1{3}.*	1
".*(\\d)\\1{3}.*"	1
sed -e 's/<TXT_accesp><p>\(.*\)<\/p><\/TXT_accesp>$/\1/g' example.xml	1
^(?:\b(\w+)\b\W*(?!.*?\b\1\b))*\z	3
\b(\w+)\b(?=.*?\b\1\b)	2
(?=(\d+))\w+\1	2
^(?=(\d+))\w+\1$	2
(?=(\d+))\w+\1	2
sed -e 's/"\([^"]*\)"/\1/g'	1
sed "s/\([^ ]\)\([ ]\)\([^ ]\)/\1\2\2\3/g; s/\( \|\[\)$a\( \|\]\)/\1$b\2/g; s/\([^ ]\)\([ ]\{2\}\)\([^ ]\)/\1 \3/g" file	1
^(\w+\b).*\b\1$	2
^(?:(\w+\b).*\b\1|\w+)$	2
perl -pe 's/^.*?(FIELD_A: (.*?),)?.*?$/\2/'	2
(['"]).+\1	1
var regex = /(<span\s+[^>]*?\s*class\s*=\s*('|")(?:\S+\s+)?highlight(?:\s+\S+)?\1[^>]*>).*?(<\/span>)/;	4
(<span[^>]+class\s*=\s*("|')highlight\2[^>]*>)[^<]*(</span>)	2
\\b([a-zA-Z0-9])\\1\\1+\\b	1
\(.*?(\b\w+\b).*?\1.*?\)	2
(\w)\1{2,}	1
([1-9]?[0-9])([-./]?)([1-9]?[0-9])\2([1-9]?[0-9])	1
N1([-\./])N2\1N3	1
<(h1|h2|code|pre)>(.*?)</\1>	2
(?i)(?:([a-z0-9])\\1{2,})*	1
A(.)B\1	1
(\d).*\1	1
"(?<=([0-9]))(?:(?!\\1).)*\\1(?!\\1)"	1
(?:([1245679])(?!\\1))+	3
:s/^\(\s\+\)private function __construct()/\1def __init__/	1
:s/^\(\s\+\)private function __construct()/\1def __init__/g	1
$regex = "/<(\S+)[^>\\/]*(?:\\/>|>(.*)</\\1>)/msi";	2
\b(\d+) ?= ?\1\b|[\'"](\w+)[\'"] ?= ?[\'"]\2\b	2
sed '/^Title/{N;/\nAuthor:/!{s/^\(....................\).*\n.*$/\1/;};}' test-file.txt	1
sed '/^Title/{N;/\nAuthor:/!{s/^\(.\{30,50\}\).*\n.*$/\1/;};}' test-file.txt	1
sed '/^Title/,/^Author/{//!d;s/^\(Title.\{25\}\).*/\1/}' file	1
([_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4}))|(FakeEmail:)|(Email:)|(\1\2)|(\1\3)	2
:v/% (fold)$/s/\(\\begin.*$\)/\1% (fold)	1
src=(['"])hello\1	1
^src=(['"])(.*?)\1$	2
src=(['"])(.*?)\1	2
"([\"'])(?:(?!\\1).)*\\1"	1
^@(.*)$\1\n	2
perl -pi -e "s%^@(.*)$\1\n(.*)$\2\n(\+)$\3\n%$1\n$2\n\+$1%mg" file.txt	2
...s/\(.\)\(.*\)/+\2/	1
sed -i '/^@/{h};/^\+/{x;s/\(.\)\(.*\)/+\2/}' file	1
C([A-Za-z0-9]{4})[DdRr][A-Za-z0-9]{4}-C(?!\1)([A-Za-z0-9]{4})[DdRr][A-Za-z0-9]{4}	1
@"C([A-Za-z0-9]{4})[DdRr][A-Za-z0-9]{4}-C(?!\1)[A-Za-z0-9]{4}[DdRr][A-Za-z0-9]{4}"	1
s_[a-z]\(.*\)Act_action\u\1_g	1
s_\([a-z]\w*\)Act_action\u\1_g	1
s_\([a-z]+\)Act_Action\u\1_g	1
s_\([a-z]\w*\)Act_action\u\1_g	1
^(((?=(?>.*?(::))(?!.+\3)))\3?|([\dA-F]{1,4}(\3|:(?!$)|$)|\2))(?4){5}((?4){2}|((2[0-4]|1\d|[1-9])?\d|25[0-5])(\.(?7)){3})\z	4
^(.*)$\r?\n(?=\1)	2
echo '1,3,"3,5",4,"5,5"' | sed -r 's|("[^"]*),([^"]*")|\1\x1\2|g;s|,|;|g;s|\x1|,|g'	2
src=(["\'])(.+)(?=\1)	2
sed -e 's/,/;/g' -e 's/\("[0-9][0-9]*\);\([0-9][0-9]*"\)/\1,\2/g'	1
sed -i 's/\<forms\([ -_]\)data\>/form\1data\1enhancements/' /path/to/files*	1
sed -r 's/.*\.([a-zA-Z]\()/\1/'	1
href\s*=\s*(["']).*?\1	1
(['"]).*?\1	1
(r"(.)\3")	1
(r"(.)\1\1")	1
(r"(.)\1\1+")	1
((?:(?:^|:)0+\\b){2,}):?(?!\\S*\\b\\1:0+\\b)(\\S*)	2
'/BEGIN_FOO_END/b; s/BEGIN_\(.*\)_END/(\1)/g'	4
sed 's/BEGIN_\([^F][^_]*\|F[^O][^_]*\|FO[^O][^_]*\|FOO[^_]\+\)_END/\(\1\)/g' file	1
sed 'h;s/BEGIN_\(.*\)_END/(\1)/;/^(FOO)$/g' file	4
public \1 \2\(\3\) \{\r\n\5return instance\.\2\(\4\);	1
('|")(\w+)\1	2
(?=['"](\w+)['"])(?:"\1"|'\1')	2
`\b(\w+)\s+(?!\1\b)`	2
reqrep ^([^\ ]*)\ /lang/blog/(.*) \1\ /blog/lang/\2	2
/(\{\{(#|\^)(.*?)\?\}\}(.*?)\{\{\/(\3)\?\}\})/	2
s/'\([A-Z]\)''/\1'/g	1
sed "s/\([[:alpha:]]'\)'/\1/g" file	1
^([^\0]*)(?>[^\0]*)\0\1	2
^(.*).*\0\1	2
's/^[a-z0]+(\d+).*$/\1/i'	2
(.{7}).*?\0.*\1	1
^(.*?)(.).*\0\1(?!\2)	2
perl -e ' $_="$first\0$second\n"; while(s/^(.)(.*?)\0\1/\2\0/gs) {print $1;}; '	4
(?<=\[(\w)\]).*(?=\[\/\1\])	1
(&lt;|<)[\s\/\?]*(\w+)(?<attributes>.*?)[\s\/\?]*(&gt;|>)(\n|.)*?<\/\2>	2
.?(.)\1	1
(?!.?(.)\1)[b-df-hj-np-tv-z]{3}	4
(.)\1	1
(([b-df-hj-np-tv-z])(?!\2)){2}[b-df-hj-np-tv-z]	1
(([b-df-hj-np-tv-z])(?!\2)){3}	1
cal | sed -e '1d; /^$/d; s/^\(...\)\?\(...\)\?\(...\)\?\(...\)\?\(...\)\?\(...\)\?.*/\2 \& \3 \& \4 \& \5 \& \6 \\\\/'	1
"\\b(\\w+)\\b\\s+\\1"	2
\b(\w+)\b\s+\b\1\b	2
echo "some text MYFUCNTION[paramName]" | sed -e "s/MYFUNCTION\[\([a-Z]*\)\]/\1/"	1
echo "some text MYFUNCTION[paramName]" | sed -e "s/.*MYFUNCTION\[\([a-Z]*\)\]/\1/"	1
(\w)\1{2,}	1
$sec_gi =~ s/.*?\|(\d{5,}).*/\1/;	1
(?<=<(b)>)[^>]+(?=</\1>)	1
([\w])\1([\w])\2	1
(.+)(?=.*\1)	2
([^"'])List Members\1	1
<([^ ]+)([ \t]+[a-zA-Z-]+=(["'])[^\3]+?\3)*[ \t]+class=(["'])[^\4]\4([ \t]+[a-zA-Z-]+=(["'])[^\6]+?\6)*>([^<]+)</(\1)>	3
:%s/\v(.{-})\t(.{-})\t(.{-})\t(.{-})\t(.{-})\t(.{-})\t(.{-})$/1:{\1}\t2:{\2}\t3:{\3}\t4:{\4}\t5:{\5}\t6:{\6}\t7:{\7}/g	1
sed -r 's/([0-9][0-9]\.)([a-z]*\.*)*footer/\1footer/g'	2
sed 'h;s/\([0-9][0-9]\.\).*\(\.footer\)/\1\n\2/;x;s/.*[0-9][0-9]\.\(.*\).footer/\1/;s/\./_/g;x;G;s/\(\n\)\(.*\)\1\(.*\)/\3\2/' file	1
#^([^=]*)=(["\']?)([^\2]*)\2$#	2
(?=.*([a-zA-Z])\1{2}).*	4
^.*([a-zA-Z])\1{2}.*$	1
^.*([a-zA-Z])(.*\1){2}.*$	2
^([a-zA-Z])\1{2}$	1
^.*?(.+)(\1).*?$	2
.+?(..{N,})\1	1
perl -pe 's|.*?((\d{1,3}\.){3})xxx.*|\1|'	1
(['"])(.*?)\1	2
sed ':a;s/^\([[:space:]]*\)[[:space:]]/\1_/;ta' file	1
^([\d,]+)\1$	2
^(.+)\1$	2
^([\d,]+)(?=\1$)	2
<!(--)?(?=\[)(?:(?!<!\[endif\]\\1>).)*<!\[endif\]\\1>	1
<!(--)?(?=\[)(?:(?!<!\[endif\]\1>).)*<!\[endif\]\1>	1
#<a [^>]*\bhref=(['"])http.?://((?!mydomain)[^'"])+\1 *>.*?</a>#i	1
sed 's/"\(CDM_\)\w*"/"\1Unusued"/g' File1.txt > File2.txt	1
sed -i.bak 's/"\(CDM_\)[^"]*"/"\1Unused"/' file1.txt	1
([a-z])\1	1
^(?!.*(.)\1{2})(?!.*(.)\2(.)\3).+$	4
(?!.*(.)\1{2})	4
(?!.*(.)\2(.)\3)	2
(\d)(\d)\2\2\1	1
(\d)\1\d\1\1	1
input.matches("((\\d)\\1\\d\\1\\1|(\\d)(\\d)\\3\\3\\2)");	4
([^\s\w])\1{2,}	1
(\d)\1*	1
s/\([0-9]\S*\)\n/\1 /g	1
s/$offer->\(.*\)/$offer['\1']/g	1
:%s/\\bold{\(.*\)}/\1/gc	1
%s/\\bold{\(.*\)}/\1/	1
\A.+?(\r\n|[\n\v\f\r\x85\u2028\u2029])[^\n\v\f\r\x85\u2028\u2029]+?\1?\Z	1
(([\'"])((\\\2|.)*?)\2)	3
((?<=[^=])([\'"])((\\\2|.)*?)\2)	3
sed 's/<meta content="\(.*\)" name="cover" \/>/<meta name="cover" content="\1" \/>/' [your-file]	1
sed -e 's/<[ ]*meta[ ]*content[ ]*=[ ]*"\(.*\)"[ ]*name[ ]*=[ ]*"cover"[ ]*\/*[ ]*>/<meta name="cover" content="\1" \/>/g'	1
s/([^-]|^)\bcat\b/\1cat_tastic/g	1
s/([^-])\bcat\b|^\bcat\b/\1cat_tastic/g	1
<resource.+?<propertyValue name=(["'])([^"']*)\1.+?</resource>	2
sed -i -r 's/(X.*)F500\.0/\1F5.0/g' yourFile	2
^(?!.*([._ ]).*\1)[a-zA-Z][a-zA-Z0-9._ ]{2,10}[a-zA-Z0-9]$	4
([._ ]).*\1	1
data.match(/(?=([\s]*))\1([^\/\\]+)\.(txt|doc)$/i)	4
(?<from>[0-9a-fA-F]{1,8})\s*:\s*\k<from>	1
~^(?:,|([^,])(?!\\1))+$~	3
le(?:,|([^,])(?!\\1))+m	3
([^,])(?=\\1)	1
(apple|orange|additionalTerm).*?\1.*?\1	1
<([^>]*)>[^<]*</\1>	2
<\s*([A-Za-z_]\w*)\s*([^\>]+)>(.*?)<\s*\/\s\1\s*>	2
<(\w+)>.*?</\1>	2
/<(/?\w+) .*?>/<\1>/	2
sed 's/\(X\).\(addEventListener\)(\(LevelUpEvent.GENERIC_LEVEL_UP, updateLevels\));/EventUtil.\2(\1, \3);/'	4
f( *+)o\1o|b( *+)a\2r	2
f([^o]?)o\1o|b([^a]?)a\2r	1
echo "<a href="http://example.com?q=man&amp;string=1&amp;bat=2">Link</a>" | sed -E 's/^href="(.*)&amp;/\1&/g'	2
<a(?=\s)(?:[^>"']|"[^"]*"|'[^']*')*?(?<=\s)href\s*=\s*(['"])([\s\S]*?)\1(?:"[\s\S]*?"|'[\s\S]*?'|[^>]*?)+>	2
sed -r 's/\\vvvec[[:space:]]*\{([^\}]*)\}[[:space:]]*\{([^\}]*)\}[[:space:]]*\{([^\}]*)\}/\\begin\{pmatrix\}\1\\\\\2\\\\\3\\end\{pmatrix\}/g' source	2
find src/ -type f -name '*.twig' -execdir egrep -o -- "\{\{ ?['\"][^|()}{]*\|[(trans) ^}]*\}\}" {} \; | sed "s/.*'\(.*\)'[^']*$/\1/" | sed 's/.*"\(.*\)"[^"]*$/\1/'	1
find src/ -type f -name '*.twig' -execdir egrep -o -- "\{\{ ?['\"][^|()}{]*\|[(trans) ^}]*\}\}" {} \; | sed "s/.*'\(.*\)'[^']*$/\1/" | sed 's/.*"\(.*\)"[^"]*$/\1/'	1
(foo|bar)(,\1)*	3
^(?!(\d)\1+$|(?:0(?=1)|1(?=2)|2(?=3)|3(?=4)|4(?=5)|5(?=6)|6(?=7)|7(?=8)|8(?=9)|9(?=0)){5}\d$|(?:0(?=9)|1(?=0)|2(?=1)|3(?=2)|4(?=3)|5(?=4)|6(?=5)|7(?=6)|8(?=7)|9(?=8)){5}\d$)\d{6}$	4
(?!123456)(\d)(((?!\1)\d{5})|((\d)(?!\1)\d{4})|((\d){2}(?!\1)\d{3})|((\d){3}(?!\1)\d{2})|((\d){4}(?!\1)\d))	1
echo 12345 | sed -n '/^\([0-9]\{1,4\}\).*/s//\1/p'	1
echo abc12345 | sed -n '/^[^0-9]*\([0-9]\{1,4\}\).*/s//\1/p'	1
^\(\w\+\).*\n\1\@!.	1
sed -e 's/developer\([^>]*\)>.*/\1/'	1
sed s/\\[\\[\([A-Za-z0-9\ ]*\)\\]\\]/\1/	1
echo "London has [[public transport]]" | sed 's/\[\[\([A-Za-z0-9\ ]*\)\]\]/\1/'	1
echo "London has [[public transport]]" | sed 's@[[][[]\([A-Za-z0-9\ ]*\)[]][]]@\1@'	1
(?!(\w)\1{10})	4
\b(?!AY)(?!(\w)\1{10})\w{2}\d{9}\b	1
(?!AY)(?!(.)\1{10})\w{2}\d{9}	1
(\w+)\1	2
(\d+)\1	2
sed -i 's/\(Provides\s*mysql\)/\1-5.5/g' my_file_containing_the_line	1
sed -i 's/\(Provides\s*\)mysql/\1mysql-5.5/g' my_file_containing_the_line	1
"s/\(Provides\)\(\s*\)\(mysql\)/\1\2mysql-5.5/g"	1
"s/\(Provides\)\(\s\)*\(mysql\)/\1\2mysql-5.5/g"	1
r"\w*(\w)\1\w*"	1
^(.)\1+$	1
^(.)\1*$	1
\b(\w)\1*\b	1
echo "a b _c d _e f" | sed 's/[^_]*\s*\(_[a-z]\)[^_]*/\1 /g'	1
sed 's|\([^/]+mp3\)$|\1|g'	1
$ cat test.txt | sed 's/.*\({.*}\)/\1/'	1
^[0-9]{3}([-|/]?)[0-9]{2}\1[0-9]{4}$	1
/^\d{3}(\/|-|)\d{2}\1\d{4}$/	1
\b(\w+),(?=.*\b\1\b)	2
^((.)(?1)?\2|.)$	1
sed '$!N;s/^\s*\n\(#matchee.*\)/\1/;P;D' file.txt	1
sed '$!N;l;s/^\s*\n\(#matchee.*\)/\1/;P;D' file.txt	1
/\[url=("?)(http://www\.google\.com)\1\](Google)\[\/url\]/	1
$ sed 's/std\(::\(memset|memcpy\)\)/${\1}/g'	1
(?:^|,)(?:\s*"(?=((?:[^"]+|"")*)"\s*(?:,|$)))?((?<=")\1|[^,]*)	2
(?<=,|^)([^,]*)(,\1)+(?=,|$)	3
perl -pi -e 's/<h2(.*)<\/h2>/<h1\1<\/h1>/g' *	2
$hostname =~ s/(.*?)\s+.*/\1/;	2
sed -r 's/^(.*NUM:)(.*NUM:.*)$/\2/'	2
(["'])(\\\1|[^\1])+\1	3
(["'])(?:\\.|(?!\1).)*\1	1
(["'])(?:\\.|(?!\1).)*\1	1
(?<=\s|^)(["'])(?:\\.|(?!\1).)*\1                    #based on Tim's	1
sed -ie 's/,\([a-zA-Z0-9/_]\+\)\(\.jpg|\.png|\.gif\)/,+\1\2/g' file.csv	1
sed 's#\(,\)\([^.,]\+\.\(jpg\|png\|gif\)\)#\1+\2#g' infile	1
's/,\([a-zA-Z0-9\/_]\+\)\(\.jpg\|\.png\|\.gif\)/,+\1\2/g'	1
sed -r -i 's/image([12])\.(jpg|png)/image\1.pdf/g'	1
sed 's/\(^\|,\)\([^,.]*\.\(jpg\|png\|gif\)\)\>/\1+\2/g' file	1
url\(\s*(['"]?)(.*?\.png)\1\s*\)	2
^(?:t()|u()|r()|t()|l()|e()|.)+$\1\2\3\4\5\6	1
([*-])([a-zA-Z\d]+)\1	2
sed 's/<div class=\"SectionText\">\([^<\/div>]*\)<\/div>/\1/g'	1
sed 's/<div.class="SectionText">\(.*\)<\/div>/\1/g'	1
^(((?=(?>.*?(::))(?!.+\3)))\3?|([\dA-F]{1,4}(\3|:(?!$)|$)|\2))(?4){5}((?4){2}|((2[0-4]|1\d|[1-9])?\d|25[0-5])(\.(?7)){3})\z	4
sed 's#<div class="SectionText">\(\([^<]\|<[^/]\|</[^d]\|</d[^i]\|</di[^v]\|</div[^>]\)*\)</div>#\1#g'	1
^(.).*\1$	1
 ^ (\pS) .* \1 $ 	1
^(?=(.)).*\1\z	1
^(?=(\w)).*\1\z	1
s/\([a-z]\) \([a-z]\)/\1\2/g	1
(?=([abcd]{4,}))(?=[bcd]*a)(?=[acd]*b)(?=[abd]*c)(?=[abc]*d)\1	2
Regex.Match(pw, @"(?i)(.)\1\1")	1
Regex.Match(pw, @"(.)\1\1", RegexOptions.IgnoreCase)	1
sed 's/\(\.[^.]*\.\).*/\1/' file	1
sed 's/\(install --with-some-params some_pkg_name\.\)\([0-9]\{5\}\)/\1 10001/g'	1
sed 's/\(install --with-some-params some_pkg_name\)\.\([0-9]\{5\}\)/\1.10001/g'	1
sed 's/\(install --with-some-params some_pkg_name\.\)\([0-9]\{5\}\)/\1'10001'/g'	1
:s/\([^0-9]\+[0-9]\+\).*/\1/	1
:s/\([^0-9]\+[0-9]\+\).*/\1/g	1
echo git@git.gitweb.com:/myModule-repo.git | sed 's%^.*/\([^/]*\)\.git$%\1%g'	1
^([A-Z])(?!.?\1)([A-Z])(?!\2)([A-Z])[a-z]\1\1\3$	4
<div\b(.*?)(\bid)\s*=\s*("|')specific_div\3([\w\W]*?)</div>	2
sed -e "s/<a href\=\\\'\/users\/[[:digit:]]\{16\}\\\'>\([^<]*\)<\/a>/\1/g"	1
cat test.txt | perl -pe "s/<a href=\\\'\/users\/\d{16}\\\'>([^<]*)<\/a>/\1/g"	2
s/([ACGT]*)_\1/$1/	2
([AB]).*?(?!\1)[AB]	1
([AB]).*(?!\1)[AB]	1
echo '\"One,Two, Three\" Four, Five, Six' | sed 's/\(\("[^"]*"\)\?[^",]\+\),/\1 |/g'	1
sed -e 's/=\([^" >][^ >]*\)/="\1"/g'	1
sed 's/\(=\)\([^ >]*\)/\1"\2"/g'	1
sed 's/^/\n/;:a;s/\n\("[^"]*"\|[^,]\)/\1\n/;ta;s/\n,/|\n/;ta;s/.$//' file	1
<(143|128|132|175)>.*?</\1>	1
(?<number>\d)=\s*(["']?)(?<value>.*?)\1(?=\s+\d=|$)	2
class=(["\'])(?:[\w\s])*?wp-caption[\s\1]	1
class=(["\'])(?:[\w\s])*wp-caption[\w\s]*\1	1
class\s*=\s*(['"])(?:(?!\1).)*wp-caption(?:(?!\1).)*\1	1
:%s/\v( \n)|\n/\1/g	1
NotifyPropertyChanged(Function() \1)	4
grep "myword" myfile | sed "s/.*\(myword\).*/\1/"	1
([a-zA-Z]+)[eE]:\s*\1[oO];.*	2
\([a-z]*\)\1e:\1o;	1
\([a-z]*\)e:\1o;	1
\([a-z]*\)e:.*\1o;	1
(\w+)[^\1]+	2
(\w+)(?:(?!\1).)*	2
^\(.*\)[eE]:\s*\1[oO];	1
:%s/def func_\(\w*\) (\(.*\)):\(\(\n\s\+.*\)\+\)/class \u\1 (object):\r\tmethod_\1 (self, \2):\r\t\3/g	4
((['"]).*?\2|\S+)	2
sed '/^#.*#$/{s/#//g;h;d};:a;G;s/Linux\(.*\)\n\(.*\)/\2\1/;ta;s/\n.*//' file.txt	1
sed '1{h;s/.*/A\tB/p;g};N;s/A\s*\(.*\)\nB\s*\(.*\)/\1\t\2/' file	1
sed -e 'N' -e 's/A\s*\(.*\)\nB\s*\(.*\)/\1\t\2/' file	1
sed -e '1i\A\tB' -e 'N;s/A\s*\(\S*\).*\nB\s*\(\S*\).*/\1\t\2/' file	1
(["'])((?:(?!\1)[^\\]|\\.)*)\1	2
(["'])((?:(?!\1).)*)\1	2
(['"])(.*?)\1	2
document\.createElement\((['"]*)(.+?)\1\)	2
sed -r 's:site1.com(/blog/[0-9]{4}/[0-9]{2}/[0-9]{2}):site2.com/\1:'	1
sed 's:site1.com\(/blog/[0-9]\{4\}/[0-9]\{2\}/[0-9]\{2\}\):site2.com/\1:'	1
^url\((['"]?)(.+?)\1\).*	2
(\S)\1\1+	1
<([^>]+)>([^<]{100,})<\1>	2
str.match(tag+"(\s*=\s*)((['"]*)(.+?)(['"]*)\1)");	4
(m\s*=\s*)((['\"]*)(.*)(['\"]*)\1)	2
(?:^|[ \t]+)((["\'])(\\\\\2|(?!\2)[\s\S])*?(?=\2)\2)|[ \t]{2,}	3
\s+((["\']).*?(?=\2)\2)|\s\s+	2
\s+((["\'])(\\\\\2|(?!\2).)*?(?=\2)\2)|\s\s+	3
(?:^|\s+)((["\'])(\\\\\2|(?!\2).)*?(?=\2)\2)|\s\s+	3
url=$(wget -qO - "http://originalurl.com/" | sed -n -e "s/.*var premium_download_link = '\([^']*\)';.*/\1/p")	1
sed -n -e "s/.*var premium_download_link = '\([^']*\)';.*/\1/p"	1
([^\w]?(\w.*?)(\s*=\s*)(['"]*)(.+?)(['"]*)\1)	4
sed -e 's/\([0-9]*\.\)\([1-9]*\)\(0*\)/\1\2/g' xmlFile.xml	1
echo "433.000" | sed -e 's/\([0-9]*\.\)\([1-9]*\)\(0*\)/\1\2/g'	1
sed -e 's/\(\.[1-9][1-9]*\)0*/\1/g' -e 's/\.00*//' xmlFile.xml	1
^(?>(?:123()|xyz()|abc()|.)+$\1\2\3)	4
sed 's/^\([A-Z ]*\) \(.*\)/\2\n\1|/;s/[A-Z]\{2\}/|&/;s/\([^|]*|\)\(.*\)/\2\1/;s/\([^A-Z0-9 ]\)/|\1/;s/\([^\n]*\)\n\(.*\)/\2\1/;s/|$//' file	1
:%s/'\(\([^']*\)\)'/"\1"/g	1
:%s/"\(\([^"]*\)\)"/'\1'/g	1
<([^>]*)>(.*?)</\1>	2
\?([^ ]*) -> \1	2
(.)\1+	1
([,x])\1+	1
cat pounds.xml | sed -r 's/([A-Za-z]+)&\\?#39;([A-Za-z]+)/\1\\u2019\2/g'	2
^(19|20)\d\d([- /.])(0[1-9]|1[012])\2(0[1-9]|[12][0-9]|3[01])$	1
([0-2]\d|30|31)(/.-)(0\d|1[0-2])\2\d{4}	1
\d+([-./])\d+\1\d+	1
grep -R '<[^>]\(*\)>&lt;\1&gt;' *.properties|more	1
sed 's/[^"]*"\([^"]*\)".*/\1/'	1
sed 's/^\([^"]\+"\)[^"]\+\(.*should be \)\([^"]\+\)/\1\3\2\3/'	1
sed -r 's/^([^"]+")[^"]+(.*should be )([^"]+)/\1\3\2\3/'	2
\b(\w+)\s+\1\b	2
"<(\\w+)></\\1>"	2
<(\w+)></\1>	2
"<(\\w+)></\\1>"	2
\b(\w+,\w+),(?:.*,)?\1\b	2
.*\b(\w+,\w+),(?:.*?,)??\1\b	2
~\b([a-zA-Z0-9]{2,})\b(?=.*\b\1\b)~	2
\b\d{4}(| |-)\d{4}\1\d{4}\1\d{4}\b	1
(?:^|(?<=(.)))(?!\1)(.)\2{n-1}(?!\2)	1
(.)\1{n-1}(?!\1)	1
(.)(?<!\1)	1
:1,$s/"\([0-9]*\),\([0-9]*\)"/\1\2/g	1
(\\d+?)\\1	2
find . -type f -exec sed -i.bak 's/^([A-Z])[\r\n]+(\w+)\b/\1\2/g' {} \;	2
((\\w)\\2+)(?=.*\\1)	4
\[(\w+)\].*?\[/\1\]	2
find . -type f | sed 's/\.\/\([0-9]\{4\}\/[0-9]\{2\}\/\)\(.*\)/mv & sites\/default\/files\/blog-images\/\2/'	1
find . -type f | sed 's/\.\/\([0-9]\{4\}\/[0-9]\{2\}\/\)\(.*\)/mv & sites\/default\/files\/blog-images\/\2/' | sh	1
(\p{L})(?=\1)	1
(^|(.)(?!\2))(\d)\3{3}(?!\3)	4
(\d)\1{3}	1
sed -re 's/^([^/]*)(\/B\/C\/)([^/]*)$/\1\2\1/' file	2
sed 's|^\(\(.\)/B/C/\).|\1\2|' file	1
sed 's/|^\(\([^/]*\)/wordB/wordC/\).*|\1\2|' file	1
sed -e 's/^.*\([a-fA-F0-9]\{12\}\).*$/\1/' file.txt > macs.txt	1
(.)\1{N-1}	1
(.)\1{N-1}(?!\1)	1
^(.)\\1{3}(?!\\1)|(.)(?<!(?=\\2)..)\\2{3}(?!\\2)	4
(.)(?<!\1.)\1{N-1}(?!\1)	1
r"(.)(?<!(?=\1)..)\1{N-1}(?!\1)"	1
([ABC]?)(?!.*\1)([ABC]?)(?!.*\2)[ABC]?	4
^([ABC])(?!\1)([ABC])?(?!\1|\2)[ABC]?$	4
\b(?=[ABC]{1,3})([ABC]{1})(?:(?!\1)([ABC]{1})(?:(?!\1)(?!\2)[ABC]{1})?)?\b	1
(?!\1)(?!\2)[ABC]{1}	4
^(([ABC])(?!.*\2))+$	3
\b(([ABC])(?!.*\2))+\b	3
sed -e "s/^[^ ]* \([^ ]*\) \([0-9]*\) \([0-9:]*\) \([0-9]*\) /\1 \2 \4 \3 /"	1
var string = /^(["'])(?:[^\1\\]|\\\1|\\\\|\\\/|\\b|\\f|\\n|\\r|\\t|\\u[0-9A-F]{4})*\1$/gi;	1
(['"])[^\1\\]	1
(['"])((?!\1|\\).|\\[bnfrt]|\\u[a-fA-F\d]{4}|\\\1)*\1	3
^(\d+)\1+$	2
(\d+).*\1	2
<%(?<begintag>[^>]+)%>(?<inner>(.+?))<%/\1%>	2
(?s)<%(?<begintag>[^>]+)%>(.+?)<%/\k<begintag>%>	2
^(?:(?!<(\w+)(\s+(\w+)\s*\=\s*(\'|")(.*?)\\4\s*)*\s*>).)*$	3
perl -lpe's/\b(.{80,300})\b/\1\n/g' file	1
$filename =~ s,^_\d+-(.*?)--(.*?)_(.*?)_$,\u\1 - \u\2 (\u\3),;	2
(?i)((3[01]|[12]\d|0?[1-9]|\d{4})([\s/.-]))?\b(1[0-2]|0?\d|(jan|febr?)(uary)?|ma(r(ch)?|y)|a(pr(il)?|ug(ust)?)|(sept?|oct|nov|dec)((em|o)ber)?|ju(ne?|ly?))\b(\3|\s)(((?(2)|3[01])|[12]\d|0?[1-9])(?(2)\d\d\b|\b,?\s+(20|19)?\d\d))?\s+(\d+([:.]\d+)+)?	2
sudo sed --in-place 's/^#\s*\(%wheel\s\+ALL=(ALL)\s\+NOPASSWD:\s\+ALL\)/\1/' /etc/sudoers	1
sed -i 's/^#\s*\(%wheel\s*ALL=(ALL)\s*NOPASSWD:\s*ALL\)/\1/' /etc/sudoers	1
^(0+)(\.\1){2}$	2
(.).*(?!\1)(.).*(?!\1)(?!\2)(.)	4
(?:<(em|b)[^<>]*?>)([^<>]+)(?=</\1>)	2
sed -n -e 'h;s/.*\(is .* and\).*/STRING1:\1/p;g;s/.*\(is .* end\).*/STRING2:\1/p'	1
WHERE word REGEXP '([a-z])\1{2,}'	1
sed -r -e "s/\t \((.*)\)/\t \1${x}/g"	2
sed -r "s/number (.*) string/number \1 num \1 string/" FILE	2
sed -i.bak -E "s/\\\@.(\S)/\\\@. \1/g" *.tex	1
sed -i.bak -E 's/(\\@\.)([^ \t])/\1 \2/g' *.tex	1
sed -i.bak -E 's/(\\@\.)([A-Z])/\1 \2/g' *.tex	1
^(a+)b\1b\1$	2
my $FILENAME_REGEXP = '^(|"|""")(?:[a-zA-Z]:[\\\/])?[\\\/]{0,2}(?:(?:[\w\s.-]++|\{\$\w+\}|%\w+%)[\\\/]{0,2})*\*?[\w.-]*\1$';	1
sed -e 's;^.*\(\[.*\]\).*$;\1;' inputFileName > outputFileName	1
sort inputFile | uniq -c | sed 's;^\s*\([0-9]*\)\s*\(.*\)$;\2, \1;'	1
sed -e 's;^.*\(\[.*\]\).*$;\1;' inputFileName > outputFileName	1
sed -e 's;^.*\[\([^+]*\).*\].*$;\1;'	1
sed 's/.*\[\(.*\):.*/\1/' file	1
sed -e 's;^.*\[\(.\{17\}\).*\].*$;\1;'	1
sed 's/,\([^ ]\)/, \1/g' someFile.php	1
s/([\s\w]+\w)\s*\(\d+\)/\1/	2
([A-Z])(?<=^\1*)(?=\1+$)	2
\G(?!\A(?:XXX?|III?)$)([A-Z])(?=\1+$)	2
:s/^\([^ ]*\) .*$/'\1': \1,/	1
sed -i 's/(WORD1).*(WORD3)/\1 foo \2/g' file.txt	1
$ sed -e 's/\([^ ]\+\) \+\([^ ]\+\) \+\(.*\)/\1 foo \3/' file.txt	1
sed -e 's/\([0-9][0-9][0-9][0-9]\):\([0-9][0-9]\)/\1 \2/g' local.csv > local07_nocolon.csv	1
find . -iname "*.css" | xargs sed -i "" "s|\(\ba\(,\|\.\|\s\|\b\)\[^\{\]\*\{\[^\}\]\*\)text-decoration\:none|a.\1text-decoration:underline;|g"	1
sed -i 's/"index\.php?page=\([^"]\+\)"/"\1\.html"/g'	1
sed -i 's/"index\.php?page=\(.*\)"/"\1\.html"/g' "$f"	1
sed 's/"index\.php?page=\(.*\)"/\1\.html/g'	1
sed -i 's/"index\.php?page=\([^"]\+\)"/"\1\.html"/g' "$f"	1
^.*?([BCR]|\$)\1+.*$	1
\bmy\((["']).*?\1\)(?:\b|$)	1
\b(\w+)\s+\\1\b	2
\b(\p{L})\1+\b	1
newname=$(sed -nE -e '/Page/s/^.*Page[[:blank:]]+([0-9]+)[[:blank:]]+Question[[:blank:]]+([0-9]+).*$/pg\1_q\2.pdf/p' "$filename.txt")	2
(\d)\1*\D	1
\1\,(upcase 2)\3	1
\1\,(upcase \2)\3	4
cat file.h  | sed -e 's/(.*)namespace FooBar[\s\n]{(.*)}/\1namesapce Foo \{ namespace Bar \{\2\}\}/g' | less	2
regsub -linestop -nocase -lineanchor -all {([a-z])\1+} $subject {\1} result	1
regsub -linestop -lineanchor -all {([a-z])\1+} $subject {\1} result	1
regsub -all {(.)(?=.*\1)} $subject {} result	2
{(.).*\1}	1
{(.)(?=.*\1)}	2
:1,$s/|\(s[0-9]\+\)|/|[[server:\1]]|/	1
:%s/^\([^|]*|\)\([^|]*|\)\([^|]*|\)\([^|]*|\)\([^|]\+|\)/\1\2\3\4[[server:\5]]/	1
:%s/\v^%(\|.{-}){3}\|\zs(\w+)/[[server:\1]]/	2
(?P<L>[a-c])(?P=L)+	1
(.)\1\1\1\1	1
.*(.)\1\1\1\1.*	1
([kpt])\1([aou])$|(?:(n)t)?([auo])$|([aeou][^aeiouyäö]+[aeiou])$|([auo][^aeiouyäö]+)$|([^aeiouyäö])(?!\6)([^aeiouyäö])(e)$|((?:[auo]i|[auo])[^aeiouyäö]*)([aeiouyäö])\10$	2
(.)\\1{2,}+	1
ACTIVITY_(\d*=)(.|\r|\n)*ACTIVITY_\1	2
ACTIVITY_(\d*=).*[\r\n]((?!ACTIVITY).*[\r\n])*ACTIVITY_(?!\1)	2
ACTIVITY_(\d*=)(.|\r|\n)*ACTIVITY_(?!\1)	2
results\|(\w+)\1\1	2
(\d+)\1	2
^.*?(['"])(.*?)\1	2
:%s#\v(^\d+-\_.{-})\ze(\n\d+-|%$)#<td>\1</td>	2
$input =~ s/^(\d{1,3})/<td>\1/;	1
$input =~ s/\n(\d{1,3})/<\/td>\n<td>\1/gm;	1
perl -plwe 's/(\pL)\1\K\1+//g'	1
s/(.)\1\K\1+//g	1
<((?:[a-z]+:)?[a-z]\w+)\b[^<>]+?>(.+)</\1>	2
(.)\1+	1
grep "<td>.*</td>" tmp.txt | sed 's/<td>\([0-9.]\+\).*/\1/g'	1
sed -n 's/<td>\([0-9]*.[0-9]*\).*/\1/p' tmp.txt	1
.*?\b(war|army|fighting|rebels|clashes).*?(\b(?!\1)(war|army|fighting|rebels|clashes)\b)	1
sed '/^<tr/,/^<\/tr>/!d;/<td/H;/^<\/tr/!d;x;s/\n//g;s/<td>/\n/2;s/.*\n\(\S*\).*/\1/' file	1
s/.*\n\(\S*\).*/\1/	1
sed "/<ul>/,/<\/ul>/ s|<p style='margin: 5px 0;'>\(.*\)</p>|<li>\1</li>|g" test.html	1
(?P<quote>["'`])?(?P<value>(?(quote)((?!(?P=quote).)|((?=(?P=quote)).){2})*|[^\s;]*))(?(quote)(?P=quote)|)	3
%s/^([123])(.+)/#\1\2/g	2
%s/^\([123]\)\(.\+\)/#\1\2/g	1
:%s/\v^([123].+)/#\1/g	2
(\s)*(<B>)*<(?<SPAN>\w*)(?:.*)>(?:.*)</\k<SPAN>>	2
Format: (\s)*(<B>)*<(?<SPAN>\w*)(?:.*)>(?:.*)</\k<SPAN>>	2
Data: (\s)*(<B>)*<(?<SPAN>\w*)(?:.*)>(?:.*)</\k<SPAN>>	2
sed -e 's/".*\/\(.*.jpg\)/\1/ig'	1
sed 's/".*\/\(.\+\.jpg\)"/\1/ig' file	1
sed "s/\(^[a-z,0-9]*\)\(.*\)\( [a-z,0-9]*$\)/\1\2 \1/g" desired_file_name	1
cat public/scripts/old.js | sed -e "s/$\.getScript\('(.)+'\);/$(cat \1)/g"  > public/scripts/new.js	1
replace(/&lt;(\w+)&gt;(.*)&lt;\/\1&gt;/gi,'<$1>$2</$1>')	4
$(?<=^(\d+).*)[\r\n]+^(?!\1)	2
cat myfile | sed -e "s#\(Fixed Pattern$A_Z_a_z*\(\)#\1 hello#g > newfile	1
num=$(sed 's/^.*D\([[:digit:]][[:digit:]]\).*/\1/' <<< "$f")	1
(['"])(.*?)\1|([^'"]+)	2
<\s*?img\s[^>]*?src=([\"']??)([^\"' >]*?)\1[^>]*?>	2
<\s*img\s[^>]*src\s*=\s*(["\']?)([^"\' >]*?)\1[^>]*>	2
<\s*img\s[^>]*src\s*=\s*(["']?)([^"' >]*?)\1[^>]*>	2
([^"' >]*?)\1	2
([^\1]*?)\1	4
s/&lt;blockquote.*written by \(.*\)&lt;\/i&gt;/[quote=\1]/g	1
perl -pe 's/&lt;blockquote.*?written by \(.*\)&lt;\/i&gt;/[quote=\1]/g' filename	1
sed '/&lt;blockquote.*written by .*&lt;\/i&gt;/!b;s/&lt;blockquote/\n/g;s/\n[^\n]*written by \([^\n]*\)&lt;\/i&gt;/[quote=\1]/g;s/\n/\&lt;blockquote/g' file	1
s/\n[^\n]*written by \([^\n]*\)&lt;\/i&gt;/[quote=\1]/g	1
grep -R '<([^>]*)>&lt;\1&gt;' *.properties | more	2
$str =~ s/((.)\2+)/$2 . length($1)/ge;	2
((.)\2+)	2
(.)\1+	1
$str =~ s/(.)\1*/$1. length $&/ge;	1
(\w+).*?(?=\1)	2
\b(\w+)\b.*?(?=\1)	2
:%s/n\([0-9]\)/nBulk\1/g	1
sed -E 's/([[:alpha:]]+)\-([[:alpha:]]+)/\1\2/g' doc.xml out.xml	2
sed 's/([0-9]{2})([0-9]{2})([0-9]{2})([0-9]{2})/\1:\2:\3:\4/g' mac_list	1
sed -e 's/\([0-9A-Fa-f]\{2\}\)/\1:/g' -e 's/\(.*\):$/\1/'	1
sed -e 's/\([0-9A-Fa-f]\{2\}\)/\1:/g' -e 's/\(.*\):$/\1/'	1
sed 's/^\([0-9A-Fa-f]\{2\}\)\([0-9A-Fa-f]\{2\}\).*$/\1:\2:/'	1
$ echo "[03/Jun/applications/somejunk/morejunk/ 200" | sed 's,\\([0-9]{2}/[a-zA-Z]{3}/\\).* \\([0-9]{3}\\),\1 \2,g'	1
sed 's;\[\([0-9]\{2\}/[a-zA-Z]\{3\}\)[^ ]*\(.*\);\1\2;'	1
sed -i -R -n '{(^[^,]{});x;n;^,;s/^.{}/\1/;x;p;x;p}' SedExit.txt > Str.txt	1
grep 'playSessionId=' foo.log | sed 's/^.*playSessionId=\([^ ]*\).*$/\1/'	1
s/\(.*\)\n\([^,]*\).*/\2\1/	1
sed '/^,/!{h;b};G;s/\(.*\)\n\([^,]*\).*/\2\1/' file	1
^([a-z])((?:(?!\1).)+\1){2}$	2
^(\w)(?>\w*?\1){2}$	2
^(\w)(?>(?!\1)\w+?\1){2}$	2
^([a-z])[^\1]+\1[^\1]+\1$	1
^(\w+)\1$	2
(\w+)\1	2
^([\+\-]?)(\*?)([a-z0-9]*)([\+\-]?)(\1\4)$	2
^([-+]).+\1$	2
/<((.|\n|\r)*?)>(.|\n|\r)*<\/\1>/	2
s/\(<B>.*<\/b>\)/\1<C>Some new value<\/c>/	1
(?:^|[^\w.'])(?=[.']*(word))(?!'*\.'*\1'*\.)(?!\.*'\.*\1\.*')([.']*)\1([.']*)	2
([.']*)\1([.']*)	2
(?<=(?:\.(?<dot1>)|'(?<apos1>))*)\bword\b(?=(?:\.(?<dot2>)|'(?<apos2>))*)(?!\k<dot1>\k<dot2>|\k<apos1>\k<apos2>)	2
sed "s/^\(\w+\)$/leftside\1rightside/"	1
sed "s/^\(.*\)$/leftside\1rightside/"	1
s/n\([0-9][\x00\n]\|$\)/n0\1/g	1
:%s/\(\[.*\)\@<=\([0-9]\+\)\(,[^,]*\.[^,]*\)\@<!\.\@!\(.*\]\)\@=/\2.0/cg	1
s/p1\([^0-9]\)/Bob\1/g	1
sed -e 's/a/aaaaaaaaaa/' -e 's/\(aaaaaaaaaa\)/\1\1\1\1\1\1\1\1\1\1/'	1
sed -r 's#^([^\;]+);([^\;]+);[^\;]+;([^\;]+);.*$#<tr><td>\1</td><td>\2</td><td>\3</td></tr>#' < Mitarbeiter.csv > header-content.html	2
sed -r -ne 's:^([^;]+);([^;]+);[^;]+;([^;]+);.*:<tr><td>\1</td><td>\2</td><td>\3</td></tr>:p'	2
sed -Ee "s/^ *\[([a-zA-Z0-9 ]+)\] *$/\\1/g" -e "s/^ */[/g" -e "s/ *$/]/g" infile	2
\w*[^aoyie][aoyie]([^aoyie])\1(ed|ing|ied)	1
@"^[a-z]*[aoyie]([^aoyie])\1(ed|ing|ied)$"	1
Regex.IsMatch(f.WordStr, @"^\w*[^aoyieu]+[aoyieu]([^aoyieu])\1(ed|ing|ied)$")	1
(.)\1	1
((\w)\2+)	2
egrep `([A-Za-z])\1' < file	1
egrep '(.)\1' < file	1
(.)\1+	1
^(b*a)\1\1$	2
^(b*a)\1$	2
(\\w{4,5})\\1	1
(.{4,5})\\1	1
<(a*)\b[^>]*>.*?</\1>	2
(.)\\1+	1
"(.)\\1+"	1
echo 034673911921 | sed -nr 's7([0-9][0-9])/\1 /gp' | sed -n 's/[0-3][0-9]//gp'	1
<script(?=\s)(?=((?:[^>"']|"[^"]*"|'[^']*')*?)(?<=\s)src\s*=(?:(?>\s*(['"])\s*((?:(?!\g{-2}).)+)(?<!\.min)\.js\s*\g{-2})|(?>(?!\s*['"])\s*([^\s>]*)(?<!\.min)\.js(?=\s|>)))((?>(?:".*?"|'.*?'|[^>]?)+)))(?>\s+(?:".*?"|'.*?'|[^>]*?)+>)(?<!/>)	2
(?=(\\d{2}))(?=(\\1\\d)?)(?=(\\2\\d)?)	1
(?=(\\d{2}))(?=(\\1\\d)?)(?=(\\2\\d)?)(?=(\\3\\d)?)	4
s/[^\n]*\(\n.\{7\}\)[^\n]*/\1/g	1
:a;s/\n.\{7\}\(.*\n\)\n\(.\{7\}\)/\2\1/;ta	1
\b(\pL{4,}+)\b(?!.*\b\1\b)	2
type\s*=\s*((["'])blahblah\2|\bblahblah\b)	1
/<script[^>]+type\s*=\s*(["']?)blahblah\1[.\n]*?<\/script>/gi	1
sed 's/!\([^\^!]*\)!\([^!]*\)$/|\1|\2/'	1
sed 's/!\([^\^!]*\)!\([^!]*\)!\([^!]*\)$/|\1|\2\3/'	1
sed -e 's/\([^0-9][0-9]\{3,4\}\) /\1. /g'	1
s/(\D\d{3,4}) /\1. /g	1
sed 's/.*-q ([^ ]*) .*/\1/'	2
px aux | sed -n 's/.*-q\s\([0-9]\+\).*/\1/p'	1
`http:www\.google\.com/.*?(\d+),\1`	2
'(\()(:)(\))', \1\3.	1
(a|b)_\1	1
(["'])(?<q>.+?)\1	2
^blahblah([A-Z])\1+$	1
blahblah([A-Z])\1+	1
blahblah(.)\1*\b	1
blahblah([A-Z])\1{4}	1
\b(\w+)\s+\1\b	2
sed -i 's/\(^\|[^<:]\)\(vector\s*<\)/\1std::\2/g' file	1
(.)\1{2,}	1
str.replace("(\\S)\\1{2,}", "$1$1");	1
string.replaceAll("(\\w)\\1{2,}", "$1$1")	1
sed -e 's/^[^0-9]*//; s/\(\([0-9]\{1,3\}\.\)\{3\}[0-9]\{1,3\}\).*/\1/'	1
:%s/foo\(.*\)/(foo \1)/g	4
%s/foo(\(.*\))/foo \1/g	2
.*?>(([^:]+?):<.*?\2):	2
.*?>(((?>[^:]+)):<.*?\b\2):	2
(\w).*\1	1
\b(((1|0)(?!\2))+)	4
\b((1|0)(?!\2))+	3
sed -n '/token/s/.*name="ltoken"\s\+value="\([^"]\+\).*/\1/p' input_file	1
(\d)\1{3}	1
\b(\d)\1{3}\b	1
\b(\d)\1\1\1\b	1
RewriteCond %{REQUEST_URI}:%{ENV:domain}/%{ENV:sub} !^/([^/]+)[^:]*:\1 [NC]	2
/\(^.*$\)\n\1	1
src=(["'])cid:(.*?)\1	2
(.)\1+	1
String regex = ([a-z])([a-z&&[^\1]])\\2\\1";	4
(?i)\b(([a-z])(?!\2)([a-z])\3\2(?!\3)[a-z]+)\b	4
String regex = "([a-z])(?!\\1)([a-z])\\2\\1(?!(\\1|\\2))[a-z]";	4
\b(\d+)\*\1\b	2
(\d+)\*\1	2
\b(\d+)\*\1\b	2
([a-z])\s*\1\s?	1
sed -n 's/.*\([0-9][0-9]*G[0-9][0-9]*\).*/\1/p'	1
echo "This is 02G05 a test string 20-Jul-2012" | sed 's/.* \([0-9]\+G[0-9]\+\) .*/\1/'	1
tunnel://\(\([[:digit:]]\{1,3\}[.]\)\{4\}\):80/ -> \2	1
sed 's/^CN=\([^,]*\).*/\1/' input_file	1
sed -E 's/^[^=]*= *"([^"]*)"$/\1/'	2
sed 's/^[^=]*= *"\([^"]*\)"$/\1/'	1
'(\d)\1*'	1
r'((\d)\2*)'	2
r'(\d)\1*'	1
(\d)\2*	1
r'((\d)\2*)'	2
echo "blahblahblah" | sed -n 's!\(\(blah\)*\).*!\1!p' | wc -c	1
<([a-zA-Z][a-zA-Z0-9]*)[^>]*?>[\s]*?</\1>	2
:%s/\(^\s*\w\+\s\+\)\([A-Z]\)/\1\L\2/g	1
<meta [^\>]*content\s*=\s*(["\'])(.*?)\1	2
sed -r "s/([a-z]*-[a-z]*-)([0-9]*-)([a-z]*-)(.*)/\1\n\2\n\3\n\4/"	2
[a-c]|[a-c][a-c]|[a-c][a-c][a-c]|[a-c][a-c][a-c][a-c]||t|tt|tt|ttt|ttt|([x-z][x-z])foo\1|at|au|bt|bu	1
[a-c]|[a-c][a-c]|[a-c][a-c][a-c]|[a-c][a-c][a-c][a-c]||t|tt|tt|ttt|ttt|([x-z])([x-z])foo\1\2|at|au|bt|bu	1
[a-c]+|t*|([x-z]){2}foo\1|(a|b)(t|u)	1
(aa|bb).*?(?!\1).*?\1	1
^(aa|bb)((?!\\1).)*\\1$	3
(aa|bb)((?!\\1).)*\\1	3
^((.)(?1)\2|.?)$	1
(.)(?1)\2	1
^((.)(?1)\2|.?)$	1
^((.)(?1)\2|.?)$	1
^(\*+)[^*]+\1$	1
sed -i 's:\(.*\)/[*]\(.*\)[*]/:\1 // \2:' FILE	1
sed -i ':r s:\(.*\)/[*]\(.*\)[*]/\(.*\):\1\3 //\2:;tr;s://\(.*\)//\(.*\)://\2\1:;tr' FILE	1
(\d{4}).*\1	1
(\w+)(?=\1)	2
([a-zA-Z])(?=.*\1)|[()&]	2
(\w)(?=.*\1)|[()&]	2
'~\[\^(\d+)\](.*?)\[/\^\1\]~'	2
echo "ScreenShotXYZ.png" | sed "s/ScreenShot\(.*\)\.png/\1.png/"	1
string.gsub(/(\w)( )(\w)/,/\1\3/)	4
sed 's:^#import \(.*[+].*\):\1:' FILE	1
grep -c regex files | sed -e 's/^\(.*\):\(.*\)$/\2 \1/' | sort -r -n | head -n 1	1
grep -c 'qwe' file[1-3] | sed -e 's/^\(.*\):\(.*\)$/\2 \1/' | sort -r -n	1
(?:(expression)\1{2})+	1
:%s/print \(.*\)/print(\1)/c	4
:'<,'>s/print \(.*\)/print(\1)/c	4
^(?!.*(.)\1)\w+$	4
sed "s|[^€]*.[ ]*\([.[:digit:]]*\).*|\1|"	1
perl -pe 's/(?<!^)(PATTERN)/\n\1/mg;s/(PATTERN)(?!$)/\1\n/mg'	1
\s+#if wxCHECK_VERSION\(2\, 9\, 0\)\s*(.*?)wx_str([^\r\n]*?)\s*#else\s*(\1)c_str(\2)\s*#endif	2
ERR_COUNT=$(echo $VAR_WITH_TEXT | sed -n "s/.*ERROR total: ([0-9]+).*/\1/gp")	2
ERR_COUNT=$(echo $VAR_WITH_TEXT | perl -pe "s/.*ERROR total: (\d+).*/\1/g")	2
regex:(\.\.\. (?<ID>(\d+)))(?<=(?s).*?tag (\k<ID>))	2
(["'])\w+\1	1
sed '1s/.*&CD=\([^&]*\).*/\1/' cred.txt	1
sed -r 's/.*[&?]CD=([^&]*).*/\1/' cred.txt	2
sed '/^<key/s/\(.\)_/\1/'	1
sed -r 's/([0-9]{1,3}),([0-9]{3}\.[0-9]{2})/\1\2/g' file.txt	1
$ sed -i <filename> "s/a(.+?)a/\1/g"	2
:%s/\va(.+?)a/\1/g	2
:%s/\(.*\)/\1\rrewrite ^ \/sniffer\/loath\/ permanent;/	1
(^[A-Za-z0-9-]+)(.)((\%(\n\1)(.))+)	3
sed 's/-i (.*)\.3gp/\1.mp3/' <src.txt	2
#include (<|")([^\r\n;#">]*)(\1)	2
sed -nr 's/.*(php-([0-9\.]+)\.tar\.bz2).*/\1 \2/p;s/.*md5: ([0-9a-f]{32}).*/\1/p;T;' downloads.php	2
sed '\|<a href="/get/php|!d;N;s/.*\(php-\([0-9\.]\+\)\.tar\.bz2\).*md5: \([0-9a-f]\{32\}\).*/\1 \2 \3/;q' file	1
sed -rn 's/^([A-Za-z.+,]+)([0-9]+)/\1 \2/p' rocketfuel/weights/6461/latencies.intra	2
find /some/path -type f | xargs sed -i 's/\.0\(<\/rating>\)/\1/g'	1
find /path -name *.txt | xargs sed -ri 's/(<rating[^>]*>[^.<]+)\.0(<\/rating>)/\1\2/g'	2
sed -ri 's/(<rating[^>]*>[^.<]+)\.0(<\/rating>)/\1\2/g' file.txt	2
^(?:("{0,1})(\w+ \w+)\1 <([^@ ]+@[^@ ]+\.[^@. ]+)>|([^@ ]+@[^@ ]+\.[^@. ]+))$	2
\(\S\+\).*\zs\1\.DAT	1
/\(.\).*\zs\1\.DAT	1
%s/\(.\).*\zs\1\.DAT//	1
exp("bibi|([bf][aeou])\\1");	1
^(\d+)/\1$	2
^(\d+)/\1$	2
sed -e 's/ *RELEASE_AND_NIL(\(.*\));/[\1 release];/'	2
s/RELEASE_AND_NIL\((.*?)\)/\[\1 release\]/g	2
echo "aabb" | sed "s/a*\(\(ab\)*\)b/\1/"	1
([^\s]+(?=\.(jpg|jpeg|png|gif))\.\2)	2
([^\s]+(?=\.(jpg|jpeg|png|gif))\.\1)	4
:s/_\(.\)/\u\1/g	1
([^\s]+(?=\.(jpg|jpeg|png|gif))\.\2)	2
s/\v(^|_)(\a)/\u\2/g	1
^(\d+)/\1$	2
^((?!(\d+)/\1.).)*$	4
/^(\d+)\/(?!\1$)\d+$/	2
echo "aabb" | sed "s/a*\(\(ab\)*\)b/\1/g"	1
sed -n -e 's!^.*\(<[Aa] [^<>]*>.*</[Aa]>\).*$!\1!p'	1
$pattern = "/<([\w]+)([^>]*?) (([\s]*\/>)| (>((([^<]*?|<\!\-\-.*?\-\->)| (?R))*)<\/\\1[\s]*>))/xsm";	2
Hello (\w+), Goodbye \1.	2
^|\G(([a-z])\2?)	1
(noun|adj|adv)[^\1]+?<	1
(noun|adj|adv)((?!\1).)+<	3
sed 's|/\*\([.]*\)\*/|\1|' ./myfile	1
sed 's|/\*\(.*\)\*/|\1|' ./myfile	1
var text = /<(title)>(.+)<\/\1>/.exec(html).pop();	2
gsed -i -E 's/^(?!foo)(.*)$/bar\1/' file.txt	2
sed -r '1h; 1!H; ${ g; s/pattern[\r\n]+(.*)[\r\n]+(.*)/\1\2/ p}' infile	2
sed -r 's/[^=]*=([^ ]*)[^=]*=([^ ]*)[^=]*=(.*)/\1;\2;\3/' infile	2
([^\w\s])(?=[^\w\s]*\1)	2
.*?(Today is friday).*?(?=\1|$)	1
\b(\w+)\b.*\b\1\b	2
\b([a-z]+)\b.+\b\1\b	2
sed -n '/\<Host Name\>/ s/.*[[:space:]]\([[:alnum:]]\+\)$/\1/p' /tmp/foo	1
sed -rn '1 h; 1!H; $ {x; s/(\n\n)(.)/\1$\2/g; p}' infile	1
r'(?P<len>\d+):(?P<str>.{int((?P=len))})'	2
(.)\1	1
curl --silent http://domain.com/index.html | grep -E "<h1.*><a.*>(.*?)</a></h1>" | sed 's/.*<a.*>\(.*\)<\/a>.*/\1/'	1
/(_t\().*(\))/\1\2/g	1
'#(.*?)=([\'"])(.*?)\2#'	2
(.)(\1)*	3
(\w)(\1)*	3
cmp <(perl -pe 's/^(.*?):.*/\1/g' < /etc/passwd) <(awk -F  ':' '{print $1}' < /etc/passwd)	2
perl -pe 's/^(.*?):.*/\1/g' < /etc/passwd	2
([a-zA-Z0-9])\1{16}	1
*[Aa][Ll][Ll]|([a-zA-Z0-9])\1{16}	1
^((?:\*[aA][lL]{2})|([a-zA-Z0-9])\1{17})$	4
(\w)\1+	1
^([a-zA-Z0-9])\1{17}$	1
^(?:[\*][Aa][Ll][Ll]|([a-zA-Z0-9])\1{16})$	1
^([\*][Aa][Ll][Ll]|([a-zA-Z0-9])\2{16})$	1
([a-zA-Z0-9])\1{16}	1
(.+).*\(@.*\1.*\)	2
(.*).*\(\@ \1 \)	2
(.*).*\(@ \1 \)	2
\(.*\).*(@ \1 )	4
(?=.*?(?<!@ )(\b\w+\b)).*\(@.*\1.*\)	2
echo "No. 1." | sed "s#No\. \(\[0-9\]\+\)\.#<a name='\1'></a>\0#"	1
:s/(\(.*\))/(\1) \1/g	2
:%s/(\([[:alnum:]]\+_[[:alnum:]]\+\))/(\1) \1/g	1
:s/(\([[:alnum:]]\+_[[:alnum:]]\+\))/(\1) \1/g	1
%s/\\([0-9]\\) \\([0-9]\\)/\1\2/g	1
x=$(sed -E 's/\(([[:alnum:]]+)\)-([[:alnum:]]+)/\2-\1/' <<< "$i")	2
sed  -E 's/.+"([[:alpha:]]+) .*/\1/' inputfile	2
(\b\S+\b)\s+\b\1\b	2
if (str.matches(".*([.,/])work\\1$"))	1
theString.matches(".*([./])work\\1$");	1
<i>.*</i>([0-9]{1,4}) .+<br/>\1 .*<br/>	1
sed -i 's/^\([^;]*;[^;]*;[^;]*\);\([^;]*;[^;]*\);/\1.\2./' foldername/*	1
<i>[^<]*</i>(\d+)\b[^<]+<br/>\1\b[^<]*<br/>	2
<i>[^<]*</i>(\d+)\b[^<]*(<(?!br/>)[^<]*)*<br/>\1\b[^<]*(<(?!br/>)[^<]*)*<br/>	2
BLOCK_START_(\w+).*?BLOCK_END_\1	2
sed 's/\(eTDYN-str-multi-[0-9]\{1,3\}\).*/\1<REPLACEMENT_STRING>/' <name of your test file>	1
(?<!\\\\)((['\"])(?:\\\\\\2|(?!\\2).)*\\2)	4
url=$(echo $line | sed -r 's/<strong>([^<]+)<\/strong>/\1/')	2
url=$(echo $line | sed -n 's!<strong>\(http://[^<]*\)</strong>!\1!p')	1
([^\\"]")(?:(?=(\\?))\2.)*?"	1
for i in *.avi; do j=`echo $i | sed 's/(\d{2})-(\d{2})-(\d{2})/20\3_\1_\2/g'`; mv "$i" "$j"; done	1
%s/.*\(:\w\+\)\s.*/\1/	1
'(.)\1{2,}'	1
$pattern = '/(.*)(\[(heading)\](.*)\[\/\3\])(.*)/Us'	2
$pattern = '/(.*)(\[(heading)\](.*)\[\/\3\])(.*)/s';	2
('|")(?<content>[^\1]*)\1	2
(["'])((?:(?!\1).)*)\1	2
(?<quote>["'])(?<content>(?:(?!\k<quote>).)*)\k<quote>	2
s/(?<=(a).*?)\1//g	2
echo "a b a c b a a b" | perl -pWe 's/(?<=(a))(.*?)\1/$2/g'	2
echo "a b a c b a a b" | perl -pWe 's/(?<=(a\s))(.*?)\1/$2/g'	2
:s/\(value\)/\$\1/	1
:s,\(.*\(value\).*\),\1\2,	1
:s,\(.*\)\(value\)\(.*\),\1\3\2,	1
:s#.*\(value\).*#\0\1	1
<\s*tag[^>]*(attr)=(['"]{1,1})([^'"\s]*)\2{1,1}	2
(.+?)\1+	2
^(.+?)\1+$	2
^([^\s]+)\1+$	2
"^(.+?)\1+$" timed out after 3 seconds	2
sed 's/1\([^.]\)/2\1/g' test	1
sed -e ':loop' -e 's/\s\([0-9a-f]\{1\}\)\([0-9a-f]\{1\}\)/\2\1/g' -e 't loop' -n -e 's/.*\(0x[0-9a-f]\{4\}\)\([0-9a-f]\{16\}\).*/\2/p' | sed -e ':a;N;$!ba;s/\n//g'	1
sed -e ':loop' -e 's/\s\([0-9a-f]\{1\}\)\([0-9a-f]\{1\}\)/\2\1/g' -e 't loop' -n -e 's/.*\(0x[0-9a-f]\{4\}\)\([0-9a-f]\{16\}\).*/\2/p' | sed -e ':a;N;$!ba;s/\n//g'	1
sed -n -e '/^0x[0-9a-f]\{4\}/H' -e '${x;s/\n\S*//g;s/\s\.\.*//g;s/\s\([0-9a-f]\)\([0-9a-f]\)/\2\1/g;p}'	1
str.matches("(.).*\\1")	1
sed '/^0x\S\{4\}\(\( \S\S\)\{8\}\).*/{s//\1/;H};$!d;x;s/\n//g;s/ \(.\)\(.\)/\2\1/g' file	1
sed -r '/^0x....(( ..){8}).*/{s//\1/;H};$!d;x;s/\n//g;s/ (.)(.)/\2\1/g' file	1
| sed -e "s#^\(/[a-z]/.*/bin\)$#A40-\1#ig"	1
-e "s#\n\(/[a-z]/.*/bin\)\n#\nA40-\1\n#ig"	1
-e "s#\n\(/[a-z]/vs10/vc/bin\)\n#\nA40-\1\n#ig"	1
-e "s#\n\(/[a-z]/[^\n]*/bin\)\n#\nA40-\1\n#ig"	1
-e "s#\n\(/[a-z]/.*/bin\)\n#\nA40-\1\n#ig"	1
sed -e "s#^\(/[a-z]/.*/bin\)$#A40-\1#ig"	1
blkid | sed -nr 's/^.+UUID="(.*?)" .+$/\1/p'	2
sed -n 's/.*\(Pattern\).*/\1/p'	1
sed -r 's/(.*)(PHP Fatal error)/\2/' logfile | sort -u	2
(^|\ )([^\ ][^\b]*\b).*\ \2\b	2
(?s)\b(\w+)\b.*?\b\1\b	2
(?s)\b(\w+)\b.*\b\1\b	2
(?s)\b(\w+)\b(?=.*?\b\1\b)	2
<table\b[^>]*>(?:(?=([^<]+))\1|<(?!table\b[^>]*>))*?</table>	2
cat data | perl -l -e 'while (<>) {s/.*(AFUA_[^\|]*).*/\1/g; print}'	2
sed ':a;/:[^_=]*=/!b;s//\n&\n/;h;s/.*\n\(.*\)\n.*/\1/;y/ /_/;H;g;s/\n.*\n\(.*\)\n\(.*\)/\2\1/;ta' file	1
perl -pe 's/.*(AFUA_[0-9a-zA-Z]*).*$/\1/' your_file	2
s/([0-9](?<![0-9]))/0\1/g	1
sed 's/.*( .* \([[:alnum:]]+\) *).*/\1/' file	2
s/(C|R)(\d)-(\d)/\1\2-\1\3/g	1
\S*?(?P<mt>\S*)\s+\S*(?P=mt)$	2
sed 's/\(^blah.*abc$\)\(.\{4\}$\)/\1/g'	1
sed 's/\(^blah.*\)\(.\{4\}$\)/\1/g'	1
sed 's/^\(blah.*\)\.abc$/\1/g'	1
sed 's/^\(blah.*\)\..\{3\}$/\1/g'	1
sed s'/\(desc.*\){\(.*\)}/\1\[\2\]/g' < filename	1
(\w+)\W+\1	2
%s/\(\w\+\), \1/\1, \1, \1/g	1
regex = "<(.*?)>.*</\1>"	2
grep -P "([a-z]+en).*\1" your_file	2
sed -rn 's/.*\b(\w+en)\b.*\b\1\b.*/\1/gp' input_file	2
sed -n  's/[^"]\+"\([^"]\+\)"[^>]\+>\1</\1/p' FileName.txt	1
([A-Z][a-z]*) \((\d*)\) (\d*\%) -->  \1 (\2)	2
echo "bla 18934750 + wwv_flow_id.offset bla" | sed -E 's/([0-9]+) \+ wwv_flow_id.offset/(\1-750) \+ wwv_flow_id.offset/'	2
echo "bla 18934750 + wwv_flow_id.offset bla" | sed -E 's/([0-9]+)([ ]*)\+([ ]*)wwv_flow_id.offset/~\1~\2\+\3wwv_flow_id.offset/' | awk -F~ '{print $1 $2-750 $3}'	2
echo "bla 18934750 + wwv_flow_id.offset bla" | sed -E 's/([0-9]+) /\1/'	2
sed -nr "s/[^']*'([^']*)'.*/\1/p" test	2
s/"\([^"]*\)\$\([a-zA-Z0-9:]*\)\([^"]*\)"/"\1\${\2}\3"/g	1
sed -e ':loop' -e 's/"\([^"]*\)\$\([a-zA-Z0-9:]\{1,\}\)\([^"]*\)"/"\1\${\2}\3"/' -e 't loop'	1
sed -e ':loop' -e 's/^\([^"]*\("[^"]*"[^"]*\)*\)"\([^"]*\)\$\([a-zA-Z0-9:]\{1,\}\)\([^"]*\)"/\1"\3\${\4}\5"/' -e 't loop'	1
([1-9])\\1{9}	1
<(.*?)>(.*?)<\1>	2
sed "s/^[a-z].* ([a-z].*== '\([a-z].*\)' [a-z].*== '\([a-z].*\)')$/\1/" inputfile	2
:%s/^\(\d\{7\}\)\(.*\) \(#.*\)/\3\2 \1/	1
%s/\v^(\d{7})(.{-})\s*(#.*)$/\3\2 \1/	2
sed -r 's/(dir="ltr"|dir="rtl")>([^<]+)(<\/span>|<\/a>).*/\2/' file.txt	2
sed -r 's/dir="(ltr|rtl)">([^<]+)<\/(span|a)>.*/\2/' file.txt	2
%s/q_\(\w\+\)/q_\U\1/g	1
%s/q_\(\w\+\)/Q_\1/g	1
<([^>]+)>([^<]+)</\1>	2
ifconfig -a | grep -E '' | sed -n 's/^\([^ ]\+\).*/\1/p' | tr -d '\n' | sed s/:/,/g | sed 's/.$//'	1
s/\([^ ]*\) .*/"\1"/	1
ifconfig -a | sed -e '/^ /d;/^$/d;s/\([^ ]*\) .*/"\1"/' | tr '\n' ','	1
ifconfig -a | sed -n 's/^\([^ ]\+\).*/"\1"/p' | paste -sd ","	1
ls /sys/class/net | sed -e 's/^\(.*\)$/"\1"/' | paste -sd ","	1
ifconfig -a | sed -ne '/^[^ ]/ { s/^\([^ ]\+\).*/"\1"/; H }' -e '$ { g; s/\n//; s/\n/,/g; p }'	1
(abc)?\1x\1	1
\b(bad|text)\s+(?!\1)(?:bad|text)\b	1
sed -nre '/^Host/h;/ProxyCommand/{H;x;s/(Host)(.*)\n +[^ ]+ /\1:\2 - Proxy: /p}' file.txt	2
(.*)(\d+)(\.*)?\1	2
(.*)(\d\d)(\.*)?\1	2
([0-9]||[A-Z])\1{5}	1
(hello) \1	1
sed -r 's|http://(\S*)|href="/fetch\?domain=\1"|g'	2
sed -r '/sandbox/!s|http://(\S*)|href="/fetch\?domain=\1"|g'	2
sed -r -e '/sandbox/d' -e 's|http://(\S*)|href="/fetch\?domain=\1"|g'	2
sed -r 's|http://(\S*)|href="/fetch\?domain=\1"|g' | grep -v sandbox	2
^\s*set\s*(\w*)\s*on.*set\s*\1\s*off\s*$	2
<(cat|dog|pen)>.*<\/\1>	1
<(cat|dog|pen)>.*?<\/\1>	1
<(cat|dog|pen)>[^<>]*<\/\1>	1
<\(cat\|dog\|pen\)>.*<\/\1>	1
{(.+)}(.*?){/\1}	2
s/ \(=\+\) /\1/g	1
s:\([^,]\+\),\([^,]\+\),\([^,]\+\),\([^,]\+\):\1,'\2',\3,'\4':	1
^.*(.).*\1.*$	1
^(?:([A-Za-z])(?!.*\1))*$	3
$line =~ s/([.,])\1{1,}| |\t//g;	1
$line =~ s/([.,])\1+|\h+//g;	1
([.,])\1{1,}	1
sed -e 's/\\qdb{\([0-9]*\)}/\\text1{\1}\\text2{\1}/g' test.txt	1
sed -i -e 's/\\qdb{\([0-9]*\)}/\\text1{\1}\\text2{\1}/g' test.txt	1
sed -nr 's/.*MANGO([0-9]+).*APPLE.*WHITE.*/\1/p' yourfile	2
regsub -all -line -- {^(Description:.*)Loopback} $itext {\1Lo} itext	2
PHONE POSITION(10:45) NULLIF PHONE=BLANKS "REGEXP_REPLACE(:PHONE, '^0+([^0]\d+)$','\1')",	4
<(?:textarea|select|input)\b[^>]*\sname\s*=\s*(['"])(.*?)\1	2
^(?=.{4,31}$)(?![-.])(?:(?!(.)\1{4})[-.\w])+(?<![-.])$	1
^(?=.{4,31}$)(?!.*(.)\1{4})\w[\w.-]+\w$	2
^(?=.{4})(?!.{32})(?!.*(.)\1{4})\w[\w.-]+\w$	2
(\\\\?")(.*?)\\1	2
(\\?")(.*?)\1	2
(.+) \1	2
10 50 u E2U+pstn:tel "!^(.*)$!tel:\\1;spn=42180;mcc=234;mnc=33!" .	2
sed 's/\([\w_]\+\)\(\.\)/\1\//g'	1
sed ':f1;s/^\([^ .]*\)\./\1\//;t f1;:f2;s/^\([^ ][^ ]*\) \([^ .]*\)\./\1 \2\//;t f2'	1
sed ' s/\([^ ]\)ing\>/\1/g' file	1
sed 's/\([0-9]+\):\([0-9]\)/\1\\{\2\\}/' #\1 to match "2" and \2 to match "4".	1
s/(?=\d)(?:([0-8])(?=.*\1(\d)\d*$)|(?=.*(1)))(?:(9+)(?=.*(~))|)(?!\d)/$2$3$4$5/g	2
(\d)(\1*)	2
((\d)\2*)	2
((\d)\2*)	2
sed -r 's|^([^.]+).*$|\1|; s|^[^0-9]*([0-9]+).*$|\1|'	2
sed -r 's/.*_([0-9]*)\..*/\1/g'	2
sed -e 's/.*[^0-9]\([0-9]\+\)[^0-9]*$/\1/'	1
sed -r 's/([^0-9]*([0-9]*)){1}.*/\2/' file	2
sed -r 's/([^0-9]*([0-9]*)){2}.*/\2/' file	2
<(\w+)>.*?</\1>	2
echo 'foo=23' | sed 's/foo=\([0-9]\+\)/foo value is \1/'	1
s/\b(\w)[,;]/s\(\1\);/g	1
sed -e 's/codenumber{\([0-9]*\)\.*\([0-9]*\)}/job{\1}subjob{\2}/g'	1
{(.*?)_start}.*{(\1_stop)}	2
sed -r 's/^([^"]*("[^"]*){2}*)basic/\1ring/' file	2
sed -r 's/^/\n/;ta;:a;s/\n$//;t;s/\n("[^"]*")/\1\n/;ta;s/\nbasic/ring\n/;ta;s/\n([^"]*)/\1\n/;ta' file	2
\{(.*?)_start\}.*\{\1_stop\}	2
@\[User:(\d+)\|(.*?)\]\s*\2	2
\{(.*?)_start\}.*?\{\1_stop\}	2
sed -r 's/(quick|)./\1/g' file.txt	1
(\w{8}|\w{11}).*?(\w{3}).*?\1	1
(?s)\b(\w{5})\b(?:(?!\1).)*?\b\w{3}\b(?:(?!\1).)*?\1	1
sed -r 's/(\s?\S+)\s\S+/\1/4g;h;s/.*//;N;s/(\s?\S+)\s\S+/\1/4g;H;g;s/^(.*)(.*\n)\n\1/\1\n\2/;h;s/[^\n]*\n//;:a;s/([^ \n]*)\n([^ \n]*)/\n\2 \1\n/g;s/\n \n?| \n/\n/g;/\n[^\n ]*$/!ba;y/\n/ /;H;x;s/\n.*\n//' file	2
\1 \(\2\3\)\4\6\7\8\9\10\11	1
<addr>([^<>]*)<\/addr>\s*<addr>\1<\/addr>\s*<addr>\1<\/addr>	2
$ cat log | perl -pe 's/(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})/`host \1`/ge'	1
^\d{1,3}(?:(,?)\d{3}(?:\1\d{3})*)?(?:\.\d{1,10})?$	1
^(?:\d{1,3}(?:(,?)\d{3})?)?(?:\1\d{3})*(\.\d{1,10})?$	1
sed 's/\(.*\)\t\(.*\)\t\(.*\)\t.*\;Name=\(.*\);.*/\1\t\2\t\3\t\4\;\4/g'	1
sed 's/\([[:space:]]\|;\)[[:alnum:]]*;/\1/g; s/Name=//g'	1
(\${1,2})((?:\\.|.)*)\1	2
(\${1,2})((?:\\.|[\s\S])*)\1	2
(\$\d*.\d*)(?!.\1)	2
s/^\([\s\t]*\)/\1#/	1
s/-\([0-9]\)-/-0\1-/g	1
(.)\1\1	1
(.)\1\1	1
([0-9a-zA-Z])\1\1|([^0-9a-zA-Z])\2\2	1
(([0-9a-zA-Z])\2\2)|(([^0-9a-zA-Z])\4\4)	1
([0-9a-zA-Z]|[^0-9a-zA-Z])\1\1	1
([\s\S])\1\1	1
(^([0-9a-zA-Z]|[^0-9a-zA-Z]))\1\1	1
([\s\S])(?!\1\1)[\s\S]{2}	1
(?!(.)\1\1).{3}	4
(.)(?!\1)(.)(?!\1|\2).	4
^(?!.*(.)\1\1)	4
/document[.]write\(\'\<iframe src\=\"http\:\/\/(msn.com)\" scrolling\=\"auto\" frameborder\=\"no\" align\=\"center\" height\=\"7\" width\=\"\7\"\>\<\/iframe\>+\'\);/	1
:%s/\.([a-zA-Z])/\. \1/g	1
$msg =~ s/\.([a-zA-Z])/\. \1/g	1
(..) [cs]\1	1
(?:(^)|(?<=(.)))((?<!^)https?://.*?(?=\1)|https?://.*?(?=\s|$))	2
(.)\1\1	1
(\d+).*\1	2
echo $i | sed -r 's/([0-9]*)\-.*\.jpg/\1.jpg/g'	2
:%s/:\([^ ]*\)\(\s*\)=>/\1:/g	1
(\\d+)<(.*)>(.*)</\\1>	2
(\\d+)\\s*<(.*)>(.*)</\\1>	2
\\d{5}\\s+<([A-Z]+)>([^<]+)</\\1>	2
:%s/ ( \d{2} ) ( \/\d{2} ) ( \/\d{2} ) / ( 20+\3) - (\3) - (\1) /g	2
(\d)(.*\1){7}	2
r'^(.+).*(\n\1.*)*$'	3
[0-9]{4}([ -]|)([0-9]{4}\1){2}[0-9]{4}	1
\d{4}([ -]|)(\d{4}\1){2}\d{4}	1
`cat file | egrep -n '*\[.*([-+]{9,}).*\].*(>).*\1.*(>).*' > out.txt`	2
\[.*?([+-]{9,}).*?\].*?>.*?\1.*?>	2
^.*?\[.*?([+-]{9,}).*?\].*?>.*?\1.*?>.*?$	2
'2,$s#\(^.\{8\}\)\\t#\1\(\,\)#'	1
^(\(\d+\)\s+)(.*)[\n\r]\(\d+\)\s+\?[\n\r]\(\d+\)\s+\2[\n\r]\(\d+\)\s+\?[\n\r]	2
s/(["\'])(?:\\?+.)*?\1/(my $x = $&) =~ s|^(["\'])(.*src=)([\'"])\/|$1$2$3$1.\\$baseUrl.$1\/|g;$x/ge	2
s/(["\'])(?:\\?+.)*?\1/replace-text-here/g	1
s/(["'])(?:\?+.)*?\1/replaced!/g	1
sed 's_^.*Last Name[^d]*d>[^>]*>\([A-Za-z]*\).*_\1_'	1
sed 's_^.*First Name[^d]*d>[^>]*>\([A-Za-z]*\).*_\1_'	1
sed 's_^.*E-Mail[^d]*d>[^>]*>\([A-Za-z@.]*\).*_\1_'	1
sed -e 's/^.*First Name<\/b> <\/td><td>\([^<]*\).*$/\1/g' sed_sample	1
(.{1,4})\1{3,}	1
(.+)\1{3,}$	2
^(.)(.)..\1.(.).\1\3\2$	1
^(.)(?!\1)(.)(?!\1|\2)(.)(?!\1|\2|\3)(.)\1(?!\1|\2|\3|\4)(.)(?!\1|\2|\3|\4|\5)(.)(?!\1|\2|\3|\4|\5|\6)(.)\1\6\2(?!\1|\2|\3|\4|\5|\6|\7)(.)$	4
^(.)(.)(.)\3(.)(.)$	1
^(.)(.)(.)(.)\1(.)(.)(.)\1\6\2(.)$	1
(\\d)\\1	1
(\\d)\\1\\d*	1
(\d)(\1)	1
(\d)(\1)002345	1
String Golden = "(\\d)\\1\\d{6}";	1
String Golden = "(\\d)\\1{4}\\d*";	1
String Golden = "(\\d)\\1\\d*";	1
(\\d)(\\1)	1
\([a-z]\)\1	1
sed 's/\([a-z][^fcs]*\).*/\1/'	1
:%s/\([A-Z]\+\)\s*/\1/gc	1
:%s/\([A-Z]\+\)\s*/\1/g	1
s/\(([[:alnum:]]\{2,4\})\) \(([[:alnum:]]\{3\})\)/\1 \2/p	1
sed -rn 's/.*(([A-Z]{1,2}[0-9]{1,2}|[A-Z]{1,2}[0-9][A-Z]) [0-9][A-Z]{2}).*/\1/p'	1
(\\p{L})(?:,\\1){4}	1
"(\\w)(?:,\\1){4}(?!,\\1)"	1
"(\\w)(?:,\\1){4}"	1
"(\\w),(^\\1)(?:,\\2){4}(?!,\\2)"	4
(?!(..+)\1+$).{10000}	4
sed -En 's/^line [0-9]+ (.*)/\1/p' cat_1.txt	2
(::A_Complex_Pattern::).*\1	1
(\w[0-9]).*\1	1
(?<named>pattern) ... \k<named>	1
t.replace(r'(.)\2+',r'\2')	1
sed -E "s#/(.{1,3})[^/]*?(/|$)#/\1\2#g" <<<$LONG_PATH	1
sed "s#\(/[^/]\{3\}\)[^/]*#\1#g" filename	1
"s#(/[^/]{3})[^/]*#\1#g"	1
<a\s+onclick=(["\'])(.*?)\1	2
<a\s+onclick=(["\'])((?:(?!\1).)+)\1	2
^(?:(\d+)(?!.*,\1(?!\d)),)*\d+$	2
^(?:(\\d+)(?!.*,\\1(?!\\d)),)*\\d+$	2
^(?=^\d+(?:,\d+)*$)(?!^.*?((?<=(?:^|,))\d+(?=[,$])).*?\1(?:$|,.*?)).*?$	2
(?!^.*?((?<=(?:^|,))\d+(?=[,$])).*?\1(?:$|,.*?))	4
"^(?:,?+(\\d++)(?=(?:,(?!\\1\\b)\\d++)*+$))++$"	3
return codes.matches("^(?:,?(\\d+)(?=(?:,(?!\\1\\b)\\d+)*$))+$");	3
^([A-Z])\1*$	1
^(\w)\1*$	1
(\w+\b).*\b\1$	2
"(\\w+\\b).*\\b\\1$"	2
([a-zA-Z]+)\b.+\b\1$	2
VERSION=$(sed 's/software-\(.*\)-license.*/\1/' <<< "$ZIP")	1
's/.*\.\(.*\)/\1/'	1
sed -n 's/.*Maxval=\s*\([^ ]*\).*/\1/p' file.txt	1
sed -nr 's/.*Maxval= *([^ ]*).*/\1/p'	2
sed '/[^ ]* \([^ ]*\).*/ s::\1:; /^$/d' FILE	1
^(.*?)([.]\w*|)\s+[-]\s+\1([.](?=$))?([.]\w*|)$	2
push\s+'\s*<(\w+)(?:\s+\w+=(?:"[^"]*"|'[^']*'))*>(?:[^<]+|(?!</\1>)</?\w+(?:\s+\w+=(?:"[^"]*"|'[^']*'))*\s*/?>)*</\1>\s*'	2
(?:(?<=\n)|^)(.*)((?:,(?:d|l|fr)og){2}(?:,[01]){3})(?=\n)([\s\S]*)(?<=\n).*\2(?:\n|$)	2
sed -Ei "s/(.*[a-zA-Z ]+)'([a-zA-Z ]+.*)/\1 \2/g" file.txt	2
sed -E "s/(.*[a-zA-Z ]+)'([a-zA-Z ]+.*)/\1 \2/g" file.txt	2
sed -E "s/(.*[a-zA-Z ]+)'([a-zA-Z ]+.*)/\1 \2/g" file.txt > newfile.txt	2
(!|\?)\1+	1
sed -n '/[a-z.][.]com\?/s/.*[.]\(com\?\)\(.*\|$\)/\1/p' input.txt | sort | uniq -c	1
s/.*[.]\(com?\)([.][a-z]{2})?/\1/	1
sed -n '/[a-z.][.]com\?/s/.*[.]\(com\?\)\(.*\|$\)/\1/p' input.txt | sort -u >output.txt	1
sed '/.*\.\(com\?\)\.\?.*/s//\1/p;d' file | sort -u	1
sed -E "s/('12.34.5.6',\s?)[0-9]{4,5}/\12222/g"	1
sed -r "s/('12[.]34[.]5[.]6',[ ]?)[0-9]{4}/\\12222/g"	1
'replace' => "'.substr(\$this->_get('\\1'),0,\$this->_get('\\2')).'"	4
s/(\<[^\>]+\>)\-([^\<]+\<\/)/\1_\2/	2
'#/[*]\s*record\s*(\d+)[.](\w+)[.](\w+)\s*[*]/.*?/[*]\s*record_end\s*\1[.]\2[.]\3\s*[*]/#s'	2
'#/\* record (\S+) \*/.*<html>(.*)</html>.*/\* record_end \1 \*/#is'	2
s{/(\d+)0X}{\1}g;	2
(["\'])(\\"|\\\'|[^"\'])+\1	1
(["\'])(?:\\\\\1|(?!\1).)+\1	1
(?<!\\\\)(["\'])(?:\\\\\1|(?!\1).)+\1	1
sed -n 's/.*version="\([^"]*\).*/\1/p' file	1
\1 curPageURL();\2	1
sed -r 's/^(([^;]*;){4})[^;0-9]+/\1/' file	2
([^:]+)::([^:]+):([^:&]+)(?:::|&)\1	2
(-{10,})(.*?)\1	2
(^-{84}$)(.*?)\1	2
sed -e ':r s:["]\([^",]*\)["]\([^",]*\)["]\([^",]*\)["]:"\1\2\3":; tr' FILE	1
^\d{1,2}(\-|\/|\.)\d{1,2}\1\d{4}$	1
<(?!.*?\sid=)(.*?)(\s+.*?)?>.*?</\1>	2
([1-8])(?:.+?)\1	1
<(\S+)(?![^<>]*\bid=).*?<\/\1>	2
([1-8])(.+?)\1	2
sed 's/\.[0-9][0-9]*\( \|$\)/\1/g'	1
^([A-Z]+(?!0)[0-9]+(?::[A-Z]+(?!0)[0-9]+)?)(,\1)*	3
echo "something_0230232_long_025160mK.csv" | sed -e "s/S.*\([0-9]\{6\}\)mK\.csv/\1/p"	1
sed -E 's/.*[^0-9]([0-9]+)mK.*/\1/' file	2
(\w)\1+	1
^([abc])((?!\1)([abc])((?!\1)(?!\3)[abc])?)?$	4
^([abc])((?!\1)([abc]))?((?!(\1|\2))([abc]))?$	4
^(?:([abc])(?!.*\1))+$	3
^(?:([abcdefgh])(?!.*\1))+$	3
\b(?:([abc])(?![abc]*\1))+\b	3
^822(\d)\1{2}(\d)\2{2}$	1
(get\w+\()\1	2
sed 's/\([ag][ag]aag[acg]\)/\U\1/' input	1
^(.+)\1+$	2
(.+)\1+	2
(.)(\1)+	3
Regex.Replace(input, @"((\s)?(\S)(?(2)|\s))\1+\s?", "$3");	1
Regex.Replace(input, @"(?<=(.))\1+", "");	1
"(?<=(.))(?!\\1)"	1
\B(['"]).*?\1\B	1
(zeroWidthPatternHere)(?!.+\1)	2
(yourPatternHere)(?![\s\S]*\1)	2
"(\\[[^\\[\\]]*\\])(?!.*\\1)"	2
(yourPatternHere)(?!.*\1)	2
sed 's/\([^ ]*\) [0-9]*[1-9][0-9]* /\1 1 /' input > output	1
\A(?:^(19|20)\d\d([- /.])(0[1-9]|1[012])\2(0[1-9]|[12][0-9]|3[01])$)\Z	1
sed '/^ *someVarX: .*/ { G; s/^\( *\)someVarX: .*/&\1someVarY: val2/; }' infile	1
<infile sed -r 's/^( *)someVarX: .*/&\n\1someVarY: val2/'	2
sed -n 'p;s/^\([ \t]*\)someVarX: val1/\1someVarY: val2/p' file	1
:%s/\v\\todo\{(.{-})\}/\1/gc	1
:perldo $_ =~ s/\\todo ({( (?: [^{}]*+ | (?1) )* )}) /\2/gx	2
:%s/\\todo{\([^{}]\+\)}/\1/	1
:%:s/\\todo{\(\([^{}]\|{[^{}]*}\)*\)}/\1/	1
echo "$LINE" |sed -n 's/^.*\XXXX:\(.*\)\:.*/\1/p'	1
background(?:-image)?\((["']?)(?<url>http.*)\1\)	2
sed 's/^[E ]*\([0-9]\)/\1/'	1
(?!.*(.)\1)	4
^(?!.*(.)\1)[xyz]*$	4
sed 's/.*marker_\(.*\) = "SymmetryPlane.*/\1/' header.out	1
sed -n 's/.*marker_\(.*\) = "SymmetryPlane.*/\1/p' header.out	1
/(?:(\d{4})([\-\/.])([0-3]?\d)\2([0-3]?\d)|([0-3]?\d)([\-\/.])([0-3]?\d)\6(\d{4}))(?:\s+([012]?\d)([:hap])([0-5]\d))?/i	1
([a-zA-Z]).([a-zA-Z])\2.\1\1	1
(\\w)\\1+	1
C-M-% f\(o\)o RET bar \,(downcase \1) baz RET	4
"(\\S)\\1+"	1
str.replaceAll("([a-z])\\1", "$1*$1").replaceAll("([a-z])\\1", "$1*$1");	1
str.replaceAll("([a-z])\\1", "$1*$1").replaceAll("([a-z])\\1", "$1*$1");	1
([a-z])\\1	1
(.)\\1	1
(.)\1	1
[^\w!#£¤€´¨\-.:]('|")(.|\n)*?(\1|<!--|$)	1
[^\w!#£¤€´¨\-.:'"]('|")(.|\n)*?(\1|<!--|$)	1
\$\w+(?:\[(["']|)\w+\1\]|->\w+){0,2}	1
sed 's/^\([^|]*\)|0*\([^|]*\)/\1|\2/' input	1
sed -r 's/^([^|]*\|)0+/\1/' file	2
sed -r 's/^(([^|]*\|){1})0+/\1/' file	2
sed "s/\(172.16.0.30\)\(.*\)\(${share}\)\(.*\)/172.16.0.35\2\3\4/"	1
sed "s/\(172.16.0.30\)\(.*\)\(${share}\)\( \(.*\)\|$\)/172.16.0.35\2\3\4/"	1
^(([abc])(?!.*\2))*$	3
[-]?[_a-z]|[^\\0-\\237]|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?\\\\[^\\n\\r\\f0-9a-f][_a-z0-9-]|[^\\0-\\237]|\\\\[0-9a-f]{1,6}(\\r\\n|[ \\n\\r\\t\\f])?\\\\[^\\n\\r\\f0-9a-f]*	1
[-]?[_a-z]|[^\0-\237]|\\[0-9a-f]{1,6}(\r\n|[ \n\r\t\f])?\\[^\n\r\f0-9a-f][_a-z0-9-]|[^\0-\237]|\\[0-9a-f]{1,6}(\r\n|[ \n\r\t\f])?\\[^\n\r\f0-9a-f]*	1
define[^"\']*(["\'])' . $constant . '\1[^;]*;	1
:%s/self\.phrase\([^s]\)/self\._phrase\1/gc	1
%s/self\.phrase\([^s]\|\s*$\)/self\._phrase\1/gc	1
:%s/<\(.*\)>\(.*\)<\/field>$/<\1>\2<\/\1>/	1
:%s/<\([^<>]*\)>\([^<>]*\)<\/field>/<\1>\2<\/\1>/	1
(?<=[,\\s])((realm|qop|nonce|opaque)=(?:([\"'])([^\2]+?)\2|([^\\s,]+)))	4
cat -n $FILE | sed 's/^ *\([0-9]*\)\t\(.*\)([0-9]*)/\2(\1)/'	4
sed 's/\([a-zA-Z]*[ ]*,[ ]*[a-zA-Z]*\)/"\1"/' input | tr '\t' ','	1
cat file | sed -e s/{$date:\([0-9]*\)}/Date\(\1\)/g | mongoimport -c test	1
sed -e 's/{$date:\([0-9]*\)}/Date\(\1\)/g' file	1
group\ (\d+)[\w\W]*group\ \1	2
(?=(.+).*\1)	4
^\s*([a-z])[a-z]*(?:\s+\1[a-z]*)*\s*$	1
$pattern = "#(((0[1-9]|[12][0-9]|3[01])([\/\.\\\-])((0[1-9]|1[012])\11)?)(\d\d\d\d|\d\d))+|([A-Z][a-z]+)(\s[A-Z][a-z]+)*#";	4
(\b\w+\b)(?!.*\1)	2
^(?!.*(\bword1\b).*\b\1\b).*\bword1\b.*$	4
(<source.*) >> \1 \1	2
s/(.*)/\U\1/g	2
sed -e "/^\s<key>CHANNEL_NAME<\/key>$/{N;s/\(^\s<string>\).+\(<\/string>$\)/\1test\2}" Info.plist > test.plist	1
sed '/<key>CHANNEL_NAME<\/key>/{N;s/\(<string>\).*\(<\/string>\)/\1test\2/;}' Info.plist > test.plist	1
perl -MO=Deparse -0777 -pe "s/<(Bad)>.*?<\/\1>//msg" > oneliner.pl	1
perl -0777 -pe "s/<(Bad)>.*?<\/\1>//msg" < originalFile > newlyStrippedFile	1
sed -e '/^ *<key>CHANNEL_NAME<\/key>$/!b' -e 'n' -e 's/^\( *<string>\)..*\(<\/string>\)$/\1test\2/' Info.plist > test.plist	1
sed -e '/^\s*<key>CHANNEL_NAME<\/key>$/{n;s/^\(\s*<string>\).\+\(<\/string>\)$/\1test\2/}' Info.plist > test.plist	1
(<([A-z]+)[^>]*>.*?</\2>)	2
/(\w|\s)/\1{1,}/mi	1
s/\(x\)/\1/	1
sed -n 's;\(http://[^/]*\)/.*;\1;p'	1
echo "http://www.suon.co.uk/product/1/7/3/" | sed -n 's;\(http://[^/]*/\).*;\1;p'	1
echo "http://www.suon.co.uk/product/1/7/3/" | sed -n 's;\(http://[^/]*\)/.*;\1;p'	1
echo blabla a13724bla-bla244 35% | sed 's/.*[ \t][ \t]*\([0-9][0-9]*\)%.*/\1/'	1
:s/\%V\<\([A-Za-z0-9àäâæèéëêìòöôœùüûçÀÄÂÆßÈÉËÊÌÖÔŒÙÜÛ]\)\([A-Za-z0-9àäâæèéëêìòöôœùüûçÀÄÂÆßÈÉËÊÌÖÔŒÙÜÛ]*\)\>/\u\1\L\2/gc	1
:s/\%V\<\([a-z0-9àäâæèéëêìòöôœùüûç]\)\([A-Za-z0-9àäâæèéëêìòöôœùüûçÀÄÂÆßÈÉËÊÌÖÔŒÙÜÛ]*\)\>/\u\1\L\2/gc	1
s/stuff(.*)\.c/stuff\1.c.old/	2
^(?:([a-zA-Z0-9])\1{4}-){6}\1$	1
^.+(\.[^.]+)$(?=\s*(?:(?!<tag>)[^.])+\1)|^(?!<tag>)[^.]+	2
^(?:(0[1-9]|[1-9]|1[0-9]|20),(?!.*\b\1\b))*(?:0[1-9]|[1-9]|1[0-9]|20)$	3
(\w+\b)(?!.*\1)	2
(\w+\b)(?!.*\1\b)	2
^([\'"])(.*)\\1$	2
([a-z])(\1{2})	1
(.)\1{2}	1
([a-z])(\1{2,})	1
([a-z])(\1\1+)	2
(\w)(\1+)?	2
(.)\1+	1
echo "this is foo and another foo quux" | sed 's/this\(.*\)another.*/\1/'	1
cat source_code | sed 's/.*AdulterateFood\(.*\)DangerousFood.*/\1/'	1
sed -n 's/.*AdulterateFood\(.*\)DangerousFood.*/\1/p' source_code	1
r"([a-zA-Z])\1\1"	1
sed "s|^\([^/][^\s]*\.h\)|/abspath/\1|" <testfile.txt	1
sed -E 's/^([^/][a-zA-Z/_]+\.h)/\/abspaths\/\1/;s/ ([^/][a-zA-Z/_]+\.h)/ \/abspaths\/\1/g' file	2
sed -E 's/^(.* )?([^/][^ ]+\.h)/\1\/abspath\/\2/' file	2
sed -E ':a;s/^(.* )?([^/][^ ]+\.h)/\1\/abspath\/\2/;ta' file	2
sed 's/^\(.* \)\{0,1\}\([^/ ][^ ]\{1,99\}\.h\)/\1\/abspath\/\2/;' testfile.txt	1
sed 's/ \([^/ ][^ ]\{1,99\}\.h\)/ \/abspath\/\1/;' testfile.txt	1
sed -E -e :a -e 's/^(.* )?([^/][^ ]+\.h)/\1\/abspath\/\2/' -e ta testfile.txt	2
sed -i 's/\[youtube\]\(http:\/\/|https:\/\/|.*\)\(www\.|.*\)youtu\(be\.com|\.be\)\(\/watch\?v=|\/\)\([a-zA-Z0-9-]{11}\)\(.*\)\[\/youtube\]/\[MEDIA=youtube\]\5\[\/MEDIA\]/g' text.txt	1
sed -n '/^\[youtube\]/{s/[^0-9]*\([0-9]*\)*.*/[MEDIA=youtube]\1[\\MEDIA]/p}' input	1
"([""'])(?:(?=(\\?))\2.)*?\1"	1
"([0-9]+?)\1+"	2
egrep -v "^\S*([A-F])\S*\1\S*\1" inputfile	1
:%s#\v(\(\.)([^,]{-},)(.{-}\.\))#\1\3#g	1
:%s#\v(\(\.)([^,]*,)([^,]*,[^,]*,[^,\.]*\.\))#\1\3#g	2
s/ \([mt]\)\( \|$\)/\1\2/g	1
sed 's/[ ]\([mt][ ]\{,1\}\)$/\1/' input	1
sed 's/[ ]\([mt][ ]\?\)$/\1/' input	1
echo "i m sure he doesn t test test don t." | sed 's/ \([mt]\)[[:>:]]/\1/g'	1
sed -r 's/$/\næaeøoeåaaÆAeØOeÅAa/;:a;s/([æøåÆØÅ])(.*\n.*\1(..))/\3\2/;ta;s/\n.*//' file	4
sed -i 's/\(^.*myvar.*$\)/\/\/\1/' file	1
sed 's/(^\\)(.*myVar.*$)/\2/g' Build_DM_Digests_Batch.cls	2
sed 's/^\( *\)\/\/\(.*myVar.*$\)/\1\2/' file	1
sed -i 's/^\( *\)\/\/\(.*myVar.*$\)/\1/' file	1
sed -r 's/^( *)\/\/(.*myVar.*$)/\1\2/' file	2
(.)\1+	1
$ perl -p -i -e 's/src="\/([^"]+)"/src="http:\/\/media.cdn.com\/\1"/g' *	2
\s*(?:(?<search>(?:(=['"])?(?:.*)\1|.*)\.Search[^"']*(?:(=['"])?(?:.*)\1|.*))\s*$?(?<sort>(?:(=['"])?(?:.*)\1|.*)\.Sort[^"']*(?:(=['"])?(?:.*)\1|.*))?\s*$?)	4
/^Loaded options from XML file: '/Thisis/some/Users/.*/SM_Folder/([a-zA-Z]{3})/Contract_Proof_\1/processing/ID2PDF_options.xml'$/im	1
/^Loaded options from XML file: '\/.*\/SM_Folder\/([a-zA-Z]{3})\/[a-zA-Z]+_Proof_\1\/processing\/ID2PDF_options.xml$/im	1
sed 's/\(^.*$\)/"\1"/g' file	1
^(?!.*(.)\1)[a-zA-Z][a-zA-Z\d._-]*$	4
(.)\1	1
(__|--)((?:(?!\1).)+)\1	2
([@#$%])\1+	1
(?! )(\W)\1+	1
(?! )(\W)\1+	1
sed -re 's/[^a-zA-Z0-9]0+([0-9]+)(-?)/\2\1/g' anyfile.txt	2
sed -re ':l;N;$!tl;N;s!(void \w+\(\) \{)([^])*!\1 Prepend;\n\2\nappend!g' test.txt	2
sed '/^void.*{$/!b;:a;/\n}$/bb;$!{N;ba};:b;s/\n/&test1&/;s/\(.*\n\)\(.*\n\)/\1test2\n\2/' file	1
s/\(.*\n\)\(.*\n\)/\1test2\n\2/	1
egrep -w --color "(\w+)\s+\1" file	2
(\w+)\s+\1	2
grep -E '\b(\w+)\s+\1\b'  myfile.txt	2
sed 's/^\[\(.*\)\]\.\[\(.*\)\]/\1=\2/g' toto	1
s/\(.*\n\)\(.*\n\)/\1test2\n\2/	1
sed '/^void.*{$/!b;:a;/\n}$/bb;$!{N;ba};:b;s/\n/&test1&/;s/\(.*\n\)\(.*\n\)/\1test2\n\2/' file	1
sed -re 's/^([0-9]):/\1/g;s/:/L/g' temp.txt	1
sed -re 's/^([0-9]):/\1/g;s/:/\1/g' temp.txt	1
sed ':a;s/^\([0-9]*\):\([^:]*\):/\1:\2\1/;ta;s/://' input	1
s/a\(b\)c\(d\)e/\1 \2/	1
sed -re ':a; s/(GF:[0-9]*[^,]*),([^<]*)(<TAB>[A-Z]*)/\1\3\n\2\3/g;ta; ' file.txt	2
sed -r ':a;s/^(([^:]*):.*):|:/\1\2/;ta' file	2
(AB\d+).*?(?!\1)AB\d+	2
^(    (\d)\2?   )...	1
( \d )\2?	1
commands.push "sed -i '' '119 s/\(.\)username.,$/\1" + dbinfo.dbUser + "\1,/g' '" + tmpAppDir + "/drupal/sites/default/settings.php'"	1
@\[(img|thumb)\](.+?)\[/\\1@	2
!@import\s+url\((['"])(.+?)\\1\)!	2
\b(\w+)\b([\w\W]*)\b\1\b	2
`commands.push("sed -i '' '119 s/\(.\)username.,$/\1" + dbinfo.dbUser + "\1,/g' '" + tmpAppDir + "/drupal/sites/default/settings.php'");`	1
(?<=height=("|')).*?(?=\1)	1
^(?=[1-3]{2}$)(?!.*(.).*\1).*$	2
s/((!|<|>|=|\+|%)=|=)/ \1 /g	1
sed 's/^\([^ ]* [^ ]*\).*\(fieldD=[^,]*\).*/\1 \2/' filename	1
$str =~ s/([a-z]+)\d{5}([a-z]+)/\1\2/i;	2
$str =~ s/([a-z]+)\d{5}([a-z]+)/\1XXXXX\2/i;	2
/^(.*?)((\d[a-z]?\.)+.*)$/\1    \2/gmi	2
sed -r 's/<(\/?)h1>/<\1h2>/' myblog.html	1
^(((?=.*(::))(?!.*\3.+\3))\3?|[\dA-F]{1,4}:)([\dA-F]{1,4}(\3|:\b)|\2){5}(([\dA-F]{1,4}(\3|:\b|$)|\2){2}|(((2[0-4]|1\d|[1-9])?\d|25[0-5])\.?\b){4})\z	4
((?<!\\)\\\1|.)	4
^(([a-z])\1{1,2})+$	4
([a-z])\1{1,2}	1
^(?!.*(.)\1{2})[a-z]+$	4
^.*(.)\1{2}	1
^(?!.*(.)\1{2})	4
^(?!.*(.)\1{2})[A-Za-z]+$	4
^(?:([A-Za-z])(?:(?!\1)|\1(?!\1)))+$	3
sed -re '/^(.*?)((\d[a-z]?\.)+.*)$/\1\t\2/gmi' file.txt	2
sed -r 'H;g;:a;s/\s*\n$//;t;s/\n(..-...-..)\b/\1 \n/;ta;s/\n([^0-9]+)/\n/;ta' file	2
sed -rne '/^Revision/s/Revision ([0-9]+)/\1/gp' temp.txt | awk '{printf("%04d\n",$0+1)}'	2
(?P<animal>\b(dog|cat))[s]{0,1}\b\W+(?!\bporc\b\W+|\bpig\b\W+|(?P=animal)\W+)(.*?)(?!(?P=animal))\b(cat|dog)[s]{0,1}\b	2
(a)b\1	1
(.)\1{2}	1
s/.*\n(.*)\n.*/\1/	2
sed -r 's/\b[0-9]+-[A-Z]+\b/\n&\n/3;s/.*\n(.*)\n.*/\1/' file	2
:%s/\(href=\"\)[^\"]*/\1#/g	1
sed -i "" -e 's/\(@[A-Z0-9.-]+\.[A-Z]{2,4}\)/\1.example.com/g'	1
@"(?m)^(?=(?<firstValue>\d+\b))(?:\k<firstValue>, *)?(?<secondValue>\d+)\r?$"	2
sed -re 's/(\w+@\w+.\w+)/\11.example.com/g' temp.txt	2
sed -n 's#<title>Google-Ergebnis für \(http://.*\)</title>#\1#p' imgres.html	1
$ curl -s http://data.iana.org/TLD/tlds-alpha-by-domain.txt | sed '1d; s/^ *//; s/ *$//; /^$/d' | awk '{print length" "$0}' | sort -rn | cut -d' ' -f2- | tr '\n' '|' | tr '[:upper:]' '[:lower:]' | sed 's/\(.*\)./\1/'	1
(.*)(\r?\n\1)+	3
<(?<tag>div).*?>(?<text>.*)</\k<tag>>	2
echo ... | sed -r 's/.*([0-9\.]+).*/\1/'	2
sed -r 's/.*finalNumber="([^"]*)".*/\1/' file	2
sed -n 's/^.*finalNumber="\([[:digit:]]\+\)".*$/\1/p' <test	1
(.)\1\1	1
-(\d+):\+\1	2
s/.*<TEXT>\(.*\)<\/TEXT>.*/\1/	1
sed '/.*<\(TEXT\|HEADLINE\)>\(.*\)<\/\(TEXT\|HEADLINE\)>.*/!d;s//\2/' yourfile.xml	1
/.*<\(TEXT\|HEADLINE\)>\(.*\)<\/\(TEXT\|HEADLINE\)>.*/!d;s//\2/	1
^(?=[act]{3}$)(?!.*(.).*\1).*$	2
^(?:([act])(?!.*\1)){3}$	2
^(?:([1-4])(?!.*\1)){4}$	2
sed 's/\(^([ ]*[^ ]\+[ ]\+)[^ ]\+[ ]\+[^ ]\+[ ]\+[^ ]\+[ ]*$\)/\2&/' $1 >>tmp	2
s/^(([^;]*;){3})(([0-9]+;){2})(([0-9]*;)*)(([^;]*;?){3})$/\1\3\7\n\1\5\7/	2
sed -r 's/^(([^;]*;){3})(([0-9]+;){2})(([0-9]*;)*)(([^;]*;?){3})$/\1\3\7\n\1\5\7/;Ta;P;:a;D' file	2
(.).*\1	1
(.)\1	1
(?<=[\r\n])([\t ]*+)function[^\r\n]*+[\r\n]++(?:(?!\1\})[^\r\n]*+[\r\n]++)*?[^\r\n]*?\bSaveData\(\)	2
class\\s*([a-zA-Z\\d$]+).*?(public\\s+\\1\\s*\\(\\s*\\))	2
^(?!.*(.).*\1)[acne]*$	4
^(?!.*([agoid]).*\1)(?!(.*m){3})[magoid]*$	4
sed -r 's/(catch.*)[^std::](exception)/\1 std::\2/' File.cpp	2
sed -r 's/(catch.*[^:])(exception)/\1std::\2/' File.cpp	2
sed -r '/catch.*std::exception/!s/(catch.*)(exception)/\1 std::\2/' File.cpp	2
\1(AnythingHere)\2	1
(\d)\1{3}	1
(.+)\1	2
^(19|20)\d\d([-/.])(0[1-9]|1[012])\2(0[1-9]|[12][0-9]|3[01])\s+\d+,[^,]+,[^,]+$	1
^(19|20)\\d\\d([-/.])(0[1-9]|1[012])\\2(0[1-9]|[12][0-9]|3[01])\\s+\\d+,[^,]+,[^,]+$	1
awk '/crop=([0-9:]*?)/\1/'	2
echo "pos:665181533 pts:11360 t:11.360000 crop=720:568:0:4 some more words" | sed 's/.*crop=\([0-9.:]*\)\(.*\)/\1/'	1
(.)\1	1
\b(?:([a-z0-9])(?!\1)){10,12}\b	1
\b(?:([a-z0-9])(?!\1)){10,12}\b	1
(\b(?![0-9a-z]*([0-9a-z])\2)[0-9a-z]{10,12}\b)	4
([.\?#@+,<>%~`!$^&\(\):;])\1+	2
sed -i "s/PID:\([0-9]*\)/\1${$}/" "${ARCHIVO_INFO_SESION}"	1
sed "s/\(PID:\)[0-9]*/\1${$}/" "${ARCHIVO_INFO_SESION}"	1
:s/\v.*\\U(\d{4})/& \/\*\\\\%u\1 \*\/	1
echo '#jk2478_0.JPEG,' | sed -re 's/(.*)([a-zA-Z]+)([0-9]+)(.*)/\3/'	2
/^(\d{1,2})([-\.\/])(\d{1,2})\2(\d{4})$/	1
<([A-Z][A-Z0-9]*)\b[^>]*>(.*?)</\1>	2
(={2,6})\W+\1	1
(={2,6})(\S+)(\1)	2
^(\d+(?:\.\d+)?(?:\w*|%))\s+\1\s+\1\s+\1$	2
(\d+(.\d+)?(px|em|%|in|cm|mm|pc|pt|ex))\s+\1\s+\1\s+\1	2
(\d+(px|em|%|in|cm|mm|pc|pt|ex))\s+\1\s+\1\s+\1	2
^(?!\d*(\d)\d*\1)\d+$	4
.*((?!\1).).*\2	4
(?!(?=.*(.).*\1).*((?!\1).).*\2)	4
(?=.*(.).*\1)	4
sed -r 's/([^=]*)(.*)/echo -n \1 \|sed -r "s:[-.]:_:g"; echo -n \2/ge' file	2
^(?:a(?=a*(b(?(1)\1))))+\1$|^$	4
s/\([^~]*~[^~]*~0~[^~]*~[^~]*~[^~]*~[^~]*~[^~]*~[^~]*~[^~]*~[^~]*~\)\(\d{2}\/\d{2}\/\d{2}~\)\(.*$\)/\1~\3/	1
s/\([^~]*~[^~]*~0~[^~]*~[^~]*~[^~]*~[^~]*~[^~]*~[^~]*~[^~]*~\)\([0-9][0-9]\/[0-9][0-9]\/[0-9][0-9]~\)\(.*$\)/\1~\3/	1
sed -re ':a; s/^([^.-]+)([\.-])(.*)=/\1_\3=/1;t a' temp.txt	2
sed -re 's/(.*)([.-])(.*)=(.*)/\1_\3=\4/g' temp.txt	2
([^\d]+\d)+(?=.*\1)	2
^(?:(word1|word2|word3)(?!.*\1))+$	3
:1,$s/==\(.*\)/\1==\1/	1
s/\(.[A-Z]*\)/textsc{\L\1}/	1
sed -r 's/^[^"]+"([^"]*)".*/\1/' file	2
@"^(([0-9A-Z])(?!\2))*$"	3
@"^(?:([A-Z0-9])(?!\1))*$"	3
$ cat file.txt | sed -r 's/#([\t]disutil_screening[\ =0-9\.;]+# favorable)/\1/'	2
$ sed -i 's/^#\(.*# favorable\)$/ \1/' text.txt	1
cat data_export_20130206-F.csv| sed -E 's@([^,])(\")([^,])@\1""\3@g'	1
sed 's/\s\+$//' x.csv | sed -E 's@([^,])(\")([^,])@\1""\3@g'	1
sed -E 's@([^,])(\")([^,])@\1""\3@g' data_export_20130206-F.csv | sed 's,"\("$\),\1,'	1
sed -E 's@([^,])(\")([^,])@\1""\3@g' data_export_20130206-F.csv | sed 's,"\("$\),\1,'	1
sed -E 's@([^,])(\")([^,])@\1""\3@g' data_export_20130206-F.csv | sed 's,""$,"\n,'	1
sed -E 's@([^,])(\")([^,])@\1""\3@g' data_export_20130206-F.csv | tr -s '"'	1
(.*)\1	2
(..+).*\1.*\1	2
\b(\d)(?!\1)\d\b	1
([a-z])\\1{3,}	1
"(?<=^|\\s)([a-z])\\1{3,}(?=\\s|$)"	1
([=]{3})\s*(.+?)\s*\1	2
(.)\1{2}	1
(.)\1+	1
(.)\1	1
(\d)\1+	1
cat file.csv | sed 's/"\([^,]*\)"/\1/g' >> new-file.csv	1
(\w+)\.\1	2
(\w+)\.\1	2
[a-z]*([damn])\\1{1,}[a-z]*	1
[a-z]*([d])\\1{1,}[a-z]*	1
sed 's/search.php\?q=\(.*\)&cats=\(cat[0-9]\),\(cat[0-9]\)/productsearch\/\2-\3\/\1/g'	1
s@//([^\s/])@// \1@	1
^(=+).*\1$	2
:args **/*.php | argdo %s/(\$[a-zA-Z0-9]+\[)([^\]]+)\]/\1'\2'/ge | update	2
(.)\1+	1
sed 's/ \(\[[0-9]\+\]\)/\1/g'	1
(\d)\1\1	1
([1-9])(\1|w){2,}|w([1-9])(\3|w)+|ww([1-9])\5*	3
([1-9])(\1|w){2,}|w([0-9](\3|w)|w[0-9])	4
:%s/\v"([^"]+)".*_\zstest/\1/g	2
\\(['"]\\)\\(.\\{-}\\)\\1	1
grep -vP 'App: ([^, ]*) \(INTO\).*Stack: .*\1.*$' xyz.pcap.log | grep -P 'App: ([^, ]*) \(INTO\)'	2
perl -p -e "s/^(ab{2}).*$/\1/" c:\file.txt	1
^"B-([0-9]+),I-\1"$	2
([a-z0-9])\1{3,}	1
(?:([a-z])\1{4,}|([0-9])\2{3,})	1
(([a-z])\1{3,})	4
([a-z0-9])\1{3,}	1
(([a-z])\1{4,})|(([0-9])\1{3,})	4
(([a-z])\2{4,})|(([0-9])\4{3,})	1
sed -E -e 's/ ([^ "]*|"[^"]*")/;\1/g'	2
^(?!([share]).*\\1)[share]+$	4
str.split( "0+|(?<=(\\d))(?!\\1)" )	1
data.split("0+|(?<=([1-9]))(?=[1-9])(?!\\1)");	1
sed -e 's/.*\s\(bar=.+\)\s.*/\1/g'	1
sed -r 's/.*\s(bar=.+)\s.*/\1/g'	2
([\x{4e00}-\x{9fa5}])\1	1
([\x{4e00}-\x{9fa5}])(?=.*\1)	2
([\x{4e00}-\x{9fa5}]).*\1	1
([\x{4e00}-\x{9fa5}]).*?\1	1
sed 's/.*image=\(http:\/\/[^&]*\).*/\1/g'	1
.*(.)(.)(.)(.)\4\3\2\1.*	1
perl -pe 's/(?<=[^\n])([^\n])/ \1/g'	1
.*(.).*\1	1
(?!.*(.).*\1)	4
^(?!.*(.).*\1)[<set_of_characters>]{1,<cardinality_of_character_set>}$	4
^(?!.*(.).*\1)[abiw]{1,4}$	4
^(\d\d)\d{0,4}\1$	1
(?!(\d\d)\d{0,4}\1)\d{4,8}	4
^(\d{2})\d{0,4}(?!\1)\d{2}$	1
^(\d{2})\d{0,4}\1$	1
s/#([\da-f])\1([\da-f])\2([\da-f])\3\b/#$1$2$3/gi	1
#([\da-f])\1([\da-f])\2([\da-f])\3\b	1
(.)\1{N}	1
(.)\1{3}	1
(A[L]?[L]?_[^\s]*)(.*)(\1)	2
:%s/\[\(\h*\)\]/\['\1'\]/gc	1
(..)\1+	1
^(?!.*([aer]).*\1)(?!(.*d){4})([aerd]*|[a-z])$	4
^(.)\1+$	1
^(?!LOVE)(?!^(.)\1+$)[^a-z]+$	2
([a-z])\1	1
r'([a-z])\1'	1
^(a)|\1$	1
sed 's/-\([0-9]\)/\/\1/g' input.txt	1
sed -r 's|(.*)-|\1/|'	2
%s/\(x\|y\|\d\+\)\*\*\(\d\+\)/pow(\1,\2)/gc	4
%s/\(([xy0-9+-\* ]\+)\|x\|y\|\d\+\)\*\*\(\d\+\)/pow(\1,\2)/gc	4
sed -e 's/\([0-9A-F]\{2\}\)/\1:/g' -e 's/:\([- ]\|$\)/\1/g'	1
sed -e 's/\([0-9A-F]\{2\}\)/\1:/g' -e 's/:\([- ]\|$\)/\1/g'	1
sed -r 's/([^&]*&)([^&]*)(&.*)/echo "\1"$(echo "\2"\|sed "s#\\.##g")"\3"/ge' file	2
sed -e :a -e 's/\(&.*\)\.\(.*&\)/\1\2/; ta' file	1
/<\s*(to[^>\s]+)[^>]*>([^<]+)<\s*\/\s*\1\s*>/	2
<\s*(to[^>\s]+)[^>]*>([^<]+)<\s*/\s*\1\s*>	2
matches(".*([a-z])\\1{3,}.*"	1
(\1)(\2)(\3)	4
s:{{{\(.*\)}}}:\1:g	1
sed -e :a -e 's/\(.*\){{{\(.*\)}}}/\1\2/ ; ta'	1
s/(\b.*\b)\1/$1/g	2
sed 's/\(:[0-9]*\)20/\121/'	1
sed 's/:\([0-9]\{0,3\}\)20/:\121/g' $file	1
sed -r 's/(name:\{id:)[^,]*(.*alias: )([^;]*);/\1\3\2\3;/' file	2
s/(name:\{id:)[^,]*,(.*)(alias: )([^;]*)/\1\4,\2\3\4/g	2
^.*(\[Dossier sent: \]).*\n.*\1.*$	1
sed 's/\(SEARCH_STRING .*\)\(.\)$/\1INSERTED_VALUE\2/'	1
sed 's/\(SEARCH_STRING .*\)\(\S\s*\)$/\1INSERTED_VALUE\2/'	1
sed -e 's/\(SEARCH_STRING .*\)\(,.*\)/\1 INSERTED_VALUE\2/'	1
sed -i 's/^\(\"\$\$RESULT_REPORTER\$\$\"*:*\).*$/\1\"XML\"/' /path/to/file	1
^(-|(K)?((?!\2)Q)?((?!\2\3)k)?((?!\2\3\4)q)?)$	4
sed "s/#\([^#]*\)#/===\1===/g" filename	1
sed 's/#\([^#][^#]*\)#/===\1===/g' filename	1
sed 's/# \([^#]*\) #/=== \1 ===/g' filename	1
sed 's/#\([^#]\{1,\}\)#/===\1===/g' filename	1
sed -E "s/#([^#]+)#/===\1===/g" filename	2
(.)(?=.*?\1)	2
sed -ne 's/[^0-9]*\(\([0-9]\.\)\{0,1\}[0-9][^.]\).*/\1/p'	1
sed -n 's/^.*-\([0-9.]*-[0-9]*\)\..*$/\1/p'	1
sed -n 's/[^0-9]*\(\([0-9]\+\.\)\{2\}[0-9]\+-[0-9]\+\).*/\1/p' <<< "$String1"	1
:%s/\(^\]*\).*/\1/	1
sed -r 's/([.?!]) +([A-Z])|\1$/\1\n\2/g' file	1
(.+?)(\1)(\1)?	2
String nakedPat = "<(us-patent-grant)((\\s*[\\S&&[^>]])*)*\\s*>(.+?)</\\1>";	2
"<(us-patent-grant)\\s*([^>]*)\\s*>(.+?)</\\1>"	2
^(?!([a-z])\1{3,}$).*	4
<([^>]+)>([^<]*)</(\1)>	2
(([\d]){1,}([\d]){1,})\1{1,}	1
(\d)(\d)\d\1\2	1
(\d)(?!\1)(\d)(?!\1|\2)\d\1\2	4
\b(\d\d)\d(\1)\b	1
(['"])((?:\\\1|.)+?)\1|([^\s"']+)	2
find ./ -type f -exec sh -c "echo {} ; sed -nre 's/^.*->(from|join)\('\''([^'\'' ]*)['\'' ].*$/\2/gp' \"{}\" ;" \;	2
echo "$x" | awk -F/ '{print gensub(".*/java/(.*/).*", "\\1", $0)}'	4
echo "$x" | sed -e 's@.*/java/\(.*/\).*@\1@'	1
sed -r  's/ts\(((\([^()]*\)|[^(),])*),((\([^()]*\)|[^(),])*),((\([^()]*\)|[^(),])*),((\([^()]*\)|[^(),])*)\)/ts(\1,\7,\3,\5)/g' *.F	2
\d{1,2}([\.-])\d{1,2}\1\d{4}	1
sed 's|[^0-9]*\([0-9\.]*\)|\1 |g' fiilename	1
/(1[012]|0?\d)([-\/ ]?)([12]\d|3[01]|0?\d)\2((19|20)?\d\d)/	1
sed -e ':a;s/\(<[^> ]*\) \(.*>\)/\1_\2/g;ta' badDoc.n3 | sed -e ':b;s/\(<[:/%_a-zA-Z0-9.\-]*\)[^><:/%_a-zA-Z0-9.\-]\(.*>\)/\1\2/g;tb' > goodDoc.n3	1
sed -e ':a;s/\(<[^> ]*\) \(.*>\)/\1_\2/g;ta' badDoc.n3 | sed -e ':b;s/\(<[:/%_a-zA-Z0-9.\-]*\)[^><:/%_a-zA-Z0-9.\-]\(.*>\)/\1\2/g;tb' > goodDoc.n3	1
sed -e 's/\(<[^ ]*\) \(.*>\)/\1_\2/g' badDoc.n3 | head	1
sed 's#\(http://.*/\)[0-9]\+.*#\1#'	1
(?=.*(..+)\\1)	4
(?!.*(.{2,})\\1)	4
^(?=.*\\p{Nd})(?=.*\\p{L})(?!.*(.{2,})\\1).{5,12}$	2
replace ([a-z])(?=[A-Z])  with \1_	1
's/([0-9])p/\1 p/'	1
sed 's/[^>]*>\([^<]*\)<[^>]*>/\1/g' input	1
sed -r ':a; N; /(TITLE)[^\n]*\n\1/ s/\n.*//; ta; P; D' infile	1
sed -r 'N; /(TITLE)[^\n]*\n\1/ s/\n.*//; P; D' infile	1
ver=$(echo $zip| sed -E 's/.*([0-9]\.[0-9]{1,2}\.[0-9]{1,2}).*/\1/')	1
/<(?=.*? .*?\/ ?>|br|hr|input|!--|wbr)[a-z]+.*?>|<([a-z]+).*?<\/\1>/i.test(htmlStringHere)	2
(\b\w+\b)\W+\1{3,}	2
(\b\w+\b)\W{3,}+\1	2
(\b\w+\b)\W+\1	2
(\w+\W)\1{2,}	2
sed -r 's/(^|[^\\])\\t/\1   /g'	1
sed -E 's/(^|[^\\])\\t/\1   /g'	1
sed -r 's/^\\t|([^\\])\\t/\1\t/g' file	1
href=(['"])[^\s]+(?<![\/]|.pdf)\1	1
grep -v "#" blastGE90_lengthGE1000 | cut -f 1,2 | sed -r 's/(.+)_chr([0-9XY]+)_.+\t(.+)_chr([0-9XY]+).+([0-9]+\.).+/\1 \2 \3 \4 \5/'	2
grep -v "#" blastGE90_lengthGE1000 | cut -f 1,2 | sed -r 's/(.+)_chr([0-9XY]+)_.+\t(.+)_chr([0-9XY]+).+/\1 \2 \3 \4/'	2
grep -v "#" blastGE90_lengthGE1000 | cut -f 1-3 | sed -r 's/(.+)_chr([0-9XY]+)_.+\t(.+)_chr([0-9XY]+)_.+\t([0-9]+).+/\1 \2 \3 \4 \5/'	2
/([a-zA-Z]:)?([\/\\])([a-zA-Z0-9\.]\2?)*/ig;	3
%s/\(\(href\|src\) *= *"[^"-]*\)-/\1_/g	1
r'(\w*)(\w)\2(\w*)'	2
(\w)(\2{2,})'	4
(\d{3})(.{\1})	1
sed -r 's/XX ([^"]+)/\1 XX/' filename	2
sed -r 's/"(XX) ([^"]*)"/"\2 \1"/g'	2
$company =~ s/(?=\w+)(?!=asp|vb|c#)\.[a-zA-Z]{2,6}\b/\1/g;	2
\b\w*?(\w{2})\w*?\1\w*\b	1
\b\w*(\w{2})\w*\1	1
\b\w*?(\w{2})\w*?\1\w*?\b	1
echo "/Volumes/testVolume/test/" | sed 's/\/Volumes\/\(.*\)\//\1/g'	1
sed 's#/Volumes/\([^/]*\)/.*#\1#'	1
(?<=code\sstart\s)(?<key>\b\w+\b)\s(?<language>\b\w+\b).*\r\n(?<content>(?s).*)(?=\r\n.*end\scode\s\1\s-->)	2
\\b(\\w+) \\1\\b	2
(?i)\\b(\\w+) \\1\\b	2
.*(?i)\\b(\\w+) \\1\\b.*	2
/(<ASObject.*)<(updated|voided).*<\/\2>(.*)<(updated|voided).*<\/\4>(.*<\/ASObject>)/	2
f(.)\1	1
(.).*\1	1
^(.).\1(.)\2((?!(.).*\4)(?!(\1|\2)).)*$	4
(.).\1(.)\2	1
^(.).\1(.)\2((?!(\1|\2)).)*$	3
^(.)((?!\1).)\1((?!(\1|\2)).)\3((?!(.).*\6)(?!(\1|\2|\3)).)*$	4
total-matched\s*=\s*(["'])(.*?)\1	2
sed -e 's/[0-9]*\([a-z]*\)[0-9]*/\1/'	1
echo '<number>5645646546545656756756757</number>' | sed 's/.*<number>\([0-9]*\)<\/number>.*/\1/g'	1
echo "abc2def3ghi" | sed 's/^\(.*\)[0-9]\(.*\)$/"&" \1\2/i'	1
sed -E "s/('[0-9]+),([0-9]{8,}')/\1.\2/g" file.sql	2
sed -r "s/('[0-9]+),([0-9]{8,}')/\1.\2/g" file.sql	2
(\w+)( *):( *)(\w+|(["'])([\w\s]+)\5)	2
(\w+)\s*:\s*(((['"]).+?\4)|\w+)	2
grep "<.* " messages.log | sed  's/.*\<\(.*\) \[.*/\1|/g' | tr -d '\n' | sed 's/.$//'	1
<([A-Z][A-Z0-9]*)\b[^>]*>(.*?)</\1>	2
"<([A-Za-z][A-Za-z0-9]*)\\b[^>]*>(.*?)</\\1>"	2
<([a-zA-Z]+).*?>(.*?)</\\1>	2
(\b.+\b)\1\1\1	2
sed -ne '/^[a-z]/p;/Data/s/[^:]*: \(.*\)/\1/p'	1
sed ':a;/\[/!d;/\]/!{$!N;s/\n/ /;ba};s/[^[]*\[\([^]]*\)\]/\1\n/;P;D' file	1
-(.*)\n\+\1\n	2
$ gawk -v RS='[[:punct:]]*[[:digit:]]+[[:punct:]]*' 'RT{$0=tolower($0); print gensub(/.*\y(the|a|an)\y/,"\\1","") gensub(/[[:punct:]]/,"","g",RT)}' file	2
^(?=.*?[!@#$%^&])(?:([a-zA-Z0-9!@#$%^&])(?!.*?\1.*?\1)){10,20}$	2
^(?=.*[!@#$%^&])(?!.*(.).*\1.*\1)[A-Za-z\d!@#$%^&|]{10,20}$	2
(?!.*(.).*\1.*\1)	4
^(?=.*[!@#$%^&])(?!.*(.).*\1.*\1)[^\s~,'.:;^|]{10,20}$	2
(.)\1+$	1
sed -r '/\b(the|an|a)\b/I!d;s//\n&/;s/[^\n]*\n//;s/\{([0-9]{1,4})\}|\(([0-9]{1,4})\)|\[([0-9]{1,4})\]|\b([0-9]{1,4})\b/\1\2\3\4\n/;P;D' file	1
(\w\w)\1{3}	1
/(\w*)\/\1\b/g	2
/^(\w*)\/\1$/	2
new Regex(@"^(.*?)/\1$")	2
<[a-zA-Z][^>]*(?:poster|src)=(['\"])([^'\"]+)\\1[^>]*>	2
<[a-zA-Z]*[^>]*(?:(poster)|src)=(['\"])([^'\"]+)\\2(?(1)[^>]*(?:src=(['\"])([^'\"]+)\\4)?[^>]*|[^>]*(?:poster=(['\"])([^'\"]+)\\6)?[^>]*)>	4
s|\(["*]\)|\\\1|g	1
ls | sed -e 's/^[^.]*$/NoExtension/g' -e 's/.*\.\(.*\)/\1/'	1
s/(Annie|22|Minnesota)/\1-DATA/g	1
(\d)\1	1
(?:\s*<(Images|Reviews)>.+?</\1>\s*)+	1
([a-z])\1{2}	1
(.)\1{2}	1
([a-z])\1{2}	1
grep '\([0-9]\{4\}_[0-9]\{2\}_[0-9]\{2\}\).*\1'	1
:g/\v(\d{4}_\d{2}_\d{2}).*\1	1
(\d)\1\1\1\1\d\d	1
(\d)\1{4}(?!\1)(\d)(?!\1|\2)\d	4
/<(\w+:Name)>(\w+)<\/\1>/	2
sed -n 's/^.*_\(m.*$\)/\1/p' file	1
(-{5})BEGIN\sCERTIFICATE\1\s*(?<Cert>[^-]*(?:(?=\1)|-))*?\s*\1END\sCERTIFICATE\1	3
original.replaceAll("(.)\\1+", "$1");	1
original.replaceAll("(.)\\1+", "$1$1");	1
pwd | sed "s%^\(/[^/]*/\).*?\(/[^/]+\)$%\1...\2%"	1
pwd | sed "s%^\(/[^/]*/\).*\(/[^/]*\)$%\1...\2%"	1
(>|\|)[^>\|]*\1[^>\|]*\1	1
(\s*\w+\s*([>\|])\s*)(\s*\w+\s*\2\s*){2,}\w*	2
^\$-?\d{1,3}(?:(,?)\d{3}(?:\1\d{3})*)?(?:\.\d{2})?$	1
<a\s+(?:[^>]*?\s+)?href=(["'])(.*?)\1	2
<([a-zA-Z]+).*?>(.*?)</\1>	2
(\w+)\s*=\s*(["'])(.*?)\2	2
sed 's/.*:\(.*\)@.*/\1/'	1
^(\d*([.,](?=\d{3}))?\d+)+((?!\2)[.,]\d\d)?$	2
echo img_12-31-06_99.jpg | sed 's/\(img_[0-9]*-[0-9]*-[0-9]*_[0-9]*\) \(.jpg\)/\2 \1/'	1
sed 's/\(img_[0-9]*-[0-9]*-[0-9]*_[0-9]*\)\(.jpg\)/\2\1/'	1
ip addr show dev eth0 | sed -nr 's/.*inet ([^ ]+).*/\1/p'	2
(["'])[^]*?\1	1
(\d)(\d)(\\1\\2)+	3
(\d)(?!\1)(\d)(\1\2)+	4
(\d)(?!\\1)(\d)\\1\\2	4
((\d)(?!\\2)\d)\\1	4
((select|,)\s+((((`)?\w+\6?\.)?(`)?\w+\7?)(\s+as\s+(`)?\w+\9?)?\s*))+from\s	3
grep ./* -e 'expression' | perl -pe 's/^.*?(\d+):.*?(\d+)$/\1 \2/'	2
find . -exec sh -c "echo -n \;{}::;grep -e 'expression' {}" \; | perl -pe 's/^.*(\d+)::/File \1:\n/' | perl -pe 's/\D*(\d+)$/\1/'	2
find . -exec sh -c "echo -n \;{}::;grep -e 'expression' {}" \; | perl -pe 's/^.*(\d+)::/File \1:\n/' | perl -pe 's/\D*(\d+)$/\1/'	2
sed -r ':a;/\b[Ss]h\S+/!b;s//\n&\n/;h;s/.*\n(.*)\n.*/\1/;s/././g;G;s/(.*)\n(.*)\n.*\n/\2\1/;ta' file	2
perl -pe 's/(.*)/\1.py/g'	2
$ ls -l | grep ^d | awk '{print $9}' | perl -pe 's/(.*)/\1.py/g'	2
sed -e '/^\(ENVIRONMENT="[^"]*\.com\)"/s//\1.origin.net"/'	1
s/^[^0-9]+[[:space:]]([0-9]+x[0-9]+)[[:space:]].*$/\1/	2
(cat|dog) is a \1	1
sed -r 's/.+([0-9]{2} tbr).+/\1/'	1
sed -r 's/.+ (\S+) tbr,.+/\1/'	2
sed -r 's/.+([0-9]{3,5})x([0-9]{3,5}).+/\1x\2/'	1
uptime | sed 's/^.* up \+\(.\+\), \+[0-9] user.*$/\1/'	1
sed 's/^\([^ ][^ ]*[ ]\)[ ]*/\1/' input	1
r(?=[aeip]{4,4})(.)(?!\1)(.)(?!\1|\2)(.)(?!\1|\2|\3).r	4
sed -r 's/_([a-z])/\U\1/g' file	1
r(?:(?!\1)a()|(?!\2)e()|(?!\3)i()|(?!\4)p()){4}r	4
@"(?<exp>\<(?<tag>[^\<\>\s]+)[^\<\>]*\>[^\<\>]+\<\/\k<tag>\>).*\k<exp>"	4
sed -i.bak 's/\(aaa=\).*/\1"xxx"/g' your_file	1
(^|\b)(?!9|8|77[3-9]|666|000)(\d{3})( - | |-)(?!00)(\d{2})\3(?!0000)(\d{4})(\b|$)	1
(^|\b)(?!9|8|77[3-9]|666|000)(\d{3})( - | |-)(?!00)(\d{2})\3(?!0000)(\d{4})($|[^\d-])	1
/<(\w+).*<\/\1\s*>/igsm	2
s/\G([^\/.]*)\./\1\//g	2
([^a-zA-Z0-9-_\s])\\1+	1
(["\'])([^"\']+)\1	2
<a(?: [^>]*?)? href=(["'])([^\1]*?specificword.*?)\1(?: .*?)?>.*?</a>	2
<a(?: [^>]*?)? href=(["'])[^\1]*?specificword.*?\1(?: .*?)?>.*?</a>	1
sed 'N;s/^\( *\)end\n\( *\)end$/\1finish\n\2finish/;t;P;D' testfile.rb	1
s/\([^ ]\)=>/\1 =>/g	1
:%s/^\([1-3]\),\(.*\)/\2,\1/g	1
:%s/^1,\(.*\)/\1,1/	1
:%s/1,\(.*$\)/\1,1/gc	1
:%s/\([0-9]*\)\(.\)\(.*\)/\3\2\1/	1
sed -r 's/("XXXX"\s*:\s*)(")?[^",]*(")?/\1\2YYYY\3/'	2
sed -r 's/("XXXX"\s*:\s*)(")?[^",]*[^"]*/\1\2YYYY/' input	2
sed -r 's/("XXXX"\s*:\s*).*$/\1"YYYY",/' input	2
sed -r 's/("XXXX"\s*:\s*)((")[^"]*"|[^,]*)/\1\3YYYY\3/' input	2
:g/'\(.*\)'/s/$/: \1/g	1
%s/'\(.*\)'.*/& : \1/	1
sed -e 's/\([A-Z]*\) \([A-Z][A-Z]\),/\1\|\2,/g' -e 's/, /\|/g'	1
s/please (\S+) this/\1/	2
sed -r 's/^(.*), *(.*) (..), ([0-9]{5})/\1|\2|\3|\4/'	2
sed 's/^\(.*\), *\(.*\) \(..\), \([0-9][0-9][0-9][0-9][0-9]\)/\1|\2|\3|\4/'	1
sed -e 's/, /|/g' -e 's/ \([^ ]\+\)$/|\1/' file	1
sed '/start host1/,/end host1/{s/\(host1,def,java,es,dev \)L2,0/\1L2,1/g}' file	1
^\\d+(?:([.,])\\d{3})*(?:(?!\\1)[.,]\\d{1,2})?$	1
r'<(a|p|div)></\1>'	1
sed -E 's/([[:alpha:]])?0([[:alpha:]])/\1O\2/g; s/([[:alpha:]])0([[:alpha:]])?/\10\2/g'	1
^(\p{Lu})(\p{Ll}?$|(?=\p{Ll}{2})(?i)(?!(\1){2}))	1
(\p{Lu})\1{3,}.*	1
([A-Z])(?!\1)(?i)\1	1
([A-Z])(?i)\1	1
(\\p{Lu})(?=\\p{Ll})(?i)\\1	1
(?i)([a-z])\1{2,}.*	1
(?i)(\w)\1{2,}.*	1
sed -r 's# ([0-9]{2}/[0-9]{2}) #|\1|#' file	1
sed -E 's/([0-9]{2}\/[0-9]{2})/|\1|/g' t.txt	1
cat t.txt | sed -E 's/([0-9]{2}\/[0-9]{2})/|\1|/g'	1
sed 's/^\([A-Za-z ]*\) \([-A-Z 0-9]*|\)/\1|\2/' input	1
sed 's/ \([A-Z]*[0-9][0-9]*\)/\|\1/'	1
([A-Za-z\u00C0-\u1FFF\u2800-\uFFFD]+)\s+\1(?:\s|$)	2
sed -r 's@(^|[^[:alpha:]])old($|[^[:alpha:]])@\1new\2@g'	1
[^\w\s]|(.+)\1+	2
[^\w\s]|(.+?)\1+	2
[^\w\s]|(.+?)\1+	2
(.+)\1	2
Select REGEXP_REPLACE(spinoff,'(off$)|(of)([^$])','\1 \2 \3') form dual;	4
Select REGEXP_REPLACE(spinoff,'(off$)|(of)','\1 \2 ') form dual;	4
sed -r '#|([0-9]{4})\ ([0-9]{4})\ ([0-9]{4})\ ([0-9]{4})|#\1\2\3\4#g'	1
sed 's/\([0-9]\) \([0-9]\)/\1\2/g'	1
sed 's/\([0-9]\{4\}\) /\1/g' inFile	1
<([-+*]{2})(.+)\1>	2
^(([+\-]([SALT]))(?!\2))+$	3
\b(\d{1,2})(\/|\.|\-)\1\2\1\b	1
\b(\d{1,2})([/.-])(?1)\2(?1)\b	1
sed 's/\([^\\]\)\(\\\)\([^\\]\)/\1\\\\\3/g'	1
(\w+)\s*\(\1\s*\w+\)	2
^(0[1-9]|1[012])([- /.])(0[1-9]|[12][0-9]|3[01])\2(19|20)\d\d$	1
gawk '/abc[0-9]+xyz/ { print gensub(/.*([0-9]+).*/,"\\1","g"); }' < file	4
gsub("^[[:alpha:]]*([[:alpha:]])\\1\\1[[:alpha:]]*$", "", mystring)	1
mystring[grepl("(.{1})\\1{2,}", mystring, perl=T)] <- ""	1
(.).*(?\1)(.).*(?\1)(?\2)(.).*(?\1)(?\2)(?\3)(.)	4
^(?=.{4})(?!.{32})(?!.*(.)\1{4})\w[\w.-]+\w$	2
(((\w{5})\w?)\w{2}?)\w*\.com 80 (\1|\2|\3)\.php	1
(\w{5,6}|\w{8})\w*\.com 80 \1\.php	1
([a-z]{6})\S* 80 \1\.php	1
/^([\s]+[\S]*).*$/\1//	2
/^([\s]*[\S]+).*$/\1/	2
(?<cpy>\b\w+\b)\s*\(\s*\k<cpy>\s+\w+\s*\)	2
(\+(\d+)([ATGCatgcnN]){\2});	2
(..+?)(\1+)	2
^(..+?)\1+$	2
sed 's#[^0-9]\+\([0-9]\+\).*#\1#' INPUTFILE	1
(<(\w+)(\s[^>]*)?>)(\s|\n|\t)*\1(.*)(<\/\2>)(\s|\n|\t)*\6	4
(<(\w+)(\s[^>]*)?>)\1(.*)(<\/\2>)\5	4
(a*)b\1	2
find . -name "*.png" | sed 's#^.*/\([^/]*\)/\([^/.]*\)\.[0-9]\+\.png$#\1 \2#' | sort -u	1
(\b\w+\b)\W+\1	2
/REGEXP:.*%22(.*)%22:\1.zip	2
."(.*)"\1.zip	2
(['"])((?:\\\1|(?!\1).)+)\1	2
"(.)\\1"	1
sed -r 's/-/;/;:a;s/^(\*([^*]+)\*.*);[^;]+\2.*/\1;/;ta;s/;/-/;s/;$//' file	2
([\"\'])(?:(?=(\\\\?))\\2.)*?\\1	1
([a-zA-Z0-9])\1\1	1
(([rle])\2)\2*|(.)\3+	1
(?<=(\"?)\\b)(?!(?:AND|OR|NOT)\\b)[a-zA-Z]+(?=\\1(?:\\s|$))	1
(\"?)(?<=\\b)(?!(?:AND|OR|NOT)\\b)[a-zA-Z]+\\1(?=\\s|$)	1
(?<=(\\()?(\"?)\\b)(?!(?:AND|OR|NOT)\\b)[a-zA-Z]+(?=(?(1)\\)|\\2(?:\\s|$)))	2
(\(?)(")(.+)\2\1	2
<([^>]+)>(.+)<END_\1>	2
<([^>]+)>(.+)<END_\\1>	2
(<([bB][Rr]\b)[^>]{0,}>(?:<\2[^>]{0,}>){1,})	1
Replace (^\d+.*)[\r\n]+(^\D+.*) with \1 \2	2
sed 's/0*\([1-9]\)/\1/g'	1
sed -r -e 's/(^|\.)0+([1-9])/\1\2/g' -e 's/(^|\.)(0)0*(\.|$)/\1\2\3/g'	1
sed -r -e 's/(^|\.)0+([1-9])/\1\2/g' -e 's/(^|\.)(0)0*(\.|$)/\1\2\3/g'	1
sed -E -e 's/(^|\.)0+([1-9])/\1\2/g' -e 's/(^|\.)(0)0*(\.|$)/\1\2\3/g'	1
sed -E -e 's/(^|\.)0+([1-9])/\1\2/g' -e 's/(^|\.)(0)0*(\.|$)/\1\2\3/g'	1
((<span\b[^>]*\s\bstyle=(["'])([^"]*)\3[^>]*>)(.*?)</span>)	2
^(?:4\d{3}|5[1-5]\d{2}|6011|3[47]\d{2})([- ]?)\d{4}\1\d{4}\1\d{4}$	1
sed 's/\(.*\) \(.*\) \(2\.[0-9]*\) \(.*\)/\1 \2 \3   F   F   F/g'	1
<(\w+)[^>]*>.*<\/\1>	2
^\(.*\)\(\1.*\)	1
\b(.*)\1\b	2
(?:^\s*?(\b[^=]*?\b)(?:\s{0,}[=]\s{0,}))(?:(['"]?)(\b[^,]*\b)\2\s*?)(?:$|(?:[,]\s*?(['"]?)(\b[^,]*\b)\4\s*?)(?:$|[,]\s*?(['"]?)(\b[^,]*\b)\6\s*?$))	2
(element\.\w+)=(?:[^##]+|##(?! END \1))+(?=## END \1)	3
$ sed -e "s/([a-zA-Z0-9.-/\\ :]+)/\1/g"	2
sed -e "s/\([a-zA-Z0-9./\\ :-]\+\)/\1/g"	1
sed -re "s/([a-zA-Z0-9./\\ :-]+)/\1/g"	2
$ sed -re "s/([a-zA-Z0-9./\\ :-]+)/\1/g"	2
$ sed -e "s/\([a-zA-Z0-9./\\ :-]\+\)/\1/g"	1
-re "s/WARNING: ([a-zA-Z0-9./\\ :-]+)/${warn}WARNING: \1${c_end}/g" \	2
-e "s/WARNING: \([a-zA-Z0-9./\\ :-]\+\)/${warn}WARNING: \1${c_end}/g" \	1
-r -e "s/WARNING: (\([a-zA-Z0-9./\\ :-]\+\))/${warn}WARNING: \1${c_end}/g" \	1
sed -e "s/\([a-zA-Z0-9.\/\\ :-]\+\)/\1/g"	1
sed -e "s|\([a-zA-Z0-9./\\ :-]\+\)|\1|g"	1
sed -e "s|WARNING: \([a-zA-Z0-9.-/\\ :]+\)|${warn}WARNING: \1${c_end}|g"	1
(#<omit_(\\w+)>)(.+)(?<!#)(<omit_\\2>)	2
<((wsse:)?Username)>(.*)(</\1>)	2
(?<!\1)([^raol1c])\1(?!\1)	4
(?<!(.)(?=\1))([^raol1c])\2(?!\2)	4
(?<!(?=\1).)([^raol1c])\1(?!\1)	4
sed  "s/\([^ ]*[A-Z][^ ]*.png\)/\L\1/g" file-21-05-2013.sql*	1
sed -nr '/^.*\b(\w*[A-Z]\w*\.png).*$/{s//\1/;s/.*/\L\0/;p}' file	2
sed 's/\([0-9]*\).\([0-9]*\).\([0-9]*\).\([0-9]*\).*\(PTR\)/\4.\3.\2.\1\t\5\t/' file	1
([^@]+@[^@]+)(.*?)\1	2
sed -n 's/.*,[ ]*\([^ 0-9][^\,]*\),/\1/p' input	1
perl -p -e 's/([^\.!?])\n/\1 /g; s/  +/ /g;' file.txt	1
\d\d|(.).*(\1)	1
'([AB])\1'	1
'(?P<a_or_b>[AB])(?P=a_or_b)'	1
^(?=.{8,20}$)(?=[^A-Za-z]*[A-Za-z])(?=[^0-9]*[0-9])(?:([\w\d*?!:;])\1?(?!\1))+$	3
(?:([VALID])\1?(?!\1))+	3
^(?=.{8,20}$)(([a-z0-9])\2?(?!\2))+$	4
egrep '.*(.)(.)(.)(.)(.)(.)(.).*[:].*[:].*[:].*[:].*\1\2\3\4\5\6\7.*[:].*[:].*' passdw	1
grep -iP '([^:])([^:])([^:])([^:])([^:])([^:])([^:])([^:]*:){4}[^:]*?\1\2\3\4\5\6\7'	2
echo 'foo_abc_bar' | sed -r 's/(foo)_((abc)_)?(bar)/\1=\3=\4/g'	1
echo 'foo_abc_bar' | sed -r 's/(foo).*?(abc).*?(bar)/\1=\2=\3/g'	1
\A\*(([^*])\2*)\*(([^*])\4*)\Z	2
^\*([a-zA-Z])\1*\*([a-zA-Z])\2*$	1
/(^=586.*)\.$/\1/	2
<meta\b[^>]*\bname=["]keywords["][^>]*\bcontent=(['"]?)((?:[^,>"'],?){1,})\1[>]	1
sed -r 's/([^|]*)\|([^|]+)\|/\1abs(\2)/g' file.tex	2
sed -n 's|.*<url>\(.*\)</url>.*|\1|p'	1
perl -n -e 'print if s%.*<url>(.*)</url>.*%\1%'	2
sed -n 's%.*<url>\(.*\)</url>.*%\1%p'	1
\[([^\]]+)\]\[/\1\]	2
\[([^\]=]+)(=[^\]]*)?\]\[/\1\]	2
<a\b[^>]*?\bhref=(['"])([^'"]*)\1[^>]*?>	2
(?:Public|Private)\s+(Function|Sub)\s+([a-z0-9]*).*?End\s+\1	2
(a\w)\1{4}	1
(a\w)\1{4}	1
(a\w)\1+	1
a{5}(\w)\1{2}	1
(?:(['""])((?:(?!\1).)*)\1|([^\s>]+))	2
src=(['""]).*?\1	1
(['""])[^\1]*\1	1
sed 's#\(.*\)#<spec>\1</spec>#' input_file	1
sed -i"bak" 's#\(.*\)#<spec>\1</spec>#' input_file	1
sed 's/hd\([0-9]\)/hard\1drive/'	1
\w+ *= *(["']).*?\1	1
sed -r  "s#(<spec>)(</spec>)#\\1$(<file.txt)\\2#" infile	1
s/\((\d+)\)/\t\1/	2
sed 's/\("pk":\s*\)[0-9]\+/\1null/' file	1
sed 's/\(.*:\s*\)[0-9]\+/\1null/' file	1
sed 's/<\([^>]*\)\*\([^>]*\)>/<\1\2>/g'	1
sed ':doagain s/<\([^>]*\)\*\([^>]*\)>/<\1\2>/g; t doagain'	1
echo " 22.665774 Fr RMSG  0 0 1 1 18 11 Rx 0 308002 5  20  1d6 x 20 20 a8 4f 35 40 1b 00 0f 08 f7 89 ff fa ff f3 35 80 49 00 00 00 00 30 00 00 80 ab 4b 54 40 f0 00 fc 714a81  1  40937" | perl -pe "s/.*?\sx\s\w*?\s\w*?\s(.*?)\s\w{4,}.*/\1/"	2
(?m)^.*?(\\r?\\n)(?:^\\d{4}\\s.*?\\1)+	1
(?m)^STARTText.*?(\\r?\\n)(?:^\\\\.*?\\1)+	1
^(\w{2,5}[FGHJKMNQUVXZ])(\d)-(\w{2,5}[FGHJKMNQUVXZ])(?!\2)$	1
^(\w{2,5}[FGHJKMNQUVXZ])(\d)-(\w{2,5}[FGHJKMNQUVXZ])[^\2]$	1
^(\w{2,5}[FGHJKMNQUVXZ])(\d)-(\w{2,5}[FGHJKMNQUVXZ])(?!\2)(\d)$	1
perl -i -pe 'undef $/; s#(<web-app[^>]*>).*?(</web-app>)#\1CHEESE\n\2#gsi' filePath/web.xml	2
msgid ([""'])(?:(?=(\\?))\2.)*?\1	1
msgid (["']{2})\n([\s\S]*?)\nmsgstr \1	2
msgid (['"]{2})([\s\S]*?)msgstr \1	2
perl -i -pe 'BEGIN {undef $/;} s#(<web-app[^>]*>).*?(</web-app>)#\1CHEESE\n\2#gsi' filePath/web.xml	2
(<a\b[^>]*?\btitle=(['"]))(.*?)\2	2
(?:(["']?)[-]?[a-z0-9-.]*\1|(?<=[^a-z0-9])[^a-z0-9](?=(?:[^a-z0-9]|$))|(?<=[a-z0-9"'])[^a-z0-9"'](?=(?:[^a-z0-9]|['"]|$)))	1
(["']?)[-]?[a-z0-9-.]*\1	1
<li\b[^>]*\bclass=(["'])wx-feels\1[^>]*?>(.*?\bitemprop=(['"])feels-like-temperature-fahrenheit\3[^>]*>(\d+).*?)<\/li>	2
perl -nle 'print if /^(.)(.)[^\2]+(\2)[^\2]+(\2)$/' < /usr/share/dict/words	1
^(.)(.)[^\2]+(\2)[^\2]+(\2)$	1
sed -r 's/__([^_]+(_[^_]+)*)__/{{\1}}/g' file	2
sed -r 's/__/\n/g;s/\n([^\n]*)\n/{{\1}}/g;s/\n/__/g' file	2
^(.*)(\\1+)$	2
([b-df-hj-np-tv-xz][aeiouy](?:[a-z])?|[aeiouy][b-df-hj-np-tv-xz](?:[a-z])?)(\1){2,}	1
(?:^|,)("?)(.*?)\1(?=,(?!\s)|$)	2
<(amount)\b[^>]*>([^<]*)<\/\1>	2
sed -r ':a;s/\band\b([^()]*\))/or\1/;ta' file	2
sed 's/dropcaps">\([a-zA-Z]\)<\/span>\([^“]*\)”/dropcaps">“\1<\/span>\2”/' < book2 > book2.fixed	1
cast(\1 as varchar(100))\2	4
/<([a-zA-Z]*)>.*<\/\1>/gi	2
:%s/^\s\+\(\w\+\): \(\w\+\)/\2 -> \1/g	1
:%s/\v\s+(\w+): (\w+)/\2 -> \1/g	2
%s/\v\s*([^:]*):\zs.*/\1/	2
sed 's:^.*;/\(\w*/\w*\).*:\1:;1~2s:/.*::' file	1
sed -r 's|[^;]*;/([^;/]*(/[^;/]*)*)/.*|\1|' file	2
sed -E -e 's/([0-9-]+\.[0-9]*,[0-9-]+\.[0-9]*)/[\1],/g' -e 's/,]/]/'	2
s#\(.*\)/.*#\1#	1
s#\(.*\)/.*#\1	1
"s#\(.*\)/.*#\1#"	1
(.)\1	1
str.match(/^[a-d]+$/) && !str.match(/([a-d]).*\1/)	2
^([a-d])(?!(\1))([a-d])?(?!(\1|\3))([a-d])?(?!(\1|\3|\5))([a-d])?(?!(\1|\3|\5|\7))$	4
<a\b[^<]*\bhref=(['"])(https?:\/\/(?:www[.])?abc[.]com[^"'?]*?([?]?)[^"'?]*?)\1[^<]*<\/a>	2
(\w+)\s*=\s*(["'])((?:(?!\2).)*)\2	2
(\w+)\s*=\s*(["\'])((?:(?!\2).)*)\2	2
\b(\w+)\s*=\s*('|\")(.*)\2	2
^(\d+)\s*=\s*\1$	2
sed -E -i.bak 's/(all\s+)peer/\1md5/' file	2
sed 's/\(all *all  *\).*/\1md5/'	1
sed -i.bak -e "s/\(all[ ]\+\)peer/\1md5/g" file	1
(.*)(\\1+)	2
^(?=.{64}$)(?!.*?(.)(?=.*?\1))	2
<input\b\s+(?=[^>]*name=(["'])number_r\1)(?=[^>]*type=(["'])hidden\2)[^>]*value=(["'])(\d+)\3[^>]*>	4
(?=[^>]*type=(["'])hidden\2)	2
(?=[^>]*name=(["'])number_r\1)	4
sed -e 's/^\(>..........\).*/\1/'	1
sed -e 's/^\(>.\{10\}\).*/\1/'	1
sed -r 's/^(>.{10}).*/\1/p;d' file	1
sed -r 's/^(>.{10}).*/\1/' file	1
gawk '/^>/{print gensub(/(.{11}).*/,"\\1","G",$1);next }1' inputFile	4
echo $PWD | sed -e "s|^$HOME/|~|" -e 's-.*/\([^/]*/[^/]*\)-\1/-'	1
/<(\w+).*?>.*?</\1>/	2
(?:\s|^)((?:£|$|\xC2|\xA3)\d+\.\d{1,2})(?=\s|$)(?!.*?\s\1(?=\s|$))	2
([1-9])(?!.{0,2}\1)([0-9])(?!.{0,1}\2)([0-9])(?!\3)([0-9])	4
([1-9])(?!.*\1)([0-9])(?!.*\2)([0-9])(?!.*\3)([0-9])(?!.*\4)	4
sed -e 's%/path/to/delete/%%;h;: redo;s%/\(.*/.*\)%-\1%g;t redo;x;G;s/\n/ /'	1
sed -r 's|/path/to/delete/(.*)|\1 \1|;:a;s|/([^ /]*/[^ /]*)$|-\1|;ta' file	2
sed -r 's./path/to/delete/..;h;s./([^/]*)$.|\1.;s./.-.g;s.\|./.;x;G;s/\n/ /' file	2
sed -e 's/\\\([^n]\)/\1/g'	1
cat testfile | sed -e "s/.*:\([^ ][^ ]*\).*/\1/"	1
(?<artist>[^\\]+)\\(?<album>[^\\]+)\\(?<track>\d+)[.]\s*\k<artist>\s*-\s*(?<title>[^\\]+)[.]mp3$	2
echo -e "This.Is.a.Test.V03.r501.dump" | sed  "s/^\(\w+(\.\w+)*\)\.V[0-9]{2}.*$/\1/g"	2
echo -e "This.Is.a.Test.V03.r501.dump" | sed -e  "s/\(.*\)\.V[0-9]*.*/\1/"	1
^(a*)b\1$	2
sed  -r 's/^(([^.]+.){3})([^.]+).*/\1\3/'	2
(['"])[^'"]*\1	1
(['"])(?:(?!\1).)*\1	1
$pattern = "/\[(\w+)\](.*?)\[\/\1\]/";	2
$pattern = '/(\[\s*([^\]]++)\s*\])(?=(.*?)(\[\s*\/\s*\2\s*\]))/';	2
$pattern = '/(\[\s*([^\]]+?)\s*\])(.+?)(\[\s*\/\s*\2\s*\])/';	2
inputString.replaceAll("(.)\\1+", "$1")	1
^(.*)(\\1+)$	2
(.*)(\\1+)	2
(.*)(\\1+)\b	2
sed -r 's/(.{10}).{25}/\1/' file	1
tr '\n' ' ' | sed 's/\(.*\)a/\1c/' | tr ' ' '\n'	1
sed -r -e 's#(.*)#FILE:\t/tmp/imagetest/\1#;s/([0-9]*)(i[^i]*)$/\1\2\tENCOUNTER:\1/;1i -----TEST TAG FILE      ENCOUNTERS-----' -e '$aEND REPORT' file	2
sed -i 's@,\s\+\([a-z]\+\)\s\+=@\n\t\1 =@g' **/*.jade	1
sed 's@,\s\+\([a-z]\+\)\s\+=@\n\t\1 =@g' **/*.jade	1
sed -i'' 's@,\s\+\([a-z]\+\)\s\+=@\n\t\1 =@g' **/*.jade	1
<a\b(?=[^>]*\s\balias=(["'])((?:(?!\1)|.)*)\1)[^>]*>(.*?)<\/a>	4
<a\b(?=\s)(?=[^>]*\s\btitle=(["'])alwaysTheSameTitle\1)(?=[^>]*\s\bhref=(["'])((?:(?!\2)|.)*)\2)[^>]*>(.*?)<\/a>	4
sed -r ':a;$!{N;ba};s/^(.*\n?)PATTERN/\1REPLACEMENT/' file	2
sed -r '/^PATTERN/!b;:a;$!{N;/^(.*)\n(PATTERN.*)/{h;s//\1/p;g;s//\2/};ba};s/^PATTERN/REPLACEMENT/' file	2
sed -r '$!N;/(\w+)\W*\n\1\W*/!{s/(\w+).*/\1/;P};D' file	2
sed -r 's#^(\S+)\s+#${x;s/^\\s\\\|>//g;p};1{s/.*/\1/;h};/\n#;h;s/\n.*//;x;s/.*\n//;:ka;s#(\S+)\s*#\\b\1\\b\\| #;H;g;s/\n(\S+).*/\1/;x;s/.*\n\S+\s*//;tka;s/\\\|\n/\/!d;$!N;H;x;s\/\\n\/ \/g;x/' file1 > file.sed	2
const std::regex regexTest( "=== ([^=]+) ===\\n([.\\n]*)\\n=== END \\1 ===" );	2
=== (.+?) ===\\n([\\s\\S]*?)\\n=== END \\1 ===	2
=== ((?:[^ ]+| (?!===))+) ===\\n((?:[^\\n]+|\\n(?!=== END \\1 ===))*)	3
string regExp ="^(?!(\d)\1+$)(?!(012345678901|123456789012|234567890123|345678901234|456789012345|567890123456|678901234567|789012345678|890123456789|901234567890)$)(?!\d{9}000$)\d{12}$"	4
^(?!(\d)\1+$)(?!(012345678901|123456789012|234567890123|345678901234|456789012345|567890123456|678901234567|789012345678|890123456789|901234567890)$)(?!\d{9}000$)\d{12}$	4
sed '/daemon www.*Y=/{:l s/\(Y=\(0,\)*\)[0-9]*/\10/;/Y=\(0,\)*0\([^,0-9]\|$\)/!bl}' input	1
sed '/^daemon www.*Y/{s/[0-9]\([,*]\)/0\1/g}'	1
sed -e 's/^\(daemon www X=1 .*Y=\)[0-9]\+/\10/' -e 's/,[0-9]\+/,0/g'	1
"(foo|bar|baz).*\s+\1(\s+|$)"	2
echo "created: 02/05/2013 16:14:49" |  sed -e 's/^\([[:alpha:]]*: \)//' -e 's/\([0-9]\{2\}\)\(\/\)\([0-9]\{2\}\)\(\/\)\([0-9]\{4\}\)\( \)/\5\1\3/' -e 's/\([0-9]\{2\}\)\(\:\)\([0-9]\{2\}\)\(\:\)\([0-9]\{2\}\)/\1\3\5/'	1
echo "created: 02/05/2013 16:14:49" |  sed -e 's/^\([[:alpha:]]*: \)//' -e 's/\([0-9]\{2\}\)\(\/\)\([0-9]\{2\}\)\(\/\)\([0-9]\{4\}\)\( \)/\5\1\3/' -e 's/\([0-9]\{2\}\)\(\:\)\([0-9]\{2\}\)\(\:\)\([0-9]\{2\}\)/\1\3\5/'	1
(?(1) \1 )	4
const std::regex regexTest( "=== ([^=]+) ===\\n((?:.|\\n)*)\\n=== END \\1 ===" );	2
(?=(?:(?!\>).)*\s\bdetail=(["'])((?:(?!\3).)*)\3)	2
<xt:tag_name\b(?=\s)(?=(?:(?!\>).)*\s\btype=(["'])((?:(?!\1).)*)\1)(?=(?:(?!\>).)*\s\bdetail=(["'])((?:(?!\3).)*)\3)(?:(?!\>).)*\>	2
(\d)|\1\3	1
^1?$|^(11+?)\1+$	2
(<[^>]*)style\s*=\s*('|")[^\2]*?\2([^>]*>)	2
(\d)\1{7,}	1
(\d)\1{9}	1
sed -nr 'H;/PATTERN/,/\}/{s/(\})/\1/;T;x;p};/\{/{x;s/.*\n.*//;x;H}' file	1
sed 's/^\(Password: \).*/\1*/g' your_file	1
sed 's/\(.*status":.*\)\(\.[0-9]\+\)/\10\2/' file.txt	1
sed -i.bak 's/\(.*status":.*\)\(\.[0-9]\+\)/\10\2/' file.txt	1
sed -r 's/("status":)(\.[0-9]+)/\10\2/' file	2
^(?:(?!(?:abcd|bcde|cdef|defg|efgh|fghi|ghij|hijk|ijkl|jklm|klmn|lmno|mnop|nopq|opqr|pqrs|qrst|rstu|stuv|tuvw|uvwx|vwxy|wxyz|(a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z)\1{3})).)*	4
sed -nr 'H; \#</layoutItems>#{x;s/(lastViewedAccount)/\1/;Tk;p;:k;x;s/.*//;x;s///;x;d}' file	1
<node(\d+)>(.*?)<\/node\1>	2
<node(\d)>(.*?)<\/node\1>	2
sed -r '/<layoutItems>/{:ka;N;s#(</layoutItems>)#\1#;Tka;s/lastViewedAccount//;T;d}' file	1
(["'])((\\{2})*|(.*?[^\\](\\{2})*))\1	2
\d{1,4}([^a-z0-9])\d{1,4}\1\d{1,4}|\d(st|nd|rd|th)?\s?(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[a-z]*\b\s?\d{4}	1
sed -nr '2,$ {s/\S+\s+(\S+)\s+(\S+)\s+\S+\s+(.*)/\1 \2\t\3/;p}' file	2
sed -r 's#(.*)#s/(.*)/\\1 \1/;$!n#' file2|sed -rf - file1	2
sed -r 's#(.*)#s/(.*)/\1 \\1/;$!n#' file1|sed -rf - file2	2
sed -r 's/((\w+\|){9})(\w+\|)\w+\|(\w+\|)\w+\|(\w+\|)\w+(\|\w+\|)(\w+)\|(\w+\|\w+)/\1\8|\3\4\5NULL|NULL|NULL\6\7/' file	2
$ echo "/cms/events/view/13-03-20/some-post_title.aspx" | sed -e 's![^/]*/[^/]\+\(/[^/]\+/\).\+/\(.\+\)\.[^\.]\+!\1\2!'	1
sed -ri 's/\>[\w\|]+\|ref\|(\w+)\.\d+\|.*/\>\1/g' rna_copy.fa	2
sed -r 's/>[[:alnum:]\|]+\|ref\|([a-zA-Z0-9_]+\.[[:digit:]]).*/> \1/g'	2
sed  -r 's/.*\|(\w+)\.[0-9]+\|.*/>\1/' file	2
(\*\*\*)([^*]+)\1	2
sed -n 's/^\({{}}\)/\1/p;tk;H;:k;${x;s/\n//;p};d' file	1
(\w+)[:=]("?)([\w.]+)\2	2
sed 's|\(http:\/\/www\.[a-z.0-9]*\/\).*|\1|	1
sed -r 'sµ(.*):.*$µ\\§\1§dµ' file2 |sed -f - file1	2
sed -nr '/0\s/{H;${x;s/\`\n(.*)/\1/mp};d};/16\s/s/16\s(.*)/\1/;H;g;s/\`\n(.*)\n.*\n(.*)\'/\1 \2/p;g;s/\`\n(.*)(\n.*)\n(.*)\'/\2/;h;${s/\`\n(.*)/\1/mp};d' file	2
sed "s/.*my_function\('(.*)'\).*/\1/" all_the_strings.txt > my_out_file.txt	2
sed 's/.*my_function(.\(.*\).).*/\1/;'	2
sed "s/.*my_function('\(.*\)').*/\1/" all_the_strings.txt > my_out_file.txt	2
sed -nr "s/.*my_function\('([^']*)'\).*/\1/p" all_the_strings.txt > my_out_file.txt	2
^((\d{3}-|\(\d{3}\)\s?)?\d{3}-|^\d{3}(\.)?\d{3}\3)\d{4}$	1
s/s([0-9])/s${prevjob[\1]}/	1
^\d{10}|^(\(\d{3}\)\s?)?\d{3}-\d{4}$|^\d{3}([.-])\d{3}\2\d{4}$	1
perl -pe 's/(^[^\r\n]*)\n/\1/' input > output	2
cat input | tr '\n' ' ' | tr '\r' '\n' | sed 's/^ \(.*\)/\1\r/g'	1
s/([A-Z])/_\l\1/g;	1
s/(_|\b)([a-z])/\u\2/g;	1
s/([A-Z][a-z]+|[a-z]+)([A-Z])/\l\1_\l\2/g;	2
^(?!.*,$|.*\d{2,})(?:([\d*#]),?(?!.*\1))+$	3
(?:([\d*#]),?(?!.*\1))+	3
^(?:([0-9#*])(?!(?:,.)*,\1)(?:,|$))+$	2
/<tag_([A-Z0-9]*)\b[^>]*>.*?<tag.*?<\/tag_\1>/gi;	2
/<tag_([A-Z0-9]*)\b[^>]*>.*?<tag_([A-Z0-9]*)\b[^>]*>[^\/]*?(?!(\/tag_\2))\/tag_\1>/gi	2
%s/^\(.* \)[^ ]\+$/\1/g	1
$_ =~ s/^(\s*)abc/\1def/g	2
sed -n 's/.*\*\*\(.*\)\*\*.*/\1/p'	1
(?i)(?<=<a\b[^>]*?href=(['"]?))[^'"]*?_ftn\d+[^'"]+(?=\1)	2
sed -r 's/url ([^"][^%]+) %/url "\1" %/g'	2
sed -r 's/url ([^%]+) %/url "\1" %/g'	2
(?<!_)src=([\'"])?(.*?)\\1	2
(.+-\2)|(\1-.+)	4
(start{(.*?)}((?:(start{(.*?)}.*?end{(.*?)})|.)*?)end{(\2)})	2
^(\w+\b)(.*\b\1$|$)	2
^(?=([A-Za-z]+)).*(\1)$	2
$text =~ s/(.*)\s*-\s*\1$/$1/;	2
$text =~ s/(.*)\s*-\s*\2/$1/;	2
$text =~ s/(.*?)(.*)(\s*-\s*\2)/$1$2/;	2
sed -r 's/(\w,)\w,(\w,)\w,(\w,)\w/\1\3\2/' file	1
sed -r ':a;$!N;s/^(([^ ]+ ).*)\n\2/\1,/;ta;P;D' file	2
sed -r ':a;$!N;s/^((\S+\s).*)\n\2/\1,/;ta;P;D' file	2
sed -n '/LIMIT/,/=/{/^\s*\(\S*\s*\)\{10\}[0-9.-]*\*/H;x;s/^.*\n\(.*\n.*\)$/\1/;x;/=/{x;P;q}}' file	1
((?:\~())?)(((?!((?!\2)/|\~/)).)+)\1/	3
sed -rn '/LIMIT/,/total/{//!H};/total/{x;s/^.*\n(.*\n)((\s+\S+){10}\s+[0-9.]+\*(\s+\S+){3}\n(\s+\S+){14}).*/\1\2/;p;q}' file	2
(?=(([ABC])\2))	4
IF OBJECT_ID(N'SQL_DB..\1', N'U') IS NOT NULL\nDROP TABLE \1;\nGO\nCREATE TABLE \1	4
IF OBJECT_ID\(N'SQL_DB..\1', N'U'\) IS NOT NULL\nDROP TABLE \1;\nGO\nCREATE TABLE \1\(	1
sed -e 's/\\find{\([0-9]*\)\.*\([0-9]*\)}/\\replace{\1}\\and{\2}/g' $1.tex>$1d.tex	1
((<font color=\"#777777\">\.{3}) .+?(<\/font>(?=\s*\2)|$))	2
<a (?:[^h>]+|h(?!ref))*\bhref\s*=\s*(?:(["'])(?:\\\1|[^"']+|(?!\1)["'])*\1|[^\s>]*)[^>]*>	1
s/\(.*space\).*$/\1/	1
$ sed -nr 's#(\w+)#s/\1/\1/;T\1;x;s/\1/\1/;x;t\1;x;s/.*/\& \1/;x;s/\1/\\\\macro\{\1\}/;:\1;$!N#p' list.txt|sed -rf - text.txt	2
sed -n  's/\([0-9][0-9]*[\ \t][0-9.]*[\ \t]*$\)/\1/p'	1
static const std::regex regexObject( "=== (\\S+) ===\\n((?:[^\\n]+|\\n(?!=== END \\1 ===))*)\\n=== END \\1 ===", std::regex_constants::ECMAScript | std::regex_constants::optimize );	3
^===\s+(.*?)\s+===[\r\n]+^(.*?)[\r\n]+^===\s+END\s+\1\s+===	2
([\s~+"-])\1+	2
echo "$string" | sed -E 's/blah(.*)blah/\1/g'	2
sed 's/blah\(.*\)blah/\1/g'	1
echo "$string" | sed -e 's/blah\(.*\)blah/\1/g'	1
String pattern = @"<(?<field>[^0-9/>]+)(?<number>[^/>]*)>(?<data>.*)</\k<field>\k<number>>";	2
/^<(\w+)\s*\/?>(?:<\/\1>|)$/	2
/^<(\w(\w|-\w)*\s*\/?)>(?:<\/\1>|)$/	2
:'<,'>s/\(.*\(AB\d\+\)_.*\)/\1\2/	1
[a-z]*([a-z])\1([a-z])\2[a-z]*	1
(<!.*?!>).*?\1	2
^(\d)\1+$	1
`\(\<\w\+\>\)\_s\+\(\1\_s*\)\+`	1
(\w+)\s+(\1\s*)+	3
'(\w+)\s+(\1\s*)+'	3
sed '/<input /s#\([^/]\)>#\1/>#' file	1
<snip> PASSWORD_PATTERN_LOWER_8 = "(?i)^(?!.*(.).*\\1)";	2
<snip> PASSWORD_PATTERN_LOWER_8 = "(?i)^(?!.*(.)\\1)";	2
private static final String PASSWORD_PATTERN_LOWER_8 = "^(?:([a-zA-Z])(?!.*\\1))$";	2
^((.)(?!.*\1))+$	4
(?:DocumentBuilderFactory|SAXParserFactory)[\s\r\n]+?(\w+)[\s\r\n]*?=[\s\r\n]*?(?:DocumentBuilderFactory|SAXParserFactory)[\.\r\n]+newInstance(?!.*\1(?=[\.\r\n]+(:?setFeature|setExpandEntity)))	2
^(?!\{([$@#]).*\1\}).*	4
^(?!\{([$@#]).*\1\}$).*	4
sed -r '/^terminating/!d;:a;$!N;/.*\n(terminating)/s//\1/;$q;ba' file	1
~<(\S+).*>.*</\1>~	2
$pattern = '~<([^>\s]++)[^>]*+>.*?</\1>~';	2
=== ([^=]+) ===\\n((?:(?!===)[^\\n]+\\n)+)=== END \\1 ===	2
(?=[0123]{3})(.)(?!\1)(.)(?!\1|\2)(.)(?!\1|\2|\3).	4
:%s/\(return\)/END;\r\1/g	1
%s/^\(\s*\)\(return\>.*\)/\1END;\r\1\2/g	1
:%s/^\(\s*\)\<return\>/\1END;\r&/	1
sed -i "s/something\([0-9]\+\)/somethingelse\1/g" c:\log.txt	1
sed -i "s/something([0-9]+)/somethingelse\1/g" c:\log.txt	2
sed -e "s|$dbo->([\w\_]*)|$dbo['\1']|g" test.php	2
cat test.php | sed -E "s/dbo->([a-z_]*.*);/dbo[\'\1\']/g"	2
sed -e "s|\$dbo->([\w_]*)|$dbo['\1']|g" test.php	2
sed -E 's/(\$dbo->)([[:alnum:]_]+)(.*)$/\1["\2"]\3/g'	2
sed -r "\$s/(dbo->)([a-zA-Z0-9_]+)(.*)$/\1['\2']\3/g"	2
sed -r 's/(\$dbo->)([[:alnum:]_]+)(.*)$/\1["\2"]\3/g'	2
sed "s/\$dbo->\([^;]\+\)/\$dbo['\1']/" file.php	1
r'<(?P<tag>[^>]*)>([^<>]+?)</(?P=tag)>'	2
^('|").*\1	1
(<img(?!.*?alt=(['"]).*?\2)[^>]*)(>)	4
sed 's/^\(.\).*/\1/' file	1
^(?:([dogs])(?!.*\1)){4}	2
^([dogs])(?!.*\1)([dogs])(?!.*\2)([dogs])(?!.*\3)[dogs]$	4
".*([A-Za-z]{2,})\\1$"	1
%s/\v.{-}([0-9.]+).*/\1/	2
\w+:(\/)\1(\w+)\.\w+\1\w+\1	2
(["']).*?(?<!\\)\1	1
(.)\1++	1
((.)\2+)	2
([^'",]+|(["'])((?!\2).|\\\2)*\2)+	3
(["'])((?!\2).|\\\2)*\2  A string. (delimited by double or single quotes).	4
(.)\1	1
^(.)\1*$	1
'((\d)\\2*)'	2
([A-Z])\1+	1
netstat -ant | sed -e '/^tcp/ !d' -e 's/^[^ ]* *[^ ]* *[^ ]* *.*[\.:]\([0-9]*\) .*$/\1/' | sort -g | uniq	1
sed -r '/^AB1/!d;$!N;/\nAB2/!D;s/\s+$/ /;s/(.*)\n(.*)/\2\1\n\1/;P;D' file	2
^(?=[abcd]*e)(?:([abcde])(?![abcde]*?\1)){2,5}$	2
@"<img.*src *=*([\x22\x27])(?<path>.+)(\1).*/>"	2
s/^([0-9]+) 9/\1 /	2
cut -d: -f 3-7,9,10  | tr ":" ";" | sed -r 's/([A-Z]);([A-Z])/\1 \2/g'	1
\$_REQUEST\[(['"])(.*?)\1\]	2
sed 's/^\(.*\).txt$/perl mycode.pl \/home\/neversaint\/\1\.txt > \/home\/neversaint\/\1.output/' submit.sh	1
sed 's/\([^.]*\)\.txt/perl mycode.pl \/home\/neversaint\/\1.txt > \/home\/neversaint\/\1.output/' submit.txt > output.txt	1
(?i)([b-z&&[^eiou]])\1\1+	1
perl -pe "s@(.*?)(\.txt)@perl mycode.pl /home/neversaint/\\1\\2 > /home/neversaint/\\1.output@g" submit.txt	2
perl -pe "s@(.*?)(.txt)@perl mycode.pl /home/neversaint/\1\2 > /home/neversaint/\1.output@g" -i submit.txt	2
perl -pe "s@(,?[^:,]+:)@\n\1\n@g" a.txt	2
([a-zA-Z0-9])\1{2,}	1
(?!.*([A-Za-z0-9])\1{2})	4
^(?!.*([A-Za-z0-9])\1{2})(?=.*[a-z])(?=.*\d)[A-Za-z0-9]+$	4
([a-z0-9])\1{2,}	1
(\b(?:([A-Za-z0-9])(?!\2{2}))+\b)	3
env: ?(['"])([^\1]*)\1	2
env *('|").*?\1	1
\benv:\s*(["'])((?:[^"'\\]+|(?!\1)["']|\\[\s\S])*)\1	2
\benv: (["'])([^"']*)\1	2
\benv: (["'])((?:[^"']+|(?!\1)["'])*)\1	2
\benv: (["'])((?:[^"'\\]+|(?!\1)["']|\\[\s\S])*)\1	2
\benv: (["'])((?:[^"'\\]+|(?!\1)["'])*)\1	2
(.)\1{2,}	1
(.)\1+	1
echo "$str"|sed 's/abcd\(\.ext\)/customer\1/'	1
^ *(`{3,}|~{3,}) *(\S+)? *\n([\s\S]+?)\s*\1 *(?:\n+|$)	2
^(?:[a-zA-Z0-9]|([._])(?!\1)){5,20}$	1
(I)(((?!\1).)*?) disagree	3
(.)\1{2,}	1
FUNCTION\s+([a-z0-9_]+)\s+IS\s+(.+?)\s+BEGIN\s+(.+)\s+END\s+\1\s*;	2
FUNCTION\s+([a-z0-9_]+)\s+IS\s+(.+)\s+END\s+\1\s*;	2
([a-zA-Z0-9])\1{3}	1
(0?[1-9]|[12][0-9]|3[01])([- /.])(0?[1-9]|1[012])\\2(19|20)\\d\\d	1
(?:0?[1-9]|[12][0-9]|3[01])([- /.])(?:0?[1-9]|1[012])\\1(?:19|20)?\\d\\d	1
(0?[1-9]|[12][0-9]|3[01])([- /.])(0?[1-9]|1[012])\\2(19|20)\\d\\d	1
(.)\1 11	1
who | sed -e '/orschiro/! d; /pts/! d; s/^.*\(:[0-9.]\+\).*$/\1/p;d' | head -n1	1
s#(something)#\1#g	1
sed 's#\(/[^:]*\).*#\1#g'	1
(\w+)\1{2}	2
(\w+)\1{n-1}	2
/(ART\. \d+\.*)/<b>\1<\/b>/	2
sed -i -r 's#.*(([0-9]{3}/){2}[0-9]{3}\.jpg)#\1#i' file	1
sed "s/^.*number='\([0-9]*\)'.*type='\(.*\)'.*$/\1 \2/" <filename>	1
sed -r "s/<field [^>]*?number='([0-9]+)'[^>]*?type='([^']+)'[^>]*>/\1 \2/"	2
([*][*])(.*?)\1	2
echo "ABC XYZ 12/123/52/ ABBDBDAD 562.4224.32 02381831522" | sed -n 's/^\([a-zA-Z][a-zA-Z ]\+[a-zA-Z]\).*/\1/gp'	1
echo "ABC XYZ 12/123/52/ ABBDBDAD 562.4224.32 02381831522" | sed -n 's/^\([a-zA-Z ]\+\).*/\1/gp' > raw.tmp	1
echo "ABC XYZ 12/123/52/ ABBDBDAD 562.4224.32 02381831522" | sed 's/\([a-zA-Z ][a-zA-Z ]*\).*/\1/g'	1
echo "ABC XYZ 12/123/52/ ABBDBDAD 562.4224.32 02381831522" | sed 's/.*\(ABC XYZ\).*/\1/g'	1
"(?=(\\[(#[0-9a-fA-F]{6})\\].*?\\[/\\2\\]))"	4
(?=([`*])((?:[^`*\W]+|(?!\1)[`*])+)\1)	4
(?=([`*])((?>[^`*\W]++|(?!\1)[`*])+)\1)	4
^\(.*\)\n\1$	1
"([""'])(?:(?=(\\?))\2.)*?\1"	1
(\*{1,2}).+?\1	1
(.)\1\1	1
new Regex(@"^(?!.*(.)\1\1)(?=.*\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,20}$")	4
(?!.*(.)\1\1)	4
(.)\1\1	1
'(\w)\1'	1
sed -r 's/(\S)\s+([<>])/\1\2/g' file	1
sed -e 's/^\(\(\\\\\)*\)\\0\(\(\\\\\)*\\0\)*/\1 /' -e 's/\([^\]\(\\\\\)*\)\\0\(\(\\\\\)*\\0\)*/\1 /g'	1
(?<=DATE OF SURGERY: *)\d{1,2}([/-])\d{1,2}\1\d{1,4}	2
echo "$pattern" | sed -r 's/(<p).*(>)/\1\2/'	1
sed 's/@\(Model\.[^ ]\+\)/$\1$/g'	1
\v(-?\d+(\.\d+)?),\s\1,	2
\(-\?\d\+\(\.\d\+\)\?\),\s\1,	1
echo jones:Adrian W. Jones/OSD211/555-0123 | sed -e 's=^\([^:]*\):[^/]*/\([^/]*\)/.*$=\1:\2='	1
echo jones:Adrian W. Jones/OSD211/555-0123 | sed -e 's=^([^:]*):[^/]*/([^/]*)/.*$=\1:\2='	2
sed 's/\(^EMS_[SIJ].*\=\)\(\/.*[a-z]$\)/\1\/test/path/' test	1
sed 's@\(^EMS_[SIJ].*=/\).*@\1test/path/@' file	1
"(.*?)\(.*?\)\1"	2
sed 's/^.*\(http.*gz\).*$/\1/' file	1
sed 's/^[^|]*|\([^|]*\)|.*/\1/'	1
while (link.matches("(.+)=@\\1@")){}	2
(.).*\1	1
(["'])foo\1	1
r".*([a-z])\1.*([a-z])\2.*([a-z])\3.*"	1
r".*([a-z])\1.*((?=(?!\1))[a-z])\2.*((?=(?!\1))(?=(?!\2))[a-z])\3.*"	4
Regex.Replace(input, @"(<(?:Important text|Other text) />)\1+", "$1");	1
(<.+?\/>)(?=\1)	2
/(?:<(tag)>)((?:.(?!<\/\1>))+.)(?:<\/\1>)/g	3
(<.+?\/>)(?=\1)	2
(<[^>]+>)(?<=\1.*\1)	2
/<a\s[^>]*href=(\"??)([^\" >]*?)\\1[^>]*>(.*)<\/a>/siU	2
(?<=(\w))\1	1
^...(.).\1.$	1
sed -i.bak 's/^\(document=\)[^,]*/\1replacetext/' file	1
sed  's/\(ducument=\)\([^,]\+\)/\1replacetext/g'  file	1
'\[([biu]|img|url)[^\]]*\]\[/\1\]'	1
echo aaaabbbbaaaacccc | sed ':l s/^\(x*\)a/\1x/;tl'	1
sed ':b; s/^\(x*\)a/\1x/; t b'	1
sed -e ':b' -e 's/^\(x*\)a/\1x/' -e 't b' <<< aaaaaxaaab	1
cat file | perl -pe 's/.*description="(.*)?"/\1/'	2
regexp_replace(site_data,'(-([^-]*)-)|(.)','\2')	2
sed -e 's%\(logging\.config\.file=\)[^[:space:]]\+%\1/new%g'	1
sed -r '/^\*/!b;x;:a;s/9(_*)$/_\1/;ta;s/^(_*)$/0\1/;s/$/:9876543210/;s/(.)(_*):.*(.)\1.*/\3\2/;s/_/0/g;x;G;s/(.*)\n(.*)/\2\1/' file	2
(aa)+\1	1
(aa)+\1	1
(aa)++\1            # will never match	1
sed -i.bak -r 's/href="([^"]+)\.php"/href="\1"/g' *.php *.xml	2
sed -i.bak 's/href="\([^"]*\)\.php"/href="\1"/g' *.php *.xml	1
sed -i.bak -re 's|href="([^"]*)\.php"|href="\1"|g' *.php *.xml	2
"<([^>]+)>.*?</\\1>	2
(?:(\d{5}),?)(?!.*\1)	2
(?:(\d{5}(?:-\d{4})?),?)(?!.*\1(?!-))	2
background: url\s*\(\s*(["'])?\K\w+(?(1)(?=\1)|(?=\s*\)))(?!.*\*/)	2
cat results.txt | head -n 1| sed -e 's/[xx_]//g' | sed  's/\(3:.*\):/_\1_/g' | cut -d"_" -f2  | awk '{print $2}'	1
s/\(2: [0-9]\+\)/_\1_/g	1
s/\(2: [^:]\+\)/_\1_/g	1
sed 's/.*\(xx_3:.\)\([0-9]*\).*/\2/g' results.txt	1
<(?<TAG>\w*)\b.*?>.*?(</\k<TAG>>)	2
sed 's/[0-9 ]* \(.*\)\[.*/\1/;/^$/d' your.file	1
while ($form_lemma_suffs =~ s/^(.)(.+)###\1(.+)/\2###\3/)	4
while ($form_lemma_suffs =~ s/^(.)([^#]++)###\1(.++)/\2###\3/)	4
regexp_replace('static-text-here/1abcdefg1abcdefgpxq', '/(.*)\1', '/\1')	2
sed -i.bak -r 's/(.\?)aaa/\1bbb/g' filename.ext	1
sed -i.bak -r 's/(.?)aaa/\1bbb/g' filename.ext	1
sed -i.bak 's/\(.\?\)aaa/\1bbb/g' filename.ext	1
:url\((?<char>['""])?(?<:url>.*?)\k<char>?\)	2
:url\((?<char>['""])?(?<url>.*?)\k<char>?\)	2
(\w)\1{2}(?!\1)\w\1{3}	1
(.)\1{2}(?!\1).\1{3}	1
b"r(['\"])(.*?)\\1[ \t]*\r?\n"	2
^(?!([0-9])\1\1-\1\1)[0-9]{3}-[0-9]{2}-[0-9]{4}$	4
sed -r ':a;$!N;s/^(([^|]*\|).*)\n\2/\1|/;ta;/^([^\n|]*\|){2,}/P;D' /file	2
([@#])[\s\S]*?\1	1
([@])\1{2,}	1
find /some/dir -maxdepth 1 -type f -name "*.xml" -exec sed -i '/Distribution_Facilities_carrying_Item/ s/<\(.*\)>/<!--\1-->/' {} \;	1
sed '/Distribution_Facilities_carrying_Item/ s/<\(.*\)>/<!--\1-->/' inputfile	1
sed -i '/Distribution_Facilities_carrying_Item/ s/<\(.*\)>/<!--\1-->/' inputfile	1
sed -i 's/\(<.*Distribution_Facilities_carrying_Item.*>\)/<!--\1-->/' filename.xml	1
sed -i 's/\(\S\+\:\)/\n\1/g' <filename>	1
:%s/\(\S\+\:\)/\r\1/g	1
sed -r 's/(.*)<my_tag>([A-Z][A-Z])<\/my_tag>(.*)/hello\2/g' myfile.out	2
perl -lpe "s/^([^.]*)(...)\.(\d+)(\.\2)\.pgp/\1\3\4/i; $_=uc"	4
((`)[\s\S]*?)?\*\*([\s\S]+?)\*\*([\s\S]*?\2)	2
<(\w+?)>[\w\W]+?//([\w\.]+?)/[\w\W]+?</\1>	2
((([^=]+)=((?:"|'))([^"']+)\4) ?)+	3
<([^ ]+) ?([^>]*)>([^<]*)< ?/ ?\1>	2
sed 's/.*[[:space:]]\([^[:space:]]\+\)$/& "\1"/' file	1
(\*\*\*|\*\*|\*)(.*?)\1	2
(\*+)(.*?)\1	2
(\*{1,5})(.*?)\1	2
sed 's/\t\([^\t]*\)$/& "\1"/' file	1
'(?<first_group>(?<first_char>.)\k<first_char>+)(?<word>\w+)\k<first_group>+'	4
grep -E ,'([[:digit:]])\1{3},[[:alpha:]]' file	1
grep -E ,'([1-9])\1{3},[[:alpha:]]' file	1
(\$\$)(?<group1>.+?)\1|\[(#)(?<group2>.+?)\3\]	2
([^-]*)-\1	2
(?x) .? | ( \\2?+ (\\1|^.) )* ..	4
(?x) .? | ( \\2?+ (\\1|^.) )* ..	4
echo '"Key" = "Value";' | sed -e 's#^"\([^"]*\)" = "\([^"]*\)";$#key is \1 and value is \2#'	1
sed 's/\^\s*[#](.*)$/\1/'	2
[A-Z]{3} ?(\d{0,3}(?:([,. ])\d{3}(?:\2\d{3})*)?)(?!\2)[,.](\d\d)\b	2
(A|B).*\1	1
(A|B).*[^\1]	1
(A|B).*(?!\1)(A|B)	1
(.)(.)b\2\1	1
(.?)(.)(.)\3?\2\1	1
(.)b\1	1
(.)(.)b\1\2	1
(\w)\1*	1
(?<=\s|^)(\w)\1*(?=\s|$)	1
\b(\w)\1+\b	1
(\w)\1	1
"(\\w)\\1"	1
(\w)\1	1
(\w+).*\1 # returns monkeys	2
(\w+)(?=.*\1)	2
sed 's/.*\[\(.*\)\].*/\1/' log.file	1
sed -r 's/(?s).*?(<div class="mb_t_p_t_post_div">.*);/\1;/g' 1.htm	2
cat ./file.tex | sed -e 's@(\\label\{fig\:[a-zA-z0-9 -]{1,}\})\}$@\}\1@g' > test_output.txt	1
"((['\"]){2})*\\2"	1
echo "aabbcc" | sed -n 's/\(^.*bb\).*/\1/p'	1
sed -n 's/\(^.*bb\).*/\1/p'	1
echo "aabbcc" | sed -r 's/aa(.*)cc/\1/'	2
s/^\s*(?:(\r?\n)(?:[\s^\r\n]+)(.+?))$/\1\2/gm	2
<(.*?)>( \S+ )+</\1>	2
echo -e 'a b b\nb b c' | sed 's%\(.\)b%\1x%g'	1
sed -r ':a;s/^(..*)b/\1x/;ta' file	2
perl -pe 's|ccpAdd\((.*?),(.*?)\)|\1 + \2|g'	2
sed 's/ccpAdd(\(.*\),\(.*\))/\1+\2/g'	2
Not working: <(.*?)>\s*(?:(\d+)\s*)*</\1>	2
Intermediate step: <(.*?)>\s*(\d+\s*)*</\1>	2
sed 's#\(\w\+\) #\1 /#'	1
sed -r 's#(\w+) #\1 /#'	2
egrep -i "((\w)\2){4,}" /usr/share/dict/words	1
perl -lne "print if /((\w)\2){3}/" /usr/share/dict/words	1
egrep -i "(\w)\1(\w)\2(\w)\3(\w)\4" /usr/share/dict/words	1
curl -s "$site" --list-only | sed -n 's%.*href="\([^.]*\.rdf\.gz\)".*%\n\1%; ta; b; :a; s%.*\n%%; p'	1
^(foo|bar)(?:,(?!\1)(?:foo|bar))?$	1
echo "XML-Xerces-2.7.0-0.tar.gz" | sed -e 's/^\(\([^-]\|-[^0-9]\)*\).*/\1/g'	1
(?s)<([a-z\-_0-9]+?) .*? model=BMW .*?>.*?</\1>	2
echo this is digit 7 in a number | sed 's/digit \([0-9]\)/\1/'	1
ls currentfile_* | sed 's/currentfile_\([..]\)_belongsToprojectForDep/\1/g'	1
ls currentfile_* | sed 's/currentfile_\(..\)_belongsToprojectForDep/\1/g'	1
'~(\d{4})-(.*)-\1~'	2
"'(\d{4})-(.*)-\1'i"	2
(\d{4})-(.*)-\1	2
(\p{P})\1	1
(?<![.])(?![.]{3})(\p{P})\1	1
(?<!\.)(?!\.{3}(?!\.))(\p{P})\1+	1
((\w{2}).*(\r\n))(.*\r\n)+\1	2
((\w{2}).*(\r\n)(\2))+	3
([a-z]\d)\1{2}	1
(\w{2}),[^\1]*(\1),	1
's/\(.*\)AA*$/\1/p'	1
's/\(.*[^A]\)AA*$/\1/p'	1
sed -i".bak" 's/(ereg("\([a-z]*\)","\$keyw"))/\(preg_match\("@\1@","$keyw"\)\)/' filename	2
^(Mon|Tues|Wed|Thurs|Fri|Sat|Sun)(?:,(?!\1|\2)(Mon|Tues|Wed|Thurs|Fri|Sat|Sun)){0,6}$	4
(User logged in)\n.*\1	1
sed 's/\(\/var .*\)\(,nodev\)/\1/g' /etc/fstab	1
sed 'h; s/.*>\(.*\)<.*/\1/; s/-/ /g; G; s/\(.*\)\n\(.*>\)\(.*\)\(<.*\)/\2\1\4/'	1
sed -r ':a;s/(>[^<]*)-([^<]*<)/\1 \2/;ta' file	2
:%s/^\(\d\d\):\(\d\d\) \(.*\)/(=\1*60 + \2) \3/g	4
"(=+)[^=]+\\1"	2
(?>(\p{P})\1+)(?<!([^.]|^)\.{3})	4
echo employee_id=1234 | sed 's/employee_id=\([0-9]+\)/\1/g'	1
sed -E 's@(mail[.][^.]+[.])(host|passwd)="[^"]*"@\1\2="***"@g' file	2
str.matches("(?!.*([._-])\\1)[A-Za-z][a-zA-Z._-]{4,8}[a-zA-Z]");	4
\b[a-zA-Z]([a-zA-Z])\1+[a-zA-Z]\b	1
\b(?![a-zA-Z]([a-zA-Z])\1+[a-zA-Z]\b)[a-zA-Z]{4,}\b	4
^(?!.*\b[a-zA-Z]([a-zA-Z])\1+[a-zA-Z]\b).*[a-zA-Z]{4,}.*$	4
string.match(/[a-zA-Z]{4,}/) && !string.match(/\b[a-zA-Z]([a-zA-Z])\1+[a-zA-Z]\b/)	2
\b(?![a-z]([a-z])\1+[a-z]\b)[a-z]{4,}\b	4
#<(text).*?>(.*)</\1>#is	2
sed -r "s/(^|[^:])$oldIP([^0-9]|$)/\1$newIP\2/g" input	1
sed -E "s/(^|[^:])$oldIP([^0-9]|$)/\1$newIP\2/g" input	1
sed -En 's/\d{4}-\d{2}-\d{2}-([\w\\-]+)\.ext/\1/p'	2
echo '0000-00-00-title.ext' | sed -En 's/[0-9]{4}-[0-9]{2}-[0-9]{2}-(.+)\.ext/\1/p'	2
$(PATH,S/.+\\\(.*\)/\1/)	4
sed '1! s/\(pattern\)/lineToInsert\n\1/' infile	1
perl -pe 's|<img(.*?)title=".*?"(.*?)>|<img\1\2>|g'	2
sed 's/\(A\) B \(C\)/\1 \2/g'	1
sed -r 's/(.)(test1@)/\1\n\2/g' file	1
r"(a+)b\1"	2
(.)\1{3}	1
^(?!(.)\1{3}|1234|abcd).{4}$	4
%s/\$_a\t=\t*/(!\$arg1)\t\?\t\2\t\:\t1/g	1
egrep "Profile: (\w*)" test.text -o | sed 's/Profile: \(\w*\)/\1/g' | sort | uniq | wc -l	1
egrep "Profile: (\w*)" test.text -o | sed 's/Profile: \(\w*\)/\1/g' | sort | uniq	1
sed -r 's/((^)\s*(\S))|((\S)\s*($))|(\s)\s*/\2\3\5\6\7/g' file	2
sed -r 's/(^\s*(\S))|((\S)\s*$)|(\s)\s*/\2\4\5/g file	2
\b((Example|bla)\s\$(\d{2})\.\3)\b	1
sed -r '/<firstTag>.*<\/firstTag>/{N;s#(<firstTag>)(.*)((</firstTag>\n)<secondTag/>)#\1\4<secondTag>\2</secondTag>#g}' file.txt	2
sed -r '$!N;s|^(<firstTag>)Y(</firstTag>\n<(secondTag))/>$|\1\2>Y</\3>|;P;D' file	1
^(\s*<(?!/))([^<]+)>(?=[^<]+\n)((?:(?!</\2>)[\s\S])*?)(?=\n *<)(?![^>]*</\2>)	2
:%s/foo(\(.\),\(.\),\(.\))/foo(\1x,\2x,\3x)/g	4
perl -pe 's/(.*?)([\!\?\,;\.]|--)(.*?)([\!\?\,;\.]|--)/\1\2________________\4/g' file	2
sed 's/(.*;.*)([0-9]{4};.*)([0-9]{4})/\1\.\2\.\3/g'	2
sed -r ':L;s=\b([0-9]+)([0-9]{4})\b=\1.\2=g;t L'	2
echo "CITY;+41119;754831" | sed -r ':L;s=\b([0-9]+)([0-9]{4})\b=\1.\2=g;t L'	2
echo "lol foo lol bar foo bar" | sed -r -e 's/(\b[a-zA-Z]+\b)([^*]+)(\1)/\1\2*\3*/'	4
sed -r ':a;s/\b(([[:alpha:]]+)\s.*\s)\2\b/\1*\2*/;ta' file	2
sed -r -e ':a ; s/\b([a-zA-Z]+)\b(.*) (\1)( |$)/\1\2 *\3* / ; ta'	4
sed '/\(pattern\).*/{s//\1/; q;}'	1
sed 's/\(4\)/\n\1/;Tq;h;s/^[^\n]*\n//;x;s/\n.*//;s/./ /g;G;s/\n//;:q'	1
^\(((?!.*word1)(\S)*)|(\3)\)	2
\.js\((['"])(.*?)\1\)	2
(?<length>\d{2})(?<name>.{\k<length>})	1
sed -r 's/([^0-9]+)-.*/\1/'	2
:%s/\v(.*)\s*\1/\1/	2
%s/\([A-Z_]*\):/"\1":/	1
%s/"\?\([A-Z_]*\)"\?:/"\1":/	1
sed -n "s/\(test(.*\)\s+\w+/\1) = newstuff/g" file.txt	4
sed -i.bak 's/^\([^=]* *= *\).*$/\1newvar/' file	1
sed -i.bak "s/^\( *test *[^=]* *= *\).*$/\1$NEWVAR/" file	1
extend *: *('|")(?<inside>[a-zA-Z.]*)\1	2
extend\s*:\s?("|')(.*)\1	2
(<span[^>]+class\s*=\s*("|')ptc-highlightedSearchResult\2[^>]*>)[^<]*(</span>)	2
^(.*)(\r?\n\1)+$	3
^(.*)(\r?\n\1)+$	3
s|\(AllowOverride\) None|\1 All|	1
sed '\#<Directory /var/www/>#,\#</Directory># s|\(AllowOverride\) None|\1 All|' inputfile	1
:%s/^\(curl .*\)$/\1 | jsonpp/g	1
(.)\1	1
sed 's/^\(.\{6\}\).*$/\1/' file	1
sed 's/<del>\(.*\)</del>/\1/g' yourFile.html	1
sed -re 's/([0-9]+),/"\1",/g' -e 's/,,/,"",/g' inputTestData.txt	2
^(?!^[^0-9]+$)[^0-9_].{5,17}(.)\1$	2
(?m)(?<!\S)(?![0-9_])(?=\S+[0-9])\S{6,18}(\S)\1(?!\S)	2
\S{6,18}(\S)\1	1
cat file.txt|sed -r "s/^..(.)..(.).(.).*$/\1 \2 \3/"	1
sed -r "s/^..(.)..(.).(.).*$/\1 \2 \3/"	1
cat NPs | sed 's/^\(\b\w*[#][1-9]\).*$/\1/g'	1
pasver = %x[/usr/local/rvm/bin/gem list  | grep passenger | sed -r 's/(passenger ()(.*)())/\2/]	1
sed 's/(AAA|BBB)[[:punct:]].[[:alnum:]]/\1{&}/g' dataset.txt	1
(.)\1{2,}	1
sed 's/((?:AAA|BBB)[[:punct:]])([[:alnum:]]+)/\1{\3}/g' dataset.txt	2
sed -i.bak -r 's/((AAA|BBB)[[:punct:]])([[:alnum:]]+)/\1{\3}/g'	2
sed -i.bak -E 's/((AAA|BBB)[[:punct:]])([[:alnum:]]+)/\1{\3}/g'	2
(.)\1\1	1
sed 's/\(AAA\|BBB\),\([^,]*\)/\1,{\2}/g' dataset.txt	1
sed -r "s#(.*?://).*?@(.*)#\1\2#" <<<"http://user:pass@example.com/git"	2
(?<!\w)(test)\s(?!\1\s)(?:\w|\s(?!\1\s))*?(?<!\w)follow(?!\w)	3
sed -e 's/\(foo=1&\).*\(bar=2&\)/\1\2/'	1
sed -i -e 's/\(foo=1&\).*\(bar=2&\)/\1\2/' your_html.xml	1
(?<!\w)(test)\s(?!\1\s)	1
sed 's/\([0-9]*\)m\([0-9]*[0-9]\)s/00:\1:\2/'	1
s/^(.*Banana)/INSERTED LINE\n\1/	2
^[a-z]([a-z])[a-z]+[a-z]+\1$	1
^.(.)(?:(?!\1).)*\1(?:(?!\1).)*\1$	1
^.(.).*?\1.*?\1$	1
title=('|").+?(\1)	1
^(0[1-9]|[12][0-9]|3[01])([-/.])(0[1-9]|1[0-2])\2(19|20)\d\d$	1
sed -E "s|(</?)video>|\1media>|g" vid.html	1
^.+?<A\s*?HREF\s*?=(["'])(.*?)\1>	2
sed -E "s/.*CN=(.+?),OU=.*/\\1/g"	2
sed 's/\([A-Z]\{2,\}.*\)/\n\1/; s/[^\n]*\n//' infile	1
sed -r -i.bak ':a;N;$!ba;s/(number\s+)555/\1666/2' file	2
(\d)(?!\1)(\d)\1\2	4
:%s/\v\s+(\D+)/\r\1/g	2
:%s/\s\+\(\D\)/\r\1/g	1
:%s/\(\(\<[[:digit:]]\+\>[ \t]\+\)\{4\}\)/\1\r/g	1
:%s/\(Scheme\|Video\|Social\)/\r\1/g	1
sed -r 's/(\S+\s+){2}/&\n/;s/\s+-/\n&/;h;y/ /_/;G;s/.*\n(.*)\n.*\n(.*)\n.*\n/\2\1/' file	2
sed -i 's/\(^[a-z]*\):.*?:/\1:TEST:/'	1
sed -i 's/^\([^:]*\):\([^:]*\):/\1:TEST:/'	1
sed -i.bak 's/^\([^:]*:\)[^:]*\(.*\)$/\1foo\2/' file	1
\w+([a-zA-Z])\1{2}\w*	1
*style\s*=\s*('|")[^\2]*?\2([^>]*)*	2
style\s*=\s*('|")[^\1]*\1	1
s/\([^\t]*\t{x}[^\t]*\)\n/\1#12398754987235649876234#/g	1
:%s/$latex\(\w\+\)$/$$\1$$/g	1
sed -r ':a;$!N;s/\n([^\t]+)$/\1/;ta;P;D' file	2
%s/$latex\s*\([^$]*\)\$/$$\1$$/g	1
str.matches("(.).*\\1")	1
if (str.matches("(?i)(.).*\\1"))	1
(19|20)\d\d([-/.])(0?[1-9]|1[012])\2(0?[1-9]|[12][0-9]|3[01])	1
^01.{15}([0-9]{6})\s{1,2}08 \1 [0-9]{2}	1
sed -r '/pattern/s/^(.{49})..(.*)$/\1XX\2/' file	2
sed -r 's/-.*//;G;/^([^\n]+)\n.*\<\1\>/d;h;P;d' file	2
(?i)\\b(\\w+)\\b[\\w\\W]*\\b\\1\\b	2
(?<link>{link name=(\"|&quot;)(?<name>(?:(?!\2).)*)\2 url=\2(?<url>(?:(?!\2).)*)\2})	2
(?<link>{link name=(\"|&quot;)(?<name>(?:(?!\2).)*)\2 url=(\"|&quot;)(?<url>(?:(?!\4).)*)\4})	4
\d{3}([- ]?)\d{3}\1\d{4}( x\d{4})?|x\d{4}	1
^(([0-9])\2+)+$	3
([0-9])\1+	1
(([0-9])\2+)+	3
^(?:(\d)(?:(?=\1)|(?<=\1{2})))+$	3
sed -rn 's/^\s*(\S+)\s+(\S+\s+){2}(B34)\s+(\S+)/\1, \3 \4/;T;s/B//g;p' file	2
(map report for \d+)(.*?)\1	2
(a{2})(?<!\1{2})	1
echo abcd1234 | sed 's/\(.*\)/\U\1/'	1
(.).*\1	1
string pattern=@"\b(?!\w*(\w)\w*\1\w*)\w+\b";	4
^(([A-Z0-9])(?!.*\2))+$	3
^(([A-Z])(?!.*\2)[0-9])+$	3
gsed -n 's/^.*{{\([^{}]+\)}}.*$/\1/p' file	1
ip addr show dev eth0 | sed -nr 's/.*inet ([^ ]+).*/\1/p' **| cut -f1 -d'/'**	2
sed 's/^\(.*\)\([A-Z]\{6\}[0-9]\{6\}\)\(.*\)$/\1\2\3 \2/' infile	1
echo hello world mike | sed 's/\([a-z]*\)\(.*\) \([a-z]*\).*/\3\2 \1/'	1
echo "hello cruel and unkind world" | sed 's/^\([^ ]*\) \(.*\) \([^ ]*\)$/\3 \2 \1/'	1
sed -r 's/([A-Za-z]+)(.+)\b([A-Za-z]+)/\3\2\1/'	2
sed 's/\([A-Za-z]\+\)\(.\+\)\b\([A-Za-z]\+\)/\3\2\1/'	1
PART_ONE=`echo $file | sed "s/^\.\/\([^-]*\) - .*$/\1/"`	1
PART_TWO=`echo $file | sed "s/^[^-]* - \(.*\)\.[^\.]*$/\1/"`	1
sed -r 's/"http(s?)_proxy": "(Proxy[AB])?"/"http\1_proxy": "ProxyA"/' inputfile	1
sed -r 's/([^,]+,?){3}/\/(^[^,]+,){2}\1$\/p/' file1.csv | sed -nrf - file2.csv	2
sed -r 's/(\S+\s?){3}/\/(^\\S+\\s){2}\1$\/p/' file1.csv | sed -nrf - file2.csv	2
s/\(.*return \)\(.*\)\(;.*\)/\1\2\3       \2/	1
gregexpr("(;[1-9]+;).*\1", s)	2
sed 's/^.*>\([^<]*\)<.*$/\1/'	1
:%s:<\([^>]*\)>\(.*\)</\1>:\2:	1
^(a)\1?$	1
echo "en//japan/tokyo" | sed -rn 's;^en($|/+(.*));\2;p'	2
s/(\D),/\1@/g	1
^url\((['"]?)(.*)\1\)$	2
((\d)(\d(?!\2))((?<!\3)\d(?!\3)))\1	4
((\d)(\d(?!\2))(?!\3)(\d(?!\3)))\1	4
((\d)(?!\2)(\d)(?!\2|\3)\d)\1	4
:'<,'>s/\(\%V\)/static_cast<float>(\1)/g	4
((\d)(?!.?\2)(\d)(?!\3)\d)\1	4
((\d)(?!\2)(\d)(?!\3)\d)\1	4
\b(?![a-z]*?([a-z])\1{2})[a-z]{3,}\b	4
(Figure )(\d)(\d)?(: )(?P<description>.+)(\n\n)(?P=description)	2
sed -rn '/^customer/{N;s/^((\S+)\s*){2}.*\n((\S+)\s*){6}.*/\2 \4/p}' file	2
echo 'M8684977100203MOB20/14071M116980' | sed -e 's/M[0-9]\{3\}\([^M]\+\).*/\1/g'	1
sed "s/%\([a-z_]\)%/$(\1)/gi"	4
^(\w+)\s*?[\r\n]+(?:\1.*[\r\n]+)+	2
sed -E "s/%(\w+)%/\$\1/g"	2
echo "abcdef %variable% blah" | sed -E "s/%(\w+)%/\$\1/g"	2
echo 20131018 2245 - Channel 1 - Name of the movie.ts|sed 's!\(.*\) - \(.*\) - \(.*\)!\3!'	1
echo 20131018 2245 - Channel 1 - Name of another movie - Second part.ts|sed 's!\(.*\) - \(.*\) - \(.*\)!\3!'	1
([\"'])(?:\\\1|.)*?\1	1
([\"'])(?:\\\1|\1\1|.)*?\1	1
([\"'])(?:\\\1|\1\1|(?!\1).)*\1	1
sed -i.bak 's~^\( *\)"web" *$~\1"pkg/web"~g'	1
find . -type f -print0 | xargs -0  sed -i '' 's~^\([[:space:]]*\)"web"[[:space:]]*$~\1"pkg/web"~g'	1
set Enum [regsub {^([+-]?[.0-9]+)([+-][0-9]+)$} $num {\1e\2}]	1
set Enum [regsub {^([+-]?[.0-9]+)([+-]?[0-9]+)?$} $num {\1e\2}]	1
(?=(([ACTG]{4,}).*\2))	4
(?=(([ACTG]{5}).*\2))	4
(?:([0-9])(?!.{3}\1)){3}	1
((\w)((?!\2)\w)((?!\2)(?!\3)\w)((?!\2)(?!\3)(?!\4)\w))	4
((\d)((?!\2)\d)((?!\2)(?!\3)\d))	4
((\w)((?!\2)\w)((?!\2)(?!\3)\w))	4
(Figure )(\d)(\d)?(: )(?P<description>.+)(\n\n)(?P=description)	2
(Line [0-9]+ id=)([0-9]+)(.*?)(Line [0-9]+ id=)\2\n	2
(id=[0-9]+)(.*?)\1\n	2
sed -e 's/\(^[\t ]*\)\*/\1-/'	1
(\w)\1	1
(\w)\1+\b	1
\b(\w)\1+\b	1
(\b)(\w)\2+(\b)	1
([\p{L}\W])\1+(?= )	1
echo "<a href="/damm/test1/1-4-5-34.html">Test 1</a>" | sed -r "s;.*/(.*)/.*-?([0-9]+).*;\1 \2;"	2
sed "/pattern/ s/^\(.\{49\}\)../\1XX/" YourFile	1
sed 's/AAA\(.*\)BBB\(.*\)CCC/\1--\2 /'	1
sed -i -r "s/(apple.*)([,0-9]*)/\1,5/" "fruit.txt"	2
sed -i -r "s/(apple.*)([,0-9]*)/\1,30/" "fruit.txt"	2
sed -i -r "s/(apple,[0-9]*).*/\1,30/" "fruit.txt"	2
sed -i -r 's/(apple,[^,]*).*/\1,15/' filename	2
rename 's/(.*) - (.*) - (.*)/\1 - \3 - \2/' *.zip	2
sed -n 's/.*\(2z\(\(.*\)\.\(.*\)\)n9\).*/variable 1 = \L\3\nvariable 2 = \L\4/p'  your.file	1
(.)(\1*)	2
((.)(\2*))	2
curl website.com | sed -r 's|.*standards\.xml\?revision=([0-9]+).*|\1|'	2
curl website.com | sed -n -r 's|.*standards\.xml\?revision=([0-9]+).*|\1|p'	2
((.)(?:(?!\2)(.)|)(?!$))	1
sed 's/^[*-+] *\[\(.*\)\](\(.*\))/Notebook: x\nTitle: \1\nUrl: \2\nKeywords: y\n\nContent Area\n\nWill use the \1 and \2 variable here again/' file.txt	2
^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?:(?!.*?(.)\1).){8,}$	2
sed 's/^[^"].*[^"]$/&/;t;s/^"\(.*\)"$/\1/;s/"//g;s/.*/"&"/'	1
sed 's/<[^>]*\/\([^>]*\)>/\1/g' filename	1
sed -e ':a' -e 's/{\([^{}]*\)}/\1123/g' -e 'ta' file	1
sed ':a;s/{\([^{}]*\)}/\1123/g;ta' file	1
sed -r ':a;s/^("[^"]*)"(.*")$/\1\2/;ta' file	2
sed 's/\([^;]*\).*/\1/' filename	1
(\d)\1+	1
([a-zA-Z])\s*[&|]\s*\1	1
sed 's/\(ni = \).*/\1REPLACEMENT/'	1
sed -re 's/(:: ni =)[^=]*$/\1 512/' file	1
sed -re 's/(::\s+ni\s+=)[^=]*$/\1 512/' file	2
href=("|')(.*?)\.(avi|flv|mp4)\1	2
sed -ne ':a; $! { N; ba }; s/\([^[:space:]]\)[[:space:]]*go/\1;/g; p' infile	1
sed -r 's/^\s*(CREATE\s*)clustered\s*(INDEX.*ON\s*)(\w*)(\s+\(.*;)$/\1\2\3\4\nCLUSTER \3;/gi' original.txt > updated.txt	2
sed -r 's/^(\s*CREATE) (cluster)ed(.* (\S+) \(.*\);)\s*$/\1\3\n\U\2 \L\4;/' file	2
(.)\1	1
(.)(.)\2\2\2	1
(.)(.)\2{3}	1
sed "s/TXT\([^;]*\);.*/\1/"	1
(a)?b\1c	1
(a?)b\1c	1
(a)?b\1c	1
(a?)b\1c	1
(a)?b\1c	1
(a?)b\1c	1
([^0-9_])(?=.*\d)(\S{8,20})(?i:[\S])\1	2
^[^_\s\d](?=.*\d)\S{5,17}(?i)(\S)\1$	2
^[^\s\d_](?=.*\d)\S{5,17}(?i)(\S)\1$	2
sed -re 's/(::\s+ni\s+=)[^=]*$/\1 512/' test.dat	2
r"s/(::\s+ni\s+=)[^=]*$/\1 512/",	2
"s/(::\s+ni\s+=)[^=]*$/\1 512/"	2
sed 's/^\([[:space:]]*\)Id\([[:space:]]+\)int\([[:space:]]*\)$/\1Id\2string\3/'	1
(\d\w\w\d),\1	1
tail -f my_log_file | sed -e 's/.*\(response_time \S\+\).*/\1/p'	1
/(.)\1/.test(string) // returns true if repeated characters are found	1
^(?!.*(.)\1)[a-zA-Z][a-zA-Z\d@]*$	4
sed -u 's/.* \(response_time [0-9]\{1,\}ms\) .*/\1/" my_log_file	1
sed -n '/^ZZZ/ { s/^.*\(<.*>\).*$/\1/p }'	1
varname=$(sed -n 's/.* \(b[0-9][0-9]*\)/\1/p' filename)	1
v=$(sed -nr 's/.*\b(b[0-9]{3})\b.*/\1/p' file)	1
$xavg | sed -r 's/^([^.]+).*$/\1/; s/^[^0-9]*([0-9]+).*$/\1/'	2
sed 's/some__\([^_]*\)[^_]/other__\1/g' filename	1
sed 's/some\(__[a-zA-Z]*[^a-zA-Z_]\)/other\2/g'	1
([\\"'])(?:[^\\"]|\\\\")+\\1	1
(["'])[^"']*?\.(jpg|gif|png|bmp|swf)\1	1
(["']).*?\.(jpg|gif|png|bmp|swf)\1	1
var="$(sed 's/sent \([^ ]*\).*/\1/' <<< 'sent task1 to slave')"	4
(?!(.)\1{3})[!--/-\~]{6,24}	4
(?!(.)\1{3})	4
(?!(.)\1{3})[0-9a-zA-Z!@#$%\^()+_{}]{6,24}	4
^(([*?^])(?<!\2{5}))+$	3
(?<!<a.*?>)(<(?!a\b)(.*?\b).*?>.*</\2>|<(?!a\b).*?\b />)(?!</a>)	4
:%s/(\w)(\w\w)/\1y\2/g	1
:%s/\(\w\)\(\w\w\)/\1y\2/g	1
:%s/\v(\w)(\w\w)/\1y\2/g	1
:%s/\(\w\)\(\w\w\)/\1y\2/g	1
:%s/\v(\w)(\w\w)/\1y\2/g	1
xwininfo -id 0x8a00004 |grep "Absolute\|Width\|Height" |sed -r 's".*([XY]):[[:blank:]]*(.*)"n\1=\2"'	2
sed -r 's/.*(X|Y|Width|Height)\s*:\s*([0-9]+)/n\1=\2/'	2
sed 's/.*?(\S+)$/\1/' myfile.txt	2
echo /a/b/c | sed -nr 's=/*(?<x>.*?)/*=\k<x>=p'	2
echo /a/b/c/d | sed -nr 's=(/(.+?)/)?=\2=p'	2
(.)\1	1
^(?=.*\d)(?=.*[a-zA-Z])(?!.*(.)\1).{8,}	2
(?>([a-zA-Z])(?!\1)){8,}	4
^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?!.*(.)\1).{8}$	2
:s/\v(.*)(, no\.)/{\1}\2/	2
sed -re 's/^(.) (\S+) \\\\(\S+).*$/\1 \2 \1_\3/' file	2
^(0|1)\\1{1,}$	1
^(0|1)\1{1,}$	1
^(0|1)\1+$	1
sed -i.bak 's/\("prayer-bonus" : "0"\),/\1/' file	1
sed -i.bak 's/\("prayer-bonus" : "[0-9]*"\),/\1/' file	1
(<(?<tag>script|style)[\s\S]*?</\k<tag>>)|<!--[\s\S]*?-->|<[\s\S]*?>|(?<text>[^<>]*)	2
cat test.txt  | sed -r  's/.+?"(\{.+\})".*/\1/g'	2
sed 's/\({\\x22.*}\).*/\n\1/;s/.*\n//' file	1
(?!(.)\1{3})	4
(.)\1{2,}	1
RewriteCond %{HTTP_COOKIE}:MD5(%{REMOTE_ADDR}) ^.*utm=([^;]*).*:(?!\1).*$	2
RewriteCond %{HTTP_COOKIE}:%{REMOTE_ADDR} ^.*utm=([^;]*).*:(?!\1).*$	2
(.+)(?=.+)\1	2
var_s1=`grep "species,subl,cmp=    $3    $4    $5" $tfile |sed -r 's/.*(.{11}).{12}/\1/'`	1
find = ^.*GO ([0-9] +).*$ and replace =  \1.	2
sed 's~file.*/\(.*\.jar\)\(.*\)~file:///lib/\1\2~' a.txt	1
sed '/someHeader/{:a;$!N;/}/!ba;/someDescriptiom/!s/\(\n\s\+\){/&\1\tsomeDescription = "Excellent information found here!";/}' file	1
("|').*?\1(*SKIP)(*FAIL)|\{(?:[^{}]|(?R))*\}	2
([a-z])\1	1
(?!.*(.)\1{2})^[^\s]([0-9]*)([A-Za-z]+)(\w|\@|\#|\$|\s|\-)*[^\s]	4
^([a-zA-Z@#$])(?!\1)(?:([a-zA-Z@#$ ])(?!\2)){4,30}[a-zA-Z@#$]$	4
^(?=[a-zA-Z])(?:([\w@#$-]| (?!$))(?!\1\1)){6,32}$	1
^(?=[a-zA-Z])(?:([\w@#$-]| (?!$))(?!.*\1.*\1)){6,32}$	2
:%s/ \(\w\+\)$/ | \1/	1
$ sed -i 's/\(self.assertRaisesRegexp\)(\(.*\),\(.*\))/\1(\2,somemethod(\3))/' *.py	4
^\d{3}(-?)\d{3}\1\d{3}$	1
^\d{3}([- ]?)\d{3}\1\d{3}$	1
echo '||!!||!!||!!120012345||##!!@@!!||' | sed 's/^.*\(1200[0-9]*\).*$/\1/'	1
echo "TITLE=  B=ack=To ian   " | sed -n -e 's/[^=]*=[[:blank:]]*\(.*[^[:blank:]]\)[[:blank:]]*$/\1/p' | od -tx1 -tc	1
sed -r 's_([[:digit:]]+)"\)$_& uid="\1"/>_'	2
((?=([^CE]+|C(?!HOUCROUTE)|E(?!ND)))\1)*	4
sed -r  's/(^.*)NATIONAL CHARACTER VARYING\(([0-9]+)\)/ echo \1 VARCHAR"("$(echo "scale=0;\2*1.2\/1"\|bc)")"/ge'	2
sed -r 's/(^.*)NATIONAL CHARACTER VARYING\(([0-9]+)\)/ echo "\1"VARCHAR"("$(echo "scale=0;\2*1.2\/1"\|bc)")"/ge' filename	2
sed "s/\(<\s*img.*\)>/\1\/>/" Your_File.html	1
echo MXN-PKG-0.3.6-62.noarch.rpm | sed -E 's/(\d\.\d\.\d+)/\1/'	2
s/.(\d+\))/_\1/g	2
sed ':l;s/-\([^- ]*\)\( *=\)/_\1\2/g;tl' input	1
dir=$(echo $content | sed '/.*href="\([0-9]*\/\)".*/!d;s//\1/;q')	1
"s/(?<telephone>(?:\(\d{2}\)\s\d{4}\s\d{4}))/\k<telephone>/g"	1
echo "* master" | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1 /'	1
echo "* master" | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'	1
(?:([0-9])(?!\d*\1)){10}	2
(?:([0-9])(?!.*\1)){10}	2
^(?!.*(.).*\1)\d{10}$	4
((?:([0-9])(?!.*\2)){10})*	3
^(?:([0-9])(?!.*\1)){10}$	2
(\d)\1{7}	1
(?!(\d)\1{7})	4
^0[1-59](?!(\d)\1{7}$)\d{8}$	4
((?:A)?(?:B)?)(?!\1{100})(?:C)?	1
(.)(?=\1)	1
sed 's/.*\(.\{2\}:.\{0,6\}\).*$/\1/' file.txt	1
sed -rn 's/(word1|word2|blablabla|wordn)/\1/p' myfile.txt	1
sed -rn 's/.*(word1|word2|blablabla|wordn).*/\1/p' myfile.txt | uniq	1
[a-c]|[a-c][a-c]|[a-c][a-c][a-c]|[a-c][a-c][a-c][a-c]||t|tt|tt|ttt|ttt|([x-z][x-z])foo\1|at|au|bt|bu	1
[a-c]|[a-c][a-c]|[a-c][a-c][a-c]|[a-c][a-c][a-c][a-c]||t|tt|tt|ttt|ttt|([x-z])([x-z])foo\1\2|at|au|bt|bu	1
[a-c]+|t*|([x-z]){2}foo\1|(a|b)(t|u)	1
> sed -i.bak 's~\(ZSH_THEME="\)[^"]*\(".*\)~\1bar\2~' file	1
sed 's/\(ZSH_THEME="\)ys\("\)/\1bar\2/' # Using captures	1
sed 's/\(ZSH_THEME="\).*/\1bar"/'	1
cat foo.txt | sed 's|\(ZSH_THEME=\"\)ys\(\"\)|\1bar\2|'	1
sed 's/\(ABC \+\* \+\)[0-9]\+/\125/g' myfile.txt	1
(\b\w+),\s*(?=.*\1)	2
:%s/'\([^']*\)'/"\1"/g	1
:%s/^\([ ^I]*\)\([^ ^I]*\):/\1"\2":/	1
sed -n '/abc/{s/.*abc\(.*\)/\1/;s/xyz.*//;p}' input	1
(?P<time>\d+(,\d)?)"[^>]*?selected[^>]*>=?(\r?\n?)(?P=time)<	2
echo "#<file.sh>" | sed "s/\#<\(.*\)>/\1/"	1
echo "#<file.sh>" | sed "s/\#<\(.*\)>/$(cat \1)/"	4
(\w{2,})(\1)	1
(\[quote=([^\]]+)\])[\s\S]+(?=\s\2)	2
s/([A-Za-z0-9])\s+([A-Za-z0-9])/\1 * \2/g;	1
perl -pe 's/([a-z0-9])\s+(?=[a-z0-9])/\1 * /ig' mwe	1
perl -pe 's/([a-z0-9])\s+([a-z0-9])/\1 * \2/ig' <<< "a b c"	1
<([A-Z][A-Z0-9]*)\b[^>]*>(.*?)</\1>	2
regex = "<((?!pre|code|textarea))>([^<]+)</\1>"	2
~^(?<num>[0-9]+)(?<letter>[a-z]+)\g{num}\g<letter>$~	2
Langue.*([A-Z]{3})\s\(\1\)	1
sed -r 's#(\d*\.\d*)(,)(\d*\.\d*)(,)(\d*)$#"lat" : \1\2 "lo" : \3\4#gw output.csv' input.csv	2
sed 's#^\([0-9]\+.[0-9]\+\),\([0-9]\+.[0-9]\+\).*# "lat" : \1, "lon" : \2,#g' input.csv	1
"^Key0=\\w+(?:;(?:(?!\\1)Key1()|(?!\\2)Key2()|(?!\\3)Key3())=\\w+)*$"	4
^(?!.*Key\d+=(.*?);.*Key\d+=\1(;|$))	4
^(?!.*Key\\d+=(.*?);.*Key\\d+=\1(;|$))(Key\\d+=[^;]+(;|$))+$	4
<(?<tag>\w*)>(?<text>.*)</\k<tag>>	2
sed -i 's/^\([0-9.]*\),\([0-9.]*\),.*/ "lat" : \1, "lon" : \2,/g' filename.csv	1
(?:<img )?[^>]+src=(["'])(.*)\1	2
%s/\v^write\((.*), strlen.*/fprintf(\1);/g	2
^(?:(?!([a-zA-Z\d]+)\1{3,}).)+$	4
^(?:(?!(?<char>[a-zA-Z\d]+)\k<char>{3,}).)+$	2
(.).*?((?!.*?\1).).*?((?!.*?\2).)	4
^(?:(.)(?!.*\1.*$)){3}$	2
(?:(.)(?!.*?\1).*){3}	2
m{^(19|20)\d\d([- /.])(0[1-9]|1[012])\2(0[1-9]|[12][0-9]|3[01])$}	1
sed -i -r 's/([0-9.]+),([0-9.]+),[0-9]+/"lat" : \1, "lon" : \2,/' data	2
sed -r 's/([0-9.]+),([0-9.]+),[0-9]+/"lat" : \1, "lon" : \2,/' data > output.txt	2
:%s#^\s*\(\k\+\)\s*:\zs\s*\n\_s*\ze\1(.*)# #	2
(\w)\1*	1
\|(?![adjxz]*([adjxz])[adjxz]*\1)[adjxz]{1,5}	4
\|(?!\S*(\S)\S*\1)[adjxz]{1,5}	4
\|.*?([adjxz])(?=.*\1)	2
(\d)\1{4}	1
(\d)\1+	1
([a-zA-Z])\1+$	1
([a-zA-Z]).*?\1	1
:'<,'>s/.*\/\(.*\)'/\1	1
cat Labels.h | gsed -E 's/NSLocalizedString\(\@"(.*)", nil\)/\L\1/'	2
awk -v FPAT='[A-Z]+(_[A-Z]+)+' '$0=tolower($1)' file|sed -r 's/_(.)/\u\1/g'	1
([ATGC]{2})\1{2,}	1
echo "This is a test string" | sed 's/.*\(This\).*/\1/'	1
@default\.(.*)@.*(?=[\s\S]*\1)	2
@(.*)(@[\s\S]*)@default\.\1.*	2
@default\.(.*?)@[^\r\n]+(?=[\s\S]*@\1@)	2
sed -i.bak -r 's/\(([0-9]{3})\)-([0-9]{3})-([0-9]{4})/\1\2\3/' file	1
sed -i.bak 's/(\([0-9]*\))-\([0-9]*\)-\([0-9]*\)/\1\2\3/' file	2
:%s/\v\$(.{-})\[(['"$]@<!.{-})\]/$\1['\2']/	1
:%s/\[\s*\(\I\i*\)\s*\]/['\1']/g	1
:%s/\(\$\i\+\)\[\s*\(\I\i*\)\s*\]/\1['\2']/g	1
:%s/\[\(\I\i*\)\]/['\1']/g	1
$ echo $file | sed s/"제\([0-9]*\)과\.mp3"/"第\1课\.mp3"/g	1
sed -n 's/.*<INPUT NAME="res_encab" TYPE=HIDDEN VALUE="\(.*\)>.*/\1/ip;T;q'	1
^\v(.*)\t(.*)\n(.*)\t\2	2
while 1 | %s;\v^(\S+)(\s+)(\S+)\_s*(\S+)\s+\3;\1,\4\2\3;g | endwhile	2
sed "s/²/²S/g;s/\\'/²q/g;s/\*[[:blank:]]USER[[:blank:]]\{1,\}'\([^']*\)'[[:blank:]]*'\([^']*\)'[[:blank:]]*'\(.*\)'[[:blank:]]*$/\1;\2;\3/;s/²q/\\'/g;s/²S/²/g" YourFile.csv	1
sed -i.bak 's/^ *\(line [0-9]\+\).\+$/my \1/' file	1
((\w)\2?(?!\2))+	3
^(?!.*(\w)\1{2}).*	4
sed 's|^#[[:blank:]]*\(http.*vendor.*distroARCH-1.1/.*\)|\1|' YourFile	1
\$this\->(m_\w+)(?!(.|\v)*private \$\1)	2
\$this->(m_\w++)(?!(?>[^p]++|\Bp++|p(?!rivate \$\1\b))++private \$\1\b)	3
sed -r 's/"([^"]*).*/\1/' file	2
printf "%s\n" *[[:space:]][0-9]* | sed 's/^\([^0-9]*\) [0-9].*$/\1/'	1
(\d)(.{\1})	1
sed -e 's/.*\(response_time \S\+\).*/\1/p' -e 's/'	1
sed -e 's/^request country_\([^ ]*\).*response_time \([0-9]*\) msec.*$/\1 \2/g'	1
sed -r 's/.*country_(\S+).*response_time ([0-9]+).*/\1 \2/' filename	2
sed -n '/.*ObjectId("\([^"]*\)").*/s//\1/p' file	2
sed -i "param1='\([0-9]\+\)';/a \param2=\1;"	1
sed -i "s/param1=\([0-9]\+\)/param2='\1'/g" '{}' \;	1
sed -r "s/(param1='([^']*)')/\1\nparam2=\2/" filename	2
$ find . -name '*ini' -exec sed -ri.bak 's/param1=.([0-9]+)./&\nparam2=\1/' {} \;	2
| sed -r 's/^\s*([0-9]+)\s*/\1-/'	2
.*(.)\1.*	1
(?![a-z]*([a-z])\1)\b[a-z]+\b	4
\b(?:([a-z])(?!\1))+\b	3
^(?:(.)(?!\1))*$	3
sed "p;s/1='\([^']*\)'.*/2=\1/" file	1
(cat|dog)(?:\W+\w+){0,3}?\W+(?!\1)(cat|dog)	1
sed -i -r 's#(export\ PATH=")(.*)#\1/home/USER/bin:~/.local/bin:\2#' ~/.zshrc	2
sed -e 's/^>\([^\s]\+\)\s.*$/\1/'	1
sed -r 's/(\S+).*/\1/' file	2
(.+) AND \\1	2
^((?!(.)(.)\3\2).)*$	4
(.*?(?:(?:\w+|\. *)(?=[A-Z]))|\1)	4
(.*?(?:\w+(?=[A-Z]))|\1)	4
sed -i 's/\([0-9]\)\.\([0-9]\{5\}\)0000000000000e+05/\1\2/g' <filename>	1
^(\d)(?!\1{7})\d{7}$	1
(\d)\1+\b(*SKIP)(*FAIL)|\d+	2
s/([^;]*)/[\1]/g	2
^([Ii]|[Oo])@\w+=(?<q>'?)[\w\d]+\k<q>$	1
((<br>\s*)\1?)+	4
Regex.Replace(sampleText, @"((<br>\s*)\1?)+", "<br />");	4
cat /tmp/tmp_file | grep "toto.titi\[[0-9]\+\].tata=55" | sed 's/.*\[(\d*)\].*/\1/'	2
%s!\v(<[ABCÇDEFGĞHIİJKMLMNOÖPRSŞTUÜVYZÎÂÛ]{2,}>{-1,})(.*)$!<h2>\1</h2>\r\r\2!g	2
%s!\v((<[ABCÇDEFGĞHIİJKMLMNOÖPRSŞTUÜVYZÎÂÛ]{2,}>{-1,}\s*)+)\s+(.*)$!<h2>\1</h2>\r\r\3!g	2
:s!\v((<[A-ZÇĞİÖŞÜÎÂÛ]{2,}>{-1,}\s*)+)\s+!<h2>\1</h2>\r\r!	2
(?!([\w])([\w])\3\2)	1
(([\w])([\w])\3\2)	1
^((?!((\w)(\w)\4\3)).)*$	4
^(?!.*(.)(.)\2\1)	4
(\60){7}(100)(\2\1)(110)\3(101)01\2(111)\3(\2\4)\5\1\6\7\6\5\6	4
^(?:(?=([01]*)0[01]* (\1)1).... ){15}1111$	4
(?=([01]*)0[01]* (\1)1)	4
^(?=([01]*)0[01]* (\1)1)....[ ]	4
((\d+)0 \2[1] ?){8}	2
myapp\.exe\s?(?:-([hsr])(?!.*\1)\s*)*$	2
(.)\1{2}	1
<a\s+[^>]*\s*href\s*=('|"|)\s*((?:[^\1|>]|[\n\r])+)(\1)[ |>][^>]*?>(.*?)</a>	2
^(ab((?(2)\2b)))+a$	4
<a\s+[^>]*\s*href\s*=('|"|)\s*((?:[^\1\s|>]|[\n\r])+)(\1)[ |>][^>]*?>(.*?)</a>	2
((b*)a(?=\2ba))+	3
^(?=a)((b*)a(?=\2ba))+\2ba$	4
(.+) \1	2
^(?:a((?(1)\1b|b)))+a$	4
sed -r 's/^(.{37})(.{4})/\1    /'	1
awk '/^B/ && $2=="2" {print}' ¦ sed -r 's/^(.{37})(.{4})/\1    /' data	1
sed -r '/^B[^\s]*\s2\s/s/^(.{37}).{4}/\1    /' data	1
gawk '/^B/ && $2=="2" {print gensub(/(.{37}).{4}/,"\\1    ","")}' data	4
([йцукенгшщзхъёэждлорпавыфячсмитьбю]+)(?!.*\1)	2
sed -e 's/.\{8\}\(foo\)/ \1/g' file.txt	1
sed 's%^\([0-9.]*\)$%<a href="http://www.ip-tracker.org/locator/ip-lookup.php?ip=\1">\1</a>%'	1
sed -e 's@[\s]*([0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3})@\1@' InputFile	1
sed 's/\[([\d ,]+)\]/\1/g' | sed 's/,//g'	2
sed -r ':a;/\[([0-9]+(, )*)+\]/!b;s//\n&\n/;h;s/[][,]//g;G;s/.*\n(.*)\n.*\n(.*)\n.*\n/\2\1/;ba' file	2
sed 's_^\(\([^/]*/\)*\)\(.*\)\(\.[^\./]*\)$_\4/\3/\1_' | sed 's_^\(\([^/]*/\)*\)\([^\./]\+\)$_/\3/\1_' | sort -t/ -k1,1 -k2,2 -k3,3 | sed 's_^\([^/]*\)/\([^/]*\)/\(.*\)$_\3\2\1_'	1
sed 's_^\(\([^/]*/\)*\)\(.*\)\(\.[^\./]*\)$_\4/\3/\1_' | sed 's_^\(\([^/]*/\)*\)\([^\./]\+\)$_/\3/\1_' | sort -t/ -k1,1 -k2,2 -k3,3 | sed 's_^\([^/]*\)/\([^/]*\)/\(.*\)$_\3\2\1_'	1
sed 's_^\(\([^/]*/\)*\)\(.*\)\(\.[^\./]*\)$_\4/\3/\1_' | sed 's_^\(\([^/]*/\)*\)\([^\./]\+\)$_/\3/\1_' | sort -t/ -k1,1 -k2,2 -k3,3 | sed 's_^\([^/]*\)/\([^/]*\)/\(.*\)$_\3\2\1_'	1
sed 's/\(\.[^.]*\)$/\/\1/' | sort -t/ -k 2,2 -k 1,1  |  sed 's/\/\([^/]*\)$/\1/'	1
sed 's/\(\.[^.]*\)$/\/\1/' | sort -t/ -k 2,2 -k 1,1  |  sed 's/\/\([^/]*\)$/\1/'	1
(.)\1	1
(.)\1+	1
sed -e 's/\(.\)/\1\+/g' dictionary.txt > regex.txt	1
sed -rn '/string1/{h;d};H;/string2/{x;s/(string1([^\n]*\n){4}).*string2.*/\1/p}' file	2
:%s/\<\(\w+\)\>\s\1/\1/g	1
:%s/\<\(\w\+\)\>\s\1/\1/g	1
:%s/\v<(\w+)>\s\1/\1/g	2
"\\(Cable\\).*\\1"	1
\<\(.*\)\>.*\1	1
(.)\1	1
sed -r 's/,([0-9]+(;|$))/.\1/g' file	2
^((x)|(\2{2}))$	1
href *= *(\"|\').*\1	1
sed 's/^.*MG-\([0-9]*\).*/\1/'	1
([A-Z]{3})/((?!\1)[A-Z]{3})	1
([A-Z]{3})/\1	1
:%s/\^@\(\S\)/^@\r\1/g	1
sed ':a;s/\([Ss]h\.*\)[^\. ]/\1./;ta;s/[Ss]h/../g'	1
^require (['"])([.\w /]+)\1	2
def\{(.+?)\}.*def\{\1\}	2
RewriteCond %{ENV:BLOGS}:%{REQUEST_URI} ^([^:]+):^/[^/]+/\1	2
sed -r 's/(.*)([^ ]+) ([^ ]+)$/\1\n\2 \3/;h;s/\n.*//;s/ //g;G;s/\n.*\n//' myfile	2
\1\2(\3?"V":"v")\4\5 -> doesn't work	4
<(.*).*?<\/?\1>	2
<(.+)>(.*?)</\1>	2
sed -r ':a;$!N;s/\n([^0-9]|$)/\1/;ta;P;D' file	1
^AAA[\s,]+(?:(BBB|CCC|DDD|EEE)(?!.*\1)[,\s]+)*FFF$	2
s/\(\sclass\s*=\s*"\)\(\([^"]*\)\( \)\)\?span\([0-9]\+\)\(\( \)\([^"]*\)\)\?"/\1\3\4col-md-\5\7\8"/g	1
(.+) \1	2
([\u2B1B\u2B1C])\1*	1
$ echo "test.jpg" | sed 's/\.\([^.]*\)$/.th.\1/'	1
s/(^|[^.]{2})\.|\.($|[^.]{2})/\1 \2/	1
/<(\w+)\b(?:\s+[\w\-.:]+(?:\s*=\s*(?:"[^"]*"|"[^"]*"|[\w\-.:]+))?)*\s*/?>\s*</\1\s*>/gixsm	2
/<(\w+)\b(?:\s+[\w\-.:]+(?:\s*=\s*(?:"[^"]*"|"[^"]*"|[\w\-.:]+))?)*\s*/?>\s*</\1\s*>/gixsm	2
~\b(?::url|:\surl)\s*\(\s*(["\']?+)(?:(?!\.\./))\K(?:/(?!/)|(?=[\s>]|\1))~i	1
\b[a-z]([a-z(\')](?!\1))+\b	4
^(.*?/)(.*)::\2$	2
(?=(...))\1	1
echo "abc=123.24|127.9|2891;xyz;hgy" | sed -r 's/(=)([0-9.]+)\|/\1\2,/g'	2
\d{3}([.-]?)\d{2}\1\d{4}	1
sed -i 's/\(<tag[^>]*[ ]*desc[ ]*\)=[ ]*"[^"]*"/\1="NEW DESC"/g' input.xml	1
$pattern = "~##([a-zA-Z]{2})##.*?\b$find\b.*?##END_\1##|$find~s";	1
sed -n "/\(MY-[0-9]\{5\}\).*/ s//\1/p" YourFile	1
sed 's/\(\.[0-9]*\)\([0-9]\.\)/\1 \2/'	1
echo "<tag>Foo</tag>" | sed "s/<tag>\(.*\)<\\/tag>/[tag]\1[\\/tag]"	1
$echo "<tag>Foo</tag>" | sed "s/[^<]*<\([^>]*\)>\([^<]*\)<\([^>]*\)>/[\1]\2[\3]/"	1
sed "s/\([A-Z]\{5\}\)/$(echo curl http:\\/\\/example.com\\/api_call\\/\\1)/g" /tmp/raw.txt	4
(@)\1+|[,.]	1
(<tag1>)((?!\1).)*?</tag1>	3
^(\d)\1{6}$	1
^([0-9])(?:\1|[a-z](?!.*[a-z])){7}|[a-z]([0-9])\2{6}$	2
00408[Cc]([a-zA-Z0-9])((?!\1)[a-zA-Z0-9])((?!\1)(?!\2)[a-zA-Z0-9])((?!\1)(?!\2)(?!\3)[a-zA-Z0-9])((?!\1)(?!\2)(?!\3)(?!\4)[a-zA-Z0-9])((?!\1)(?!\2)(?!\3)(?!\4)(?!\5)[a-zA-Z0-9])	4
sed -e -r 's/(([^,]+,){6}[^,]+), /\1\n/g'	2
^(?<=(\w\w).*)\1	2
^(\w{2})(?=.*\1)	2
^(\w{2})(?:.*)(\1)	1
^(\w{2})(?:.*(\1).*(\1)|.*(\1))	1
sed 's/\( constant = *\)[^ ]*/\1substituteValue/' <<< "$line"	1
(?=(...).*\n.*\1)	4
(\d{16})(\d+)(.*?\.pdf)  ->  \2\1\3	2
^(.*)\1((?!\1).)+\1{2}$	3
(.).*?\1	1
(.)(?=.*?\1)	2
(.)(?=(.*?\1){3,})	2
(.)(.+\1)+	3
(\w)\1{2,}	1
(.*?)\1	2
return Arrays.toString(nums).split("(\\d*+), \\1, \\1(?!\\d)").length == 1;	2
return new String(nums,0,nums.length).split("(.)\\1\\1").length == 1;	1
f(\w+)=\1	2
^((?!pppoe).)*(pppoe)((?!pppoe).)*\2((?!pppoe).)*$	1
(?m)(Section\s*\d+)(.*?\1)$	2
(?=(pattern))\1	1
<(em)>((?!.*?et al).*?)</\1>	2
(?:^|[^*])_*([*](?:[*]{2})*)?[^*_]+\1_*(?:[^*]|$)	2
(?>REF)?(\\d{3}+)(-?)(\\d{6}+)\\2(\\d{3}+)	2
(ab*c):\1	2
sed 's/\&\(.*\)\\end{pmatrix}/\1/'	1
"(\\d+)=\\1\\b"	2
(\d+)=\1\b	2
^(\\d+)=\\1$	2
^\\s*(\\d+)\\s*=\\s*\\1\\s*$	2
^\\s*(.+?)\\s*=\\s*\\1\\s*$	2
s/^\(.*\) \(\d\+\)$/#define MY_\U\1\E (0x0\2)\/\/ \1/	4
s/^\(\S\+\) \(\S\+\) \(\d\+\)$/#define MY_\U\1_\2\E (0x0\3)\/\/ \1/	4
${${TM_FILEPATH/^.*app\/(.*)\.js/\1/}/\//\./g}	2
${TM_FILEPATH/^.*app\/(.*)\.js$/\1/}	2
while read line; do sed -r 's/([^,],[^,],[^,],)(.*)(,.+,.+)/\1'"$(sed -r 's/([^,],[^,],[^,],)(.*)(,.+,.+)/\2/' <<< $line | sed 's/,//g')"'\3/' <<< $line; done < input.txt	2
while read line; do sed -r 's/([^,],[^,],[^,],)(.*)(,.+,.+)/\1'"$(sed -r 's/([^,],[^,],[^,],)(.*)(,.+,.+)/\2/' <<< $line | sed 's/,//g')"'\3/' <<< $line; done < input.txt	2
sed -r 's/([^,],[^,],[^,],)(.*)(,.+,.+)/\1'"$(sed -r 's/([^,],[^,],[^,],)(.*)(,.+,.+)/\2/' <<< $myInput | sed 's/,//g')"'\3/' <<< $myInput	2
sed -r 's/([^,],[^,],[^,],)(.*)(,.+,.+)/\1'"$(sed -r 's/([^,],[^,],[^,],)(.*)(,.+,.+)/\2/' <<< $myInput | sed 's/,//g')"'\3/' <<< $myInput	2
sed -r 's/([^,],[^,],[^,],)(.*)(,.*,.*)/\1"\2"\3/' input.txt	2
cat <log_file_path> | grep inst | sed 's/.*inst "\(.*\)".*/\1/'	1
\$\{([^\}]+)\}(?![\S\s]*\$\{\1\})	2
^((.)(?=[\1-z]|$))+$	4
(.)\2+	1
((.)\2+)+	3
<(a|h1|p|title)[^>]*>([^<]+)</\1[^>]*>	2
\bhref\s*=\s*(["']?)([^"'\s>]*)\1	2
(^|\s)(\w)\1+	1
(\w)\1+	1
(^|\s)(\w)\1+, it just doesn't work	1
'sudo sed -irn "1!N; s/<ip>127.0.0.1<\\/ip>(\\n.*4000.*)/<ip>0.0.0.0<\\/ip>\\1/" /usr/something.conf'	2
echo s/(one)/\1\1/	1
echo one | sed 's/\(one\)/\1\1/'	1
echo one | sed s/\\\(one\\\)/\\1\\1/	1
s/(one)/\1\1/	1
sed s/\\\(one\\\)/\\1\\1/	1
cat catalogs  | sed -E 's/.*\/catalog\/([^/]+)\/?.*/\1/g'	2
wget -q -O- https://dl.dropboxusercontent.com/s/wm6mt2ew0nnqdu6/links.html?dl=1 | sed -r 's#<a href="([^"]+)">([^<]+)</a>.*$#\2 - \1#' > links.txt	2
sed "s/\(^%%Title:\)\s.*$/\1 $title/g" test_file.ps	1
<(a|h1)[^\>]*?>(some)[^\<]*?<\/\1>	1
(?:([\/().-])(?!.*\1))	2
("|')(?:[^\\]|\\.)*?\1	1
^(?!.*(.)\1)(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])\w{8,15}$	4
03([-./])19\176	1
sed 's/"(\d+)"/\1/g' inputFileName > outputFileName	2
(.)\1\1	1
([a-zA-Z])\1{2}	1
^(?!.*([a-z\d])\1{2})	4
sed 's/e\\left\\{\(.*\)\\right\\}/\\e{\1}/g'	1
%s/\(roads.*\)Rome/\1Italy/	1
(?<p1>[\w\/]+?)(?<hier>\k<p1>.*)	2
(?<p1>top_\w+).*?(?<hier>\k<p1>.*)	2
(top_.*)/(\1.*$)|(^.*$)	2
(?<==)('|").*?\1(?=.*?>)	2
sed -r '/svn:mergeinfo/,/PROPS-END/{s#(/code)(/(branches|tags|trunk))(.*)#\2\4#}' inputfile	2
sed -e 's/^\(\w\+\)\s\+/>\1\n/' < myfile > myfile2	1
sed 's/\([^ ]*\) /\1\n/' input | fold -w 100	1
(?s)^(DATA GOES HERE\R)(.+?)(?=\1|\z)	2
(?<=(DATA GOES HERE[\r\n]+)).[\s\S]+?(?=\1)|(?<=DATA GOES HERE[\r\n]+).[\s\S]+	2
([A-Z])\1	1
sed "s/<span class='A'>\([^<]*\)<\/span>/**\1**/g"	1
sed -r "s/<span class='A'>([^<]*)<\/span>/**\1**/g"	2
\s*(?:((?:(?:\\\.|[^.,])+\.?)+)\s*([!~><=]=|[><])\s*("|')?((?:\\\3|.)*?)\3|(.+?))\s*(?:,|$)	2
<(div|p).*(data-editable).[^>]+>(.*?)<\/\1>	2
sed -i.bak -r "s/foo\(\s*([0-9]*)\s*,\s*(([0-Z]|'[0-Z]'))\s*\)/foo(\1, \2, 0)/g" file	2
echo "this is a sample id='42' string" | sed -r "s/id='(.*?)'/\11/g"	2
echo "this is a sample id='42' string" | sed -r "s/id='(.*?)'/\11/g"	2
^(?!.*?(\d)\1{5}$)0[1-79]\d{8}$	4
sed 's/\([^ ]*\) \([^ ]*\) \([^ ]*\)/\2 \3/'	1
s/\.([^.]+)\./;\1;/	2
:%s/\([^ \\]\)"\([^ ]\)/\1\\"\2/g	1
%s/\([^\\]\)\("\)/\1\\\2/g	1
\v(.+).*\|.*\1	2
"#([0-9A-Fa-f]{2})\\1\\1"	1
'(.{3})(.*)\1'	2
'(.{3})(.*)(?=\1)'	2
(.+?)(?=(.+?))\1\2	2
(?=(aga)).{2}(?<=.)(\1)	1
(?=(abca)).{3}(?<=.)(\1)	1
sed -rn '1{x;s/^/owner admin loc ser /;x};/^(owner |admin |loc |ser )/{G;/^(owner |admin |loc |ser )(.*\n.*)\1/!b;s//\2/;P;/\n$/q;s/.*\n//;h}' file	2
sed -E -e "s/('[^']*'|[^,]*),/\1"$'\t'"/g"	2
sed -E -e "s/('[^']*'|[^,]*),/\1X/g"	2
sed -E -e "s/('[^']*'|[^,]*)(,|$)/\1"$'\t'"/g; s/"$'\t'"$//"	2
sed -E 's/,([^_])/\t\1/g'	1
sed -re 's/([0-9]+).*/\1/'	2
sed -re 's/^.*([0-9]+).*/\1/'	2
sed -re 's/([\d]+).*/\1/'	2
sed -E 's/([0-9]+).*/\1/g'  <<< "$s"	2
sed -E 's/[a-zA-Z ]*([0-9]+).*/\1/g'  <<< "$s"	2
sed -e 's/.*=\(".*"\)>\(.*\)<.*$/\1, "\2"/'	1
echo '< a href="linktoblah.html">name of link < /a>.' | sed -a 's/.*=\(".*"\)>\(.*\)<.*$/\1, "\2"/'	1
sed -n -e '/href=/ s/.*=\(".*"\)>\(.*\)<.*$/\1, "\2"/p'	1
(^|\A)\bthis\t\r\n\a\e\f\v.\u0021\w\W\d\D\s\S[\x00\xBC\xC9\u00C7\w\n!-a]\Bregex*shows+every?token{1,}(?P<that>you can)\1(?=possibly)(?!use)(?<=within)(?<!a single)(?#regular expression in python)(?:\Z|$)	1
\[\[#(\w+)\s(.*?)\]\](.*?)\[\[\/\1\]\]	2
sed -r 's/^1([0-9]{10})$/\1/' file	1
sed 's;^1\([0-9]\{10\}\)$;\1;' filename	1
^(\d)(?!.*\1)\d+$	2
\b([a-z])[a-z]*\1\b	1
\b(\w+)\b\W+\1\b	2
(?s)(.)\1	1
(.+)\1	2
/<recode>([^#]*?)<(sumfa)>([^<]*)<\/\2>/gmsi	2
find eta* | sed 's/.*\([0-9.]\+\)/\1/g'	1
find eta* | sed  's/.*-\([0-9.]\+\)/\1/'	1
sed 's/.*[^0-9.]\([0-9.]\+\)/\1/g'	1
find eta* | sed 's/[^-]*-\([0-9]*\.[0-9]*\)/\1/'	1
sed -E 's/([-A-Za-z_0-9]+\.[-A-Za-z_0-9]+).*$/\1  \2/'	2
sed -E 's/([-A-Za-z_0-9]+\.[-A-Za-z_0-9]+)/  \1/'	2
(?<=<(\w+)[<>]*>).*?(?=/<\1>)	2
<([a-zA-Z0-9]+)(?:\s+[^>]+)?>(.+?)<\/\1>	2
sed 's/\([^ ]\+\)\s*\(.*\)$/\2\t\1/' -i file	1
sed "s/\(\([{}]\)\2\)/\2/g"	1
sed 's/\([A-Z]+(_{0,1}[A-Z]+)+\)/\1/g'	2
%<x-(?P<open>\w+)\s*(?P<attributes>[^>]*)>(?P<innerHtml>.*)</x-(?P=open)>%s	2
namecmp=`grep -l $name dat*.p |sed -e "s/^\(......\)\(..\)\(..\)\(....\)\(.*\)/\1\4\3\2\5/g"| sort -t '.' -k 1.7,1.14 |sed -e "s/^\(......\)\(....\)\(..\)\(..\)\(.*\)/\1\4\3\2\5/g" | tail -1 `	1
namecmp=`grep -l $name dat*.p |sed -e "s/^\(......\)\(..\)\(..\)\(....\)\(.*\)/\1\4\3\2\5/g"| sort -t '.' -k 1.7,1.14 |sed -e "s/^\(......\)\(....\)\(..\)\(..\)\(.*\)/\1\4\3\2\5/g" | tail -1 `	1
%<x-(?P<open>\w+)\s*(?P<attributes>[^>]*?)>(?P<innerHtml>((?!<x-).)*)</x-(?P=open)>%is	2
(["'])(?:[^"'\\]|\\{2}|\\.|(?!\1)["'])*\1	1
sed 's/\(<[^>]*>\)\(.*\)\(<[^>]*>\)/\1\2/' test.txt	1
sed 's/\(<[^>]*>\)\(.*\)<[^>]*>/\1\2/'	1
((a(.+?)c ?)(a\3c ?)*)	3
%s/\v(\w*),\s*(\w*)\s*(\w)/\L\2.\L\3.\1@gmail.com/	2
grep -e "^abc" -e " abc" a.txt|sed 's/.*\(abc[^ ]*\).*/\1/'	1
sed 's/\(PROJECT_NUMBER[ ]*=[ ]*\)[^ ]*/\1$VERSION/' filename	1
sed -i 's/b.\(STRING\).focus()/highlight("\1")/g' file	1
find . -type f  -name '*.html' -exec sed 's/f\.\([0-9a-zA-Z]*\)\.focus()/highlight("\1")/g' {} \;	1
sed -i.bak 's/f\.\([0-9a-zA-Z]*\)\.focus()/highlight("\1")/g' $(find . -type f  -name '*.html')	1
sed -i 's/f\.\([a-zA-Z0-9]\+\)\.focus()/highlight("\1")/g' file_to_process	1
sed -i.bak 's/f\.\([[:alnum:]]\+\).focus()/highlight("\1")/g' file.html	1
%rename("%(regex:/^([A-Z][a-z]+)+_(.*)/\\2/)s", %$isenumitem) "";	2
%rename("%(regex:/^(FFE_)(.*)/\\2/)s") "";	2
%(regex:/SWIG_p_f_p_([A-Za-z\\d_]+)/PointerOn\\1/)	4
:%s/-\(\d\),/-0\1,/g	1
/<h([1-6])(.*?)<\/h\1>/	2
:s/(foobar)(\()(arg1, arg2)(\))/\1: \3;/g	1
:%s/\(\<foobar\)(\(.*\))/\1: \2;/g	2
:%s/\v(\w+)\(([^()]*)\)/\1: \2;/g	2
sed '/Location/ s|\(Drive/Music\)[^<]*\(/[^/<]*<\)|\1\2|' YourFile	1
^(?:[1-9](?:[0-9]{0,2}(?:([.,])[0-9]{3})?(?:\1[0-9]{3})*|[0-9]*)|0)(?!\1)[.,][0-9]{2}$	1
(['"])(?>[^'"\\]+|\\{2}|\\.|(?!\1)["'])*\1|\S.*?[.．.！!?？]	3
amixer | perl -0pe "s/Simple mixer control '(.*)',(.*)\n  Capabilities: .*pvolume.*\n(  .*\n)*(  (.*): Playback .*\[([0-9]+)%\].*\[(on|off)\]\n)/\2 - \1 (Vol. \6) (\7)\n/g"	2
([1234a])\1{2,4}	1
regsub -all -- (a+)(ba*) aabaabxab {z\2} x	2
sed -r 's/(\sLOB.*"L_.+_)([0-9]{10})("\()/\1'$myVar'\3/'	2
cat /tmp/out.log | sed -r 's/(\sLOB.*"L_.+_)([0-9]{10})("\()/\1'$NUM'\3/g' > /tmp/newout.log	2
/^(\d{1,2})([\/-]?)(\d{1,2})\2(\d{2})$/	1
(pattern)((\1){11}|((\1){9}))	1
s/((hello|world)[^\n]*)\n/\1 /g	2
sed -r ':a;$!{N;ba};s/((hello|world)[^\n]*)\n/\1 /g' file	2
sed -r 's/(LOB.*"L_.*)([0-9]{10})("\()/\1'$myVar'\3/' file	2
(\d)\d\1	1
(\d)\d\1	1
(\d)\d\1	1
(+?\b1|\b)((()|([.-])|\s)?8(00|44|55|66|77|88)(?(3))|)(?(4)\4|(?(2)\s|))[2-9]\d{2}(?(4)\4|(?(2)[.-]|))\d{4}\b	2
^(?!(.).*\1)[mlps]{1,4}$	4
^(?=.*\d{2})(?=.*[a-z]{2,})(?=.*[A-Z]{2,})(?=.*[^a-zA-Z0-9]{2,})(!#.\*)\1?(?!\1).{10,16}$	2
^(?=(\D*\d){2})(?=([^a-z]*[a-z]){2})(?=[^!#.*]*[!#.*])(?!.*?(.)\1)[a-z0-9!#.*]{10,16}$	2
sed -r 's/(href=")([^"]*)/\1www.url\2/' file	2
^([a-zA-Z])\1*$	1
([a-zA-Z])\1*	1
euca-describe-instances | grep "INSTANCE" | sed "s/^.*INSTANCE  *\([^ ]*\) .*$/\1/" >> instance_state.txt	1
feedstail -u http://www.heise.de/newsticker/heise-atom.xml -r -i 60 -f "{published}> {title} {link}" | sed 's/^\(.\{3\}\)\(.\{13\}\)\(.\{6\}\)\(.\{3\}\)\(.*\)/\1\3\5/'	1
sed 's!\(http://www\.heise\.de/\)newsticker/meldung/[^./]*\(-[0-9]+\)\.html[^ ]*!\1\2!'	1
... | sed -E 's|(://[^/]+/).*(-[0-9]+)\.html/.*|\1\2|'	2
... | sed 's|\(://[^/]*/\).*\(-[0-9][0-9]*\)\.html/.*|\1\2|'	1
sed 's|\(//[^/]*/\).*\(-[0-9]\{7\}\).*|\1\2|' file	1
sed -n 's/\[file:\([^\]*\)]/\1/p' file	1
${2/(?(?!,)^([A-z0-9_-]*)$|([A-z0-9_-]*), *)/"\1\: " + \1/g}	2
<([\w]+)[^>]*?>(\s|&nbsp;)*<\/\1>	2
sed -n '/1st line pattern(match-group-1).../,/3rd line pattern\1.../p'	1
sed 's/.*_\([0-9][0-9]*\)/\1/' file	1
sed "s/.*:\([^,]*\).*/\1/"	1
cat this_file | sed ':a;N;$!ba;s/\n\([a-z]\)/ \1/g' > that_file	1
sed ':a;N;$!ba;s/\n\([a-z]\)/ \1/g' this_file > that_file	1
sed -i -e 's/\(.*user=\).*/\1/' -e '/^ *#/b a' -e '/user=/s/^/#/' -e :a inputfile	1
sed -i -e '/^ *#/b a' -e 's/\(.*user=\).*/#\1/' -e :a inputfile	1
sed -e '/^ *#/b a' -e 's/\(.*user=\).*/#\1/' -e :a inputfile	1
sed '/\( *\)#/ !{s/\([^ =]*\)=.*/#\1=/;s/^  / /;}' YourFile	1
sed -E -e 's/^([ \t]*)#?(export )?usr=.*/\1#\2usr=/g' -e 's/^([ \t]*)#?(export )?pass=.*/\1#\2pass=/g' in	2
sed -E -e 's/^([ \t]*)#?(export )?usr=.*/\1#\2usr=/g' -e 's/^([ \t]*)#?(export )?pass=.*/\1#\2pass=/g' in	2
ls F00001-0708-*|sed 's/F0000\(.*\)/mv & F000\1/' | sh	1
sed "s/^[^']*'\([^']*\)'[^']*'\([^']*\)'.*/\1 \2/"	1
('|")[^\1]*?\1	1
gawk '$3~/http/{$3=gensub(/([^/]+)\/\/([^/]+).*/,"\\1//\\2","g",$3);gsub(/\/\/.*www/,"//www",$3)}1' file	4
(\\w{3})\\1	1
((\\w)\\2){3}	1
gawk '{$3=gensub(/\/\/([^@\/]+@)?([^\/]+).*/, "//\\2", "g", $3)} 1' file1	2
sed 's#//[^@]*@#//#;s#\([^/]\)/[^/][^ ]* #\1 #' file1	1
sed -rn 's/^.+Store=([^ ]*.jks).*$/\1/p' file.txt	2
sed -nr 's/Private _?(lst)_(\w*) As \w*/\1\2.Clear()/p' file	2
echo 'dot1dTpFdbPort[00:02:6f:d9:16:ca] 12' | sed 's/://g;s/.*\[\(.*\)\]/\1/'	1
<v:(\w+)>(.*?)</v:\1>	2
(?P<one_character>.)(?P=one_character)?	1
(.)\1	1
(.)\1?	1
var regex = /(\d\d([\/-])\d\d\2\d{2,4}) (\d\d:\d\d:\d\d): ([^:]+): (.*)/g;	2
^(A+B*C?) \1$	2
^(A+B*C?) \1\b	2
(foo)bar\1	1
(\p{L}+):(?!\1)\p{L}+	2
\b(\p{L}+):(?!\1\b)\p{L}+\b	2
(\p{L}+):(?!\1)	2
/\[([^\]]+)\](.*?)\[\/\1\]/g	2
\[([^\]]+)\](.*?)\[/\1\]	2
grep '<strong>First ascent:</strong>' | sed 's/.*by \([^>]*\)<.*/\1/'	1
grep -i "$1" -A3 | grep 'First ascent:' | sed 's/.*by \([^>]*\)<.*/\1/'	1
^([a-z])([a-z])([a-z])([a-z])(\1|\2|\3|\4)(\1|\2|\3|\4)(\1|\2|\3|\4)$	1
^([a-z])\1*([a-z])(\1*\2*)*([a-z])(\1*\2*\4*)*([a-z])(\1*\2*\4*\6*)*$	3
^([a-z])\1*(?!\1)([a-z])(\1*\2*)*(?!\1)(?!\2)([a-z])(\1*\2*\4*)*(?!\1)(?!\2)(?!\4)([a-z])(\1*\2*\4*\6*)*$	4
^(?:0[1-9]|[12]\d|3[01])([\/.-])(?:0[1-9]|1[12])\1(?:19|20)\d\d$	1
sed -r 's/"<\?php echo CDN\(\); \?>([^"]*)"/"<\?php echo CDN\("\1"\); \?>\1"/g'	2
cat test.php | sed -r 's/"<?php echo CDN\(\); ?>(.*)"/"<?php echo CDN\(\1\); ?>\1"/g'	2
sed 's/"\([a-z]\)/``\1/'	1
s/"(.*?)"/``\1''/g	2
s/``(.*?)''/"\1"/g	2
s/\(\w\+\).*\(\w\+\)$/\2.\1/	1
sed -r 'G;:a;s/^\n//;s/^([^.\n]+)(\.*)(.*\n)/\3\2\1/;ta' file	2
sed -r ':s; s/( )? *\\ *$/\1/; Te; N; bs; :e; s/\n *//g' <<< "$foo"	1
s/( )? *\\ *$/\1/	1
(foo|bar|baz).*(?!\1)(foo|bar|baz)	1
(<)?(abc)(?(\1))>	1
sed -r 's/^(.{9})(.{10,20})(.*)$/\1\n\2\n\3/' | sed -e '2s/./X/g' -e 'N;N;s/\n//g'	2
echo 123456789012345678901234567890 | sed 's/\(.........\).........../\1XXXXXXXXXX/'	1
echo 123456789012345678901234567890 | sed -r 's/(.{9}).{11}/\1XXXXXXXXXX/'	1
$ echo "123456789012345678901234567890"  | sed "s/\(.\)/\1\n/g" | sed "10,20s/./X/" | tr -d "\n"	1
(.)\1{1}_\1{3}$/g	1
sed ':a;/.\{9\}X\{11\}/!s/\(.\{9\}X*\)./\1X/;ta' file	1
sed -r ':a;/.{9}X{11}/!s/(.{9}X*)./\1X/;ta' file	2
echo gmail.in@x1 | perl -pe 's/(\S+)@(.*)/\2@\1/'   # Ans: x1@gmail.in	2
"(\[(?>([^\]])*)\](.+?)\[/\1\])s"	4
([A-Z][A-Z0-9]*)\b[^>]*>(.*?)</\1>	2
s/(?=.{70,})(.{0,70}(?:\r\n?|\n\r?)?)( )/\1\2\n /g	1
s/(?=.{70,})(.{0,70}\n?)( )/\1\2\n /g	1
/(?<!X)([oa])/X\1/	1
^([^<]*<([^>]*)>[^<]*</\2>)*[^<]Your Text	3
/<([a-z]+?)>([\s\S]*?)(?!<\/\1>)/g	2
echo *.gz | sed -r 's/^([^.]*)(\.gz){2,}$/mv -v & \1\2/e'	2
:%s/\([^,]\+\)/"\1"/g	1
find . -iname '*.gz.gz' -exec rename -n 's/(\.\w+)\1+$/$1/' {} +	2
Page (\d*) of \1	2
Page (\d*) of \1(?=\D|\Z)	2
Page (\d+) of \1(?=\D)	2
sed -rn 's/<title>(.*)</title>/\1/p' input.file	2
sed -n 's/<title>\(.*\)</title>/\1/p' input.file	1
/^\(.*:\)*\(.*\)$/\2/	1
echo ':57A:/19000019 SOMEMORETEXT' | sed -e 's/^\(.*:\)*\(.*\)$/\2/'	1
<(ol|ul)( )?>.*</( )?\1>	1
<(ol|ul)\b[^>]*>(.*?)</\1>	2
sed -r '/drawable/{h;s/\b[A-Z]/\l&/g;s/\B[A-Z]/_\l&/g;G;s/.*(".*").*\n(.*)".*"/\2\1/}' file	2
sed '/drawable/{s/"[^"]*"/\n&/g;h;s/[^"\n]*\(\n"[^"]*"\)[^"\n]*/\1/g;s/[A-Z]/_/g;H;g;:a;s/\n"[^"]*"\(.*\n\)\n\("[^"]*"\)/\2\1/;ta;s/\n//}' file	1
sed 's/.*(REGEX).*/\1/'	1
^((.)(?1)\2|.?)$	1
([a-z])([a-z])\2\1	1
(?!([a-z])([a-z])\2\1)	4
^((?!([a-z])([a-z])\3\2).)+$	4
^((?!(\S)(\S)\3\2).)+$	4
sed -r '/\bget\.\S+/{s//\n&\n/g;s/[^\n]*\n([^\n]*)\n[^\n]*/\1 /g;s/ $//}' file	2
(.)\1+	1
(.)\1+	1
sed -n '1!N; s/^INBOUND>>>>>.*\n.*from \([0-9.]*\).* to \([0-9.]*\).*/\1 \2/p'	1
sed -n '1!N; s/^INBOUND>>>>>.*\n.*from \([0-9.]*\).* to \([0-9.]*\).*\n.*, Message type: \([A-Z_]*\).*/\1 \2/p'	1
sed -n '1!N; s/^INBOUND>>>>>.*\n.*from \([0-9.]*\).* to \([0-9.]*\).*\n.*, Message type:\([A-Z_]*\).*/\1 \2/p'	1
sed -r 's/.*from ([0-9.:]*) to ([0-9.:]*).*Message type: ([A-Z_]*).*/\1 \2 \3/'	2
~<a.+?href=(["'])(.+?)\1.*?>.*?</a>~is	2
M-x replace-regexp RET \_<\(?:[a-z0-9]\|\s_\)+\([A-Z]\) RET \,(downcase \1)	4
url\\(('|\")(.*?)\\1\\)	4
\\(('|\")(.*?)\\1\\)	4
:%s:\v(^[^']*'[^']*)':\1 ':	2
sed -i 's/\(^\s*hello_world \)(.*)/\1hello_world (1.2.0.456)/' test.txt	2
sed -i 's/\(^\s*\)phoenix_utils (.*)/\1phoenix_utils (1.0.0.28583)/' test.txt	2
sed -i -e 's/^\([[:blank:]]*hello_world \).*/\1(1.0.0.28583)/' YourFile	1
(["'])([^'"]+)\1\s*\|\s*i18n\b	2
(["'])(\w+)\1\s*\|\s*i18n\b	2
sed -n -r '/\b([^ ]+) \1\b/s/^.*\b([^ ]+) \1\b/\1:&/p'	2
\b(\w+) \1\b	2
([^i])\1{1,}|(i){4,}	1
([^i])\1+|(i){4,}	1
([^i])\1+|(i){4,}	1
^\(.\).*\1$	1
^(x|y).*\1$	1
^([xy])[xy]*\1$|^[xy]$	1
$line =~ s/ ( ["'] ) .*? \1 //xg;	1
\[([^\]]*?)\](.*)\[\/\1\]	2
\[([^\]]*?)\]([^]*)\[\/\1\]	2
\[([^\]]*?)\]([\s\S]*?)\[\/\1\]	2
$line =~ s/ ( ["'] ) .*? \1 //xg;	1
/\[([^\]]*?)\]([\s\S]*?)\[\/\1\]/ig	2
(.)(?!.*\1)	2
echo "\"text\": \"(2:Placename,Placename)\"" | sed -r 's/(\"text\": )\"\([[:digit:]]:[^0-9]+,([^0-9]+)\)\"/\1\"\2\"/g'	2
tr '\n' '~' < input.txt | sed -r 's~(.*)</div>.*~\1~g' | tr '~' '\n' > output.txt	2
sed 's,\(.*</div>\).*,\1,'	1
$ cat file | dos2unix | tr '\n' '\r' | sed 's,\(.*</div>\).*,\1,' | tr '\r' '\n' | unix2dos	1
^(?:(.)(?!\1))*$	3
(<b>)\1+|(<\/b>)\2+	1
(<[^>]+>)\\1+	2
(,,+?)\1+	2
^(,,)\1+$	1
^(,,,)\1+$	1
<img(?=[^>]*class\s*=\s*(["'])lazy\1)(?![^>]*data-original)[^>]*>	4
^(?!.*(.)\1)[abc]+$	4
(?<attributepair>[A-Za-z0-9_]+ (INT|(CHAR\([0-9]{1,3}\))|DEC))(, \k<attributepair>)*	3
([A-Za-z0-9_]+ (INT|(CHAR\([0-9]{1,3}\))|DEC))(, \1)*	3
([A-Za-z0-9_]+ (INT|(CHAR\([0-9]{1,3}\))|DEC))(, \1)*	3
#rx"(.*)\\1"	2
"(.*)\\1"	2
(.*)\1	2
sed  's/^\(.\)/\U\1/' input > output	1
sed 's/^\(.\)\([^ ]* \)\(.\)/\U\1\E\2\U\3/' input > output	1
sed -r 's/^(.)([^ ]* )(.)/\U\1\E\2\U\3/' input > output	2
%s/\(.*\)(\(\s*\)!\(\w\+\))/\1(\3 == false)/gc	2
sed -e "s/^\([^']*\)$/\L\1/" -e "s/\([^']*\)\('[^']*'\)/\L\1\E\2/g" -e "s/\('[^']*\)$/\L\1/" file	1
sed -e "s/^\([^']*\)$/\L\1/" -e "s/\([^']*\)\('[^']*'\)/\L\1\E\2/g" -e "s/\('[^']*\)$/\L\1/" file	1
sed -e "s/^\([^']*\)$/\L\1/" -e "s/\([^']*\)\('[^']*'\)/\L\1\E\2/g" -e "s/\('[^']*\)$/\L\1/" file	1
:%s/\<if(\zs!\(\k\+\)\ze)/\1 == false/c	1
:%s/!\([a-z0-9]\+\)/\1 == false/gc	1
cat file1.txt | egrep -vi "^(.*)(.{3,})(.*)\2(.*)$" > file2.txt	2
cat input.txt | egrep -vi "(.).*\1.*\1.*\1"	1
sed 's/v\([0-9]*\)\.\([0-9]*\)-.*-\([0-9]*\)-\(.*\)/\1 \2 \3 \4/g'	1
sed 's/v\([0-9]*\)\.\([0-9]*\)-\([^-]*-\)*\([0-9]*\)-\(.*\)/\1 \2 \4 \5/g'	1
background-image\s*?\:\s*?(url\(\s*?(['"])?\s*?(URL)\s*?(\2)?\s*?\)([,]?))+	3
cat dfsample.txt | awk '/@/' | sed -E 's/.*([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}).*/\1/g'	1
sed -En '/@/{s/.*([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}).*/\1/p;}' inputfile	1
sed -nr 's,^//[^@/]*@([^/]*)/.*,\1,p'	2
sed -n 's,^//[^@/]*@\([^/]*\)/.*,\1,p'	1
sed -n "s/[^/]*\(\/[a-z]*\).*/\1/p"	1
sed -n "s/.*\(\/.*\/\).*/\1/p	1
sed -n 's|/\([^/]*\)/.*|\1|p'	1
sed -n 's/[^\/]*\(\/[^\/]*\/\).*/\1/p' file	1
echo "608__aac(3)-Ik__aac(3)-Ik__1927" | sed 's/.*\?__\(.*?\)__.*/\1/g'	1
sed -r ':a;/^[^>]/{$!N;s/\n([^>])/\1/;ta}' inputfile	1
(?=(?P<aux1>.*?))(?P=aux1)PATTERN	2
^(?=(?P<aux1>(?:[^P]|P(?!ATTERN))*))(?P=aux1)PATTERN	2
echo $line | sed -e 's/\(myword.*\)\(,\)$/\2/g'	1
sed -e '/,$/{s/\( myword.*\)\(,\)$/\2/; ba}' -e 's/\( myword.*\)//' -e :a inputfile	1
sed 's/\(\foo\).*\(\var\)/\U\1\2/' testfile.txt	1
sed 's/\(foo \)\(.*\)\( var\)/\1\U\2\E\3/' file	1
/<([a-z]+?)>[\s\S]*?<\/\1>/g	2
/<([a-z]+?)>([\s\S]*?)(<\/\1>)/g	2
width=("|'|)(\S*)\1	2
cat sample.txt | sed -n 's/\(\/namespace\/media\/.*-sync.xml\)/\1/p'	1
cat sample.txt | sed -n ’s/(\/namespace\/media\/.*-sync.xml)/\1/p’	2
cat sample.txt | sed 's/.*\(\/namespace\/media\/.*-sync.xml\).*/\1/g'	1
sed 's/.*href="\([^"]*\)".*/\1/' file	1
sed 's/ myword.*\([^,]\|\(,\)\)$/\2/' file	1
^(?!.*?(a|c|e|g|i).*?\1)[acegi]+$	4
^(?!.*?([aceg]).*?\1)(?!.*?i.*?i.*?i)[acegi]+$	4
sed -ri 's/^<div class="line" data-line-mode="verse"><span class="speaker"[^>]*>([^<]*)<\/span>[ ]*(.*)[ ]*$/<p class="psi"><font size="-1" color="green"><b>\U\1<\/b>:<\/font><br>\n\2<br>/' "$f"	2
[...] WHERE REGEXP_LIKE(field, '(\d+?)\1')	2
[...] WHERE REGEXP_LIKE(field, '^(\d+?)\1$')	2
sed -rne "s/.*([0|1]\.[0-9]{0,2})/\1/p"	1
echo '> 53.21  ' | sed -n 's/^ *> *\([0-9][.0-9]*\) *$/\1/p'	1
grep -i -o '<a[^>]\+href[ ]*=[ \t]*"\(ht\|f\)tps\?:[^"]\+"' | sed -e 's/^.*"\([^"]\+\)".*$/\1/g'	1
(<(h\d)>.*?<\/\2>)[\r\n]([^\r\n<]+)	2
sed -r 's/(.*) /\1-/g' inputfile	2
sed -nr '0~4{s/.*\b([0-9]{10})\b.*/\1/p}' inputfile	1
sed ':0 /<\/Transaction>$/!N;s/\(^<Transaction>.*\)\n/\1/;t0'	1
sed -n 's/\([^,]*\),*/\1/p' example.csv	1
sed -n 's/\([^,]*\).*/\1/p' example.csv	1
sed -n 's/\([^,]*\),*$/\1/p' example.csv	1
(..+)\1	2
(.)(.)\2\1	1
^.(?!(.)(.)\2\1)	4
^..(?!(.)(.)\2\1)	4
^(?!.*(.)(.)\2\1)	4
sed -r ':a;$!{N;ba};s/(^|\n)(ab)(c)/\1\2xyz\3/;t;s/(^|\n)(def)/\n\1\2/' file	1
\n\s*<p>\s*<(strong|b)>(?:(?!</\1>).)+</\1>\s*</p>\s*\n	1
(\\S)\\1\\1	1
\b(([ab])(?!\2))+[ab]\b	3
\b((.)(?!\2))+.\b	3
sed -r 's: ([”]):\1:g' -i $1	1
perl -i -pe 's| ([”])|\1|smg' $1	1
\\b(\\w+)\\s+\\1\\b	2
(^|(.)(?!\2))(\d)\3{3}(?!\3)	4
^(?:[0-9]+:[0-9]+(?:( [KP])(?!\\1)){0,2}(?: \\+ |$))+$	1
^(?:[0-9]+:[0-9]+(?:( [KP])(?!\1)){0,2}(?: \+ |$))+$	1
(fill="#)(.)\2{5}	1
(fill="#)(.)\2(.)\3(.)\4	1
sed 's/\\pmatrix{\(.*\cr[ ]*\)}/\\begin{pmatrix}\1 \\end{pmatrix}/g' <$WORKING_FILE >$OUTPUT_FILE	1
(\d+).*\1	2
^(.+)[\r\n]+([\s\S]+)[\r\n]+\1	2
^(.+)\R([\s\S]+)\R\1	2
sed -r 's/\\cr/\n/g;s/\\(pmatrix)\{([^\n]*)\n([^\n]*)\n([^\n]*)\n\}/\\begin{\1}\2\\\\ \3\\\\ \4\\end{\1}/g;s/\n/\\cr/g' file	2
((?=(.*[^A-Za-z0-9])+)(?=(.*[A-Z])+)(?=(.*\d){4,})(?=.*[a-z])+)(?!=.*([\d])\\1\\1\\1\\1).{6,14}	2
package\.path\s?=\s?package\.path\s?\.\.\s?(['"]).*\1	1
package\.path\s?=\s?(['"]).*\1	1
(?<!'|\w|\s)(.)\1{3,}(?!\w|\s)	1
^(.+?) ?(?>(?:\1| )+)$	2
\\b\\w*?(\\w{2})\\w*?\\1\\w*?\\b on <b>'tatarak'</b>	1
\\b(\\w+)\\1\\b	2
\\b(\\w+) \\1	2
\\b(\\w+) \\1\\b	2
\\b(\\w+)\\1\\b	2
\\b(\\w+) \\1	2
\\b(\\w+) \\1\\b	2
cat (file) | sed 's/\([^\\]\)\\0 /\1 /g'	1
~(?<!@)((?:@(?=[^=]*(\2?+=)[^-]*(\3?+-)[^/]*(\4?+/)))+)(?!@)(?=[^=]*\2(?!=)[^-]*\3(?!-)[^/]*\4(?!/))~	4
( (?(2)\2) = )	4
sed -e 's/\([^\\]\)\\0[[:space:]]/\1/g' YourFile	1
sed -n 's/.*src="\([^"]*\)".*/\1/p' file	1
echo "feature/XXX-9999-SomeOtherText" | sed 's/.*\([[:alpha:]]\{3\}-[[:digit:]]\{4\}\).*/\1/'	1
sed 's#\(^\|.*/\)\([a-Z0-9]\+-[0-9]\+\).*#\2#g; /[a-zA-Z0-9]\+-[0-9]\+/!s#.*##g' yourfile	1
tr '\n' '~' < testfile | sed -r 's/(.*)\*\*\*.*/\1/g' | tr '~' '\n'	2
(\b\w+\b |\b\w+\b$)(?!\1)	2
(\b\w+\b|\b\w+\b$)(?!\1)	2
(?>(\w+) (?=\1\b))+	4
^(?>(\w{3,})(?=\1))+	4
^(?>(\w+) (?=\1\b))+	4
echo 'MD5 (./x y.jpg) = 93845ad8b6fb2797d9f1d7e0622e9270' | sed 's/MD5 (\(.*\)) = \(.*\)/\1 \2/'	2
sed 's/ /_/g; s/MD5_(\(.*\))_=_\(.*\)/\1 \2/'	2
(["']).*?\1	1
(["']).*?\1|\w(\w|\s)*(?=(,|$))	1
(?s)(var (example_\d++) = (\d++).*?SELECT_\d++)=\3	2
^(\w++)\h++(\w++)\h*+$(?=(?>\R.*+)*?\R(?>\1\h++\2|\2\h++\1)\h*+$)	2
(?!.*(.)\1(.)\2(.)\3)^\d{7,10}$	4
(?!.*(.)\1(.)\2(.)\3)^.*$	4
^((\d)\2){3}$	1
(\d)\1(?!\d{0,2}\1)(\d)\2(?!\2)(\d)\3	4
(?:(\d)\1(?!\1)){2}(\d)\2	4
(?>((\d)\2)(?!.*\1)){3}$	4
(?>(\d)(?!.*\1)\D*){10}	4
^\D*(?>(\d)(?!.*\1)\D*){10}$	4
([a-zA-Z])\1\1	1
([0-9a-zA-Z\_\\])\1{3,}	1
([0-9a-zA-Z\_\\])\1{3,}	1
(^(.+?)\s*?.*?)\R\2	2
grep -aRoP '([A-Z])([A-Z])([A-Z])?([A-Z])?([A-Z])?([A-Z])?[ \t]+\(?[ \t]*\1[a-z]* \2[a-z]*(?(3) \3[a-z]*)(?(4) \4[a-z]*)(?(5) \5[a-z]*)(?(6) \6[a-z]*)[ \t]*\)?' .	2
C-u C-s ^[^,]*,'\([^']*\)',.* M-% \1 RET !	1
^([a-z])\1*$	1
^\d*([a-z])(\d|\1)*$	3
^([a-z])\1{string.length-1}$	1
^(?i)([a-z])\1{string.length-1}$	1
^([0-9])\1{string.length-1}	1
^([A-Z])\1{string.length-1}$	1
((this\sis\smy\sstring\s)[^\1].*){4}this\sis\smy\sstring	4
(\b\w+\b)(.*)(\1)	2
egrep '(([a-zA-Z0-9])\1 )\1' file.txt	4
egrep '(aa )\1' file.txt	1
(([a-zA-Z0-9])\2 )\1	4
egrep '^[^0-9]*([0-9])[^0-9]*\1[^0-9]*\1[^0-9]*$'	1
(\d)[^\1]	1
sed -i.bak 's/\<nchar *( *\([0-9]*\) *)/char(\1)/g' file.sql	2
^(.+w+\.js)|(.+\w+\.min\.js)\1$	2
sed -r 'G;/(http[^\n]*)\n.*\1/d;s/\n.*//;H' file	2
\s*(\d+)~', '\1-\2	2
sed -i sqlfile -r -e "s/nchar\s*\(\s*([0-9]+)\s*\)/char(\1)/g"	2
(?=.*(~b=[^~]*))\1	2
sed -r 's/(\.jpg).*/\1/' file	1
sed 's/\(\.jpg\).*/\1/' file	1
sed -e 's/\([\u4E00-\u9fff]\)/\1 /g' <test_utf_sed.txt > test_out.txt	1
\b(?!(?:(?=(\d))((\d+)\3)\2*\1|(\d{3})\4{2}|(?=\d*(\d)(?!\5)(\d))(?:\5*\6\5*|\6*\5\6*))\b)\d{9}\b	4
sed -r 's/[^,]*,([^,]*,[^,]*)/\1/g'	2
:%s/\v(\w+)_(\w+)/\2_\1/g	2
:%s/\(\w\+\)_\(\w\+\)/\2_\1/g	1
((\$)\2+)	2
(?!\.)(.+?)\1+(?<=\D)	2
^[^\.](.+?)\1+$[\d]	2
(.+?)\1+	2
^[^\.](.+?)\1+\D$	2
(?!\.)(.+)(?<![0-9])\1+	2
sed -r 's/(^| )"/\1``/g; s/([$%])/\\\1/g' filename	1
sed -r 's/(^| )"/\1``/g;s/"/'"''"'\1/g' filename	1
sed 's/\(^\| \)"/\1``/g'` filename	1
sed -r 's/([$%])/\\\1/g' filename	1
sed -r 's/(^| )"/\1``/g' filename	1
^(\d)\1+$	1
^(?!(\d)\1+(?:-\1+){2}$)\d+(-\d+){2}$	4
sed -rn '/^E/{=;N;N;s/^(.{15}).*\n.*\n\s*/\1/p}' file | sed 'N;s/\n/ /'	1
"^(.)\\1*+.$"	1
if (dance.matches("(.)\\1*(!\\1)"))	1
(\w+) \1	2
<clearcase output> | sed -n "/Development streams:/,// s/[^ ]* *Views: *\([^_ ]*\)_.*/\1/p"	1
sed -n "/Development streams:/,$ s/[^ ]* *Views: *\([^_ ]*\)_.*/\1/p"	1
(.*za[sz]\s+=\s.*[sz])ª([sz]$)      \1a\2	2
([a-z]{3})\1	1
sed -r '/VIDIO/ s/.*(VIDIO\w*)/ALOGI("\1");   &/' inputfile	2
sed '/VIDIO/ s/.*\(VIDIO\w*\)/ALOGI("\1");   &/' inputfile	4
([a-z])(\s*)[a-z]?(\\2)(\\1)	2
sed 's/^.*=\([^=]*\)=.*=.*$/\1/'	1
(?:href|src)=(["'])(?!mailto|https).*?\1	1
(\S+)(?=\s\1)	2
sed -e 's/.*\(sign_...\).*\(sig4n_...\).*\(mu_..\).*$/\1 \2 \3/' list.txt	1
!~\s*([a-z0-9 ]+)\s*(;|\r|\r\n)([^~]*)~\s*\\1!i	2
^~ (\w+);\h*\R?\h*(\N+?)\h*(?=\R~ \1;)	2
%s/\v(.*), .*(\);)/\1\2/	2
:%s/^\(.*\)\(\n\1\)\+$/\1/ge	1
sed 's;\(^[^|]\+\)|.*\.\([^\.]\+\.[^\.]\+\.[^\.]\+\)|\([^|]\+$\);\1|\2|\3;' test.txt	1
<.+(class)=("|').+?\2.+?\1.+>	1
cat /tmp/cluster_concurrentnodedump.out.20140501.103855 | sed -n '/Starting inject/s/.*[Ii]nject \([0-9]*\).*/\1/p	1
tac /tmp/cluster_concurrentnodedump.out.20140501.103855 | sed -n '/Starting inject/s/.*[Ii]nject \([0-9]*\).*/\1/p;q'	1
(.+)(?=.*\1)	2
sed -re 's/([a-zA-Z.]), (Need code here)/\1\n\2/g' list.txt	1
sed -re 's/(, )?(Inc.|The|Ltd.?|LLC)//g' list.txt| tr ',' '\n' | sed -re 's/(.*)/\1/g' | sed -re '/^\s*$/d' | sed -re 's/(^ | $)//g'| awk '!seen[$0]++'	2
sed -re 's/(, )?(Inc.|The|Ltd.?|LLC)//g' list.txt| tr ',' '\n' | sed -re 's/(.*)/\1/g' | sed -re '/^\s*$/d' | sed -re 's/(^ | $)//g'	2
perl -pe 's/([^,]), (?!Inc|LLC|The|Ltd)/\1\n/g' list.txt	1
^[^b]*bar|b(?:[^a](?=[^a]*a(\1?+.)))+a\1r	4
(.*)\1	2
(\d+)\K[:](?=\g{-1})	4
(?<=start([12])).*?(?=end\1)	1
imap <silent> <leader>obscure-key-of-choice <Esc>:%s/\v(\d+)nm/\\SI{\1}{\\nano\\meter}/g<CR>``i	2
abc (.+)(?=\1+) xyz	2
(.+)(?=\1+)	2
\babc\b.*?(\w+)\W+(\1\b\W*)+.*?\bdef\b	3
(?<=\babc\b).*?(\w+)\W+(\1\b\W*)+.*?(?=\bdef\b)	3
^(.*?)(ABCD)*(?=ABCD(.*)$)(?=.*\1\3$)\3.*\3	2
sed 's|.* \([0-9]* [km]b/s\).*|\1|' <<< "$foo"	1
(.)\1+	1
"aaaabbbccccaaddddcfggghhhh".replaceAll("(.)\\1+","$1");	1
(.)\1+	1
(.)(?=\1)	1
String[] arr = "aaaabbbccccaaddddcfggghhhh".split("(.)(?!\\1)");	1
(?<=(.))(?!\\1|$)	1
(?<=(.))(?!\1|$)	1
(?i)(?<=\s*\1\.*)\s+(\w+)	2
(\b\w+\b)(?=.*?\1)	2
(?i)\b(\w+)\b.*\1	2
(?i)(?<=\b(\w+)\b.*)\1	2
(?i)\b(\w+)\b(?=.*\1)	2
^(.*?)(ABCD)*(?=ABCD(.*)$)(?=.*\1\3$)\3.*\3	2
sed -r 's/^(([^ ]+ ){8}ice \S+ )(\S+)/\1keep/' inputfile	2
^(?!.*(.)\1{2})[A-Z][a-zA-Z ]{3,29}$	4
(.)\1{2}	1
(^\w{2,})(?<=^\1(\n\w)*\n\1$)	2
(\w)\1\1	1
sed -r '/^((\S+\s+){8}ice\s+\S+\s)\S+/s//\1keep/' file	2
@(?<com> \g<command_name> ) \s* (?<args>\g<params> )? (?: (?<con> \g<content> ) @/ \g{com} )?	1
perl -pe 's/^(\S+\s+\S+\s+\S+).+experience\s([^\t]+?)\s+(\b[A-Z0-9]{2}[^\t]+?|(?:(?!\b[A-Z0-9]{2})[^\t])*)\s+\t\s+([^,]+,).+?(INR.+?PM)\s+.*/\1,\2,\3,\4\5/' file	2
sed 's/\(^ \w*\)/#\1/' file	1
:%s/\(^ \w*\)/#\1/g	1
:%s/^\(\w\+\)_\(\d\+\)\(\s*:\s*.*\)\n\(\w\+\)_\2\(\s*:\s*.*\),$/\2 : {\r    \1\3\r    \4\5\r},/	1
grepl('(name)\1','namename')	1
([aueo])\1	1
s/([aueo])\1/$1/g	1
$inputwoord =~ s/([aueo])\1/$1/g	1
echo '1,2,"12,345",x,y,"a,b"' | sed 's/"\([0-9]*\),\([0-9]*\)"/\1\2/g'	1
perl -pe 's/(?<= )([a-zA-ZüÜ]+)(?= )/{\1}/g' file	2
\b([#]{2})(.*)(\1)\b	2
sed 's/\([0-9]\{4\}\)-\([0-9]\{2\}\)-\([0-9]\{2\}\)/\1.\2.\3/g' file.csv	1
sed -r 's/([0-9]{4})-([0-9]{2})-([0-9]{2})/\1.\2.\3/g' file.csv	1
sed 's#\([0-9][0-9][0-9][0-9]\)-\([0-9][0-9]\)-\([0-9][0-9]\)#\1.\2.\3#g'	1
sed 's/\([0-9]\{4\}\)\-\([0-9]\{2\}\)\-\([0-9]\{2\}\)/\1.\2.\3/g' file	1
(["'])(.+?)(?=\1\.someMethod\(\))	2
:s/\$thing\['(.*?)'\]/$thing->\1/g	2
:s/\$thing\['\(.*?\)'\]/$thing->\1/g	1
:s/\$thing\['\(.*\)'\]/$thing->\1/g	1
<([A-Z][A-Z0-9]*)\b[^>]*>.*?</\1>	2
sed -r 's/^(.{10})[^.]*/\1/'	1
(\d{2})-\1-\d{2}\1	1
(\d{1,2})-\1-\d{0,}\1	1
<(\w+)[^"]*"(.*?)">(.*?)<\/\1>	2
sed '/\([^ ]* \)\{8\}msg\.yahoo\.com/s/\(\([^ ]* \)\{12\}\)/\1Social Media /' filename	1
^[a-zA-Z]+(?:(?!.*(\d)\1{2,}).)*$	4
{\[(\d+)\]\[(\d+)\]} {\[[expr {\1 * 8 + \2}]\]}	2
sed -r -e 's:^([a-zA-Z0-9 ]+).* ([0-9]+) GB.*:\1 \2:' < test.txt	2
sed '/ xml\:lang\=\"fa\"/ s/fa/Persian/g; / xml\:lang\=\"en\"/ s/en/English/g; s|^<\(.*\) .*="\(.*\)">\(.*\)<\(.*\)>|<\1_\2>\3<\4_\2>|g' file	1
echo "abcd/fgh/ijkl" | sed 's|[^/]*/\(.*\)|\1|'	1
sed -r 's/^\"([0-9]{4}-[0-9]{2}-[0-9]{2})(.)(.*)\"$/\"\1 \3\"/g' file	2
(?i)^\s?[a-z0-9]+(?:([/:_-])[a-z0-9]+(?:\1[a-z0-9]+)*)?\s*$	1
@"^\s?[a-zA-Z0-9]+(?:([/:_-])[a-zA-Z0-9]+(?:\1[a-zA-Z0-9]+)*)?\s*$"	1
^\s?[A-Za-z0-9]+(?:([:\/_-])[A-Za-z0-9]+(?:\1[A-Za-z0-9]+)*)?\s*$	1
".?|(..+?)\\1+"	2
<(title|head).*?>(.*?)<\/\1>	2
(?=(?<w>[a-z]{2}[A-Z]{1})\s)\k<w>	1
echo $(cat file) | sed -re 's/(2013-06)/@@@\1/g' | sed -re 's/@@@/\n/g'	1
[A-Za-z\d]+([-_\\/])[A-Za-z\d]+\1[A-Za-z\d]+\s*	1
sed -r 's/$/\nH,A,D,E,R,T,Y,B,D/;s/(.*)\n(.*)\1(.*)/\2\n\1\n\3/;h;s/[^,\n]//g;G;s/^(.*)\n.*\n(.*)\n.*\n(.*)\n.*/\1\3\2/' file	2
^\s*(.+?)\.Format\(.*\1.*\)	2
(\d*?\.\d*?\.\d*?\.\d*)(?!\1)	2
(\d*?\.\d*?\.\d*?\.\d*)(?!.*?\1)	2
^foo(?:\.(?<name>bar|baz|qux)=(?<value>\d+)(?!.*\k<name>))*.urr$	3
(\d)(\d)\s\d*(\1|\2)\d*(?!\3(\1|\2))\d*	4
(\d)(\d)\s\d*(\1|\2)\d*[\1\2&&[^\3]][\d]*	4
^(\d)(\d) (?=.*?\1)(?=.*?\2)\d+	2
(?is)(<a[^>]+href\s*=\s*(['"])([^'"]+)\2[^>]*>).*?</a>	4
sed -ri 's/(<\/a>[IVX]{1,6}\.[ ]{1,})( [a-z])/\1\u\2/g'	1
sed -ri '/<h3>/s/([A-Z ]*)<\/h3>/\L\1\END<\/h3>/;s/[[:graph:]]*/\u&/g'	2
%s/\v<\zs(\u)(\u*)\ze>/\1\L\2/g	2
(?s)<table(?:.*?(?R).*?|.*?)<\/table>(*SKIP)(*F)|style=(['"])[^'"]*\1	2
sed -nr 'H;g;/^(\S+\s).*\n\1[^\n]*$/!{s/.*\n//;h};$p' file	2
cat regex.test | sed -r 's/([0-9]{3})/\1\./g' | sed -r "s/^0*//" | sed -r "s/\.0*/\./g" | sed -r "s/\.\.test.com//" | sed -r "s/\.\./\.0\./g"	1
cat regex.test | sed -r 's/([0-9]{3})/\1\./g' | sed -r "s/^0*//" | sed -r "s/\.0*/\./g" | sed -r "s/\.\.test.com//" | sed -r "s/\.\./\.0\./g"	1
sed -r 's/([0-9]{3})/\1\./g;s/^0*//;s/\.0*/\./g;s/\.\.test.com//;s/\.\./\.0\./g' regex.test	1
sed -r 's/([0-9]{3})/\1\./g;s/(^|\.)0*([0-9]+)/\1\2/g;s/\.\.test.com//' regex.test	2
<regex.test cut --output-delimiter=. -c1-3,4-6,7-9,10-12 | sed -r 's/(^|\.)0{1,2}/\1/g'	1
<regex.test sed -r 's/\..*//; s/.{3}/&./g; s/(^|\.)0{1,2}/\1/g; s/\.$//'	1
<regex.test cut -d. -f1 | sed -r 's/.{3}/&./g; s/(^|\.)0{1,2}/\1/g; s/\.$//'	1
sed -r 's/^([0-9]{3})([0-9]{3})([0-9]{3})([0-9]{3}).*$/\1.\2.\3.\4/g; s/(^|\.)0*([0-9]+)/\1\2/g' file	2
sed -r 's/^([0-9]{3})([0-9]{3})([0-9]{3})([0-9]{3}).*$/\1.\2.\3.\4/g; s/0+([0-9]+\.?)/\1/g' file	2
perl -0pe 's/< (.*)\n> (.*)\n/\1.\2\n/g'	2
G;s/[><] //g;s/(.*)\n(.*)/\2\.\1/p;	2
sed '/</{h;ba};G;s/[><] //g;s/\(.*\)\n\(.*\)/\2\.\1/p;:a;d' file	1
sed -r '$!N;/^(< (Parent.*))\n> (Child.*)/{s//\2.\3\n\1/;P};D' file	2
sed -r '$!N;/^(< (.*))\n> (.*)/{s//\2.\3\n\1/;P};D' file	2
([?!.:,;]|\s)\1+	1
s/^.*Microsoft Office f.r Mac 2011 \([^ ]*\)-Update.*$/\1/	1
sed 's/\(Microsoft Office f.r Mac 2011 \([^ ]*\)-Update\).*$/\1/; s/^.*>//' infile	1
sed -rn 's/^.*[ ]+\">([^<]*)<.*[ ]+\">([^<]*)<.*[ ]+\">([^<]*)<.*[ ]+\">([^<]*)<.*$/\1/p' file.txt	2
sed -e :a -e 's/\(.*".*".*\) /\1|/;ta'	1
sed 'h;s/.*".*"//;s/ /|/g;x;s/\(.*".*"\).*/\1/;G;s/\n//'	1
^(?:(\w)(?!.*\1)){3}\w{0,2}$	2
^(?:[A-Z](?=[A-Z]*(\\1?+_)))*+[A-Z]+\\1?$	4
^(?:[A-Z](?=[A-Z]*(\\1?+_)))*\\1?_*$	4
^(?:[A-Z](?=[A-Z]*(\1?+-)))*[A-Z]+\1?$	4
^(\w)(?!.?\1)(\w)(?!\2)\w{1,3}$	4
sed -r 's/"/&\n/2;h;y/ /|/;G;s/.*\n(.*)\n(.*)\n.*/\2\1/' file	2
TEST (["'])(\\?.)*?\1|(=|AND|OR)	1
\bIgnoreFunction\b (["'])(\\?.)*?\1	1
^(?!(\d)\1{2}-(\d)\1{1}-(\d)\1{3})(?!123-45-6789)(?!987-65-4321)(?!0{3}-(\d)\1{1}-(\d)\1{2})(?!0{6}-(\d)\1{1}-(\d)\1{2})(?!\d{3}-0{2}-\d{4})(?!\d{3}-\d{2}-0{4})\d{9}$|\d{3}-\d{2}-\d{4}$	4
^(?!(\d)\1{8})(?!123456789)(?!987654321)(?!0{3})(?!6{3})(?!\d{3}0{2}\d{4})(?!\d{3}\d{2}0{4})\d{9}$|\d{3}-\d{2}-\d{4}$	4
/(\w+)\s*=\s*((["'])(.*?)\3|([^>\s]*)(?=\s|\/>))(?=[^<]*>)/g	2
^(?!(\d)\1{2}-?(\d)\1{1}-?(\d)\1{3})(?!123-?45-?6789)(?!987-?65-?4321)(?!0{3}-?(\d)\1{1}-?(\d)\1{2})(?!0{6}-?(\d)\1{1}-?(\d)\1{2})(?!\d{3}-?0{2}-?\d{4})(?!\d{3}-?\d{2}-?0{4})\d{3}-?\d{2}-?\d{4}$	4
/\(.*\)/\1/	1
authey=$(echo -n "$authkey" | sed -re 's/(\$|\@)/\\\1/g')	1
(?=([/!@i^*$a-z0-9_-]+))\2	2
<(title)>(.*?South Beach.*?)<\/\1>	2
<(\S*).*?(title).*?>(.*?South Beach.*?)<\/(\1|\2)>	2
sed -ri 's~^(.*Name, [0-9]+),(.*)$~\1\2~g' file	2
sed -E ':a; s/^(.{,13})\x0/\1/; ta'	1
sed -i -re 's!<span class="bold">(.*?)</span>!<strong>\1</strong>!g;s!<span class="italic">(.*?)</span>!<i>\1</i>!g' *.txt	2
awk '{ print gensub(/(\w+)/, "/\\1/", "g") }' file.txt	4
valueOfInterest=$(sed -n '/keyForValueIWant/ s/.*=>"\([^"]*\).*/\1/p' <<< "$input")	1
sed -n 's/\(^pattern...\).*/\1/p' some_file | awk '!seen[$0]++' > test1.txt	1
sed -n 's!.* \([a-zA-Z]* [A-Z]\{2,3\}/fd\).*!\1!p' input	1
sed -n 's!.* \([^ ]* [^ ]*/fd\).*!\1!p' input	1
sed -n 's#.* \([a-zA-Z]* [A-Z]\{2,3\}/fd\).*#\1#p' test_regqexp_keynote.txt	1
awk '/creative/{print $1;}' yourfile | sed -n '2s/[^.]*\.\(.*\)/\1/p'	1
IgnoreFunction\s*(['"])[^']*\1|AlsoIgnoreFunction\[[^\]]*\]|(ANDALSO|ORELSE)	1
((["|]).*\2)	2
([0-9]*),([0-9]*)(?>=\1)	2
(?<last_name>\w+) and \w+ \g{last_name}	2
sed -r 's/^(([^,]*,){5})([^,]+)[0-9]{4},(([^,]*,)*)([^,]+)[0-9]{4}(,[^,]*)$/\1\3\4\6\7/'	2
sed -i 's/\(\$VAR[1-9]\$\)/"\1"/g' file.txt	1
sed -n 's/^[^0-9]*\([0-9]\{1,\}\).*$/\1/p'	1
^((\d)\2)(?!\1)((\d)\4)	4
^((\d)\2)(?!\1)(\d)\3.*	4
^((\d)\2)(?!\1)((\d)\4)	4
^(\d+?)(?!\1)(\d+)	2
:%s/\(\w\+\) | \[ \(\w\+\) \]: \(\w\+\)/\1,[\2]:\3/gi	1
(\\w)(\\w)(\\1\\2){2,};	1
find . -name '*.py' -exec sed -ri "s/(^\s*)(print.*$)/#\1\2/g" {} \;	2
find . -name '*.py' -exec sed -Ei "s/\(^[[:space:]]*\)\(print.*$\)/#\1\2/g" {} \;	1
:%s/xid: \(.*\) id: \(.*\)/\1,\2/	1
pat = '(A|B)\4B\4'	1
pat= '(A|B)\4(or less)B\4(or less)'	1
^<([a-z]+)([^<]+)*(?:>(.*)<\/\1>|\s+\/>)$/	2
sed -r 's/(abc|def)_uvw/\1\n_uvw/g;s/([^\n])_uvw/\1xyz/g;s/\n//g' file	1
:%s/^\([^,]*\),/[\1]:/	1
:%s/\(SC[0-9]*\)/[\1]/gi	1
String extractedValue=yourString.replaceAll("(.*)([ '])(.*ClassLoader.*?)(\\2)(.*)", "$3");	2
(['"])((?:(?!\1).)*)\1	2
\( \(\1\) / \(\2\) \)	1
lsusb | grep ZTE | sed -r 's/ID ([0-9abcdef]{4})\:([0-9abcdef]{4})\:/\1/g'	1
lsusb | sed -n '/ZTE/ s/.*ID \([^ ]\+\).*/\1/p'	1
([ab])\1	1
([ab])\1	1
([ab])\1	1
([ab])\1	1
:%s/\(.*\/\).*/\1database_file/	1
sed '/The \(matching\) line/{s/line/lines/;s/$/\nThe new \1 line/}'	1
cat server.conf | sed -n 's/.*uuid = "\(.*\)",/\1/p'	1
cat server.conf | sed -n -e '/https_server/{N;s/.*uuid = "\([^ ]*\)",/\1/p}'	1
cat server.conf | sed -n -e '/https_server/{N;p}' | sed -n -e 's/.*uuid = "\([^ ]*\)",/\1/p'	1
cat server.conf | sed -n -e '/https_server/,/uuid/p' | sed -n -e 's/.*uuid = "\([^ ]*\)",/\1/p'	1
(?i)<(\w+).*?<\/\1[^>]*>|([a-z][a-z ]+)	2
cat server.conf | sed -n '/https_server/,//{//!p}' | sed -n 's/.*uuid = "\(.*\)",/\1/p'	1
echo 00000120001 | perl -pe 's/(?|^(.)|\G(?<=(.))\1)\1/1/g'	4
sed -rn '/https_server/{:a;n;/\)\s*$/b;s/.*uuid = "([^"]*)".*/\1/p;Ta;q}' server.conf	2
sed -rn '/https_server/{n;s/.*uuid = "([^"]*)".*/\1/p;q}' server.conf	2
%s/\(\d\)\/\S\+$/\1\/database_file/g	1
sed -r 's/([a-z]) ([A-Z])/\1_\2/g' file	1
sed 's/The \(.*\) line/The \1 lines\nThe new \1 line/'	1
sed 's/\(^.*VARCHAR\(1000\).*$\)/--\1/I' *.sql	1
^(.)\1{3,}	1
(?=expr1(.*)$)expr2(?=\1$)	2
sed -n -e '/^r[aiep]\{4,\}r$/{/\([aiep]\).*\1/!p;}' YourFile	1
(?:__\(|\G['"]\s*,\s*)(['"])\K.*?(?=(?<!\\)\1)	1
(?=(?<!\\)\1)	4
sed -n -e '/username/p' -e 's/^.*\(to=.*\.org>\).*$/\1/' /var/log/maillog	1
sed -n -e '/username/s/^.*\(to=.*\.org>\).*$/\1/p' /var/log/maillog	1
sed -n -e '/username/{ s/^.*\(to=.*\.org>\).*$/\1/; p; }' /var/log/maillog	1
^([A-Za-z]+)[^A-Za-z]+(\1[^A-Za-z]+)+	3
^(?=.*(\d{5})(?!.*(\1)))	4
(?s)~~~ START ([^~]*).*?END \1 ~~~	2
a++ => (?>a+) => (?=(a+))\1	2
^(([chars]).*(?!\1|\2)){n}$	4
\<(word1|word2)\>(?:[\t \S](?!\<\1\>))*?\<(?:word1|word2)\>	3
url\(()(.+?)\1\)	2
-(</TD>)([^\1]+)\1	2
(\*\*)([^\1]+)\1	2
(?sm)^(\w+)\.[^=]*(=.*?[\r\n]+)(.*)^(\w+)\.tag[^=]*=\s*\1[^\r\n]*	2
^\d{3}([-.])\d{3}\1\d{3,4}$	1
^([0-9a-z])\1+$	1
^([0-9a-z])\1+$	1
sed 's/^.*summary":"\([^"]*\)".*$/\1/'	1
/\d\s+\/\s+(.+)\s{12,}(\w.+?)(?=\s\s)\s{12,}(\w{0,2})\s+(\w{1,2}\s?\247\s?\d+(\-|\247|\w+)*)/	3
sed -r 's/(\"key\" : )\"[^,]*/\1"Newvalue"/g' file.json	1
(\w+)\s*:\s*(["']).+\2,?	2
\b\w*(\w{2})\w*\1	1
^(.*?)V\1$	2
sed -n 's:\("${foo}".*$\):\1:p' file.txt	1
sed -e 's/\\"/_____/g' -e 's/^.*summary":"\([^"]*\)".*$/\1/' -e 's/_____/"/g'	1
"(.\*)Gar_1 (.\*) \\1noGar".	1
"(.*?)Gar_1 (.*?) \\1noGar"	2
(?s)((\[[^\]]*\])Gar_1).*?\2noGar	2
%s:\(\w\|<[^>]\+>\|"\)\@<!\(#[^ ]\+\):<a>\2<\/a>:	1
:% subst :<[^>|a>]\+>\zs\(#[^<]\+\)\ze:<a>\1</a>:	1
REGEXP_REPLACE(info,'^[:space:]*[ABCDEFGHIJKLMNOPQRSTUVWXYZ]*[:space:]*([0-9]+)[:space:]*$','\1')	4
str.sub!(/(\d+) (\d+) (\d+)/,'\1.\2.\3').gsub!(/ /,',')	4
/<(\w+)>\s*(.*?)\s*<\/\1>/s	2
sed -e 's/^\([0-9]\{3\}\).\(.*\)/(\1)\2/g' yourfile	4
\b\w*(\w)\1\w*\b	1
([b-g])(x(\1±1))?	1
R([a-h]?x?[a-h][1-8]|([1-8])x?[a-h][2-7&&[^\1]])	4
^([a-h])[0-9]-(?!\1)[a-h]$	1
^([a-h])[0-9]-(?!\1)[a-h][0-9]$	1
ls PREFIX* | sed 's/PREFIX\(0[0-9]\)SUFFIX/mv & tmp\/PREFIX\1SUFFIX/' | sh	1
^0[ ]*[2-47-8][ ]*(?:[ ]*([0-9])(?![ ]*\1)){8}$	2
(?:[ ]*([0-9])(?![ ]*\1))	2
^0[2-47-8](?:([0-9])(?!\1)){8}$	1
^0[23478][\s\d]*\s*(\d)\s*(?!\1)(\d)\s*(?!\1|\2)(\d)\s*(?!\1|\2|\3)(\d)\s*(?!\1|\2|\3|\4)(\d)\s*(?!\1|\2|\3|\4|\5)(\d)\s*(?!.*\1|\2|\3|\4|\5|\6)(\d)\s*(?!\1|\2|\3|\4|\5|\6|\7)(\d)$	4
([bc])\1	1
(.) \1	1
(.) \1	1
(.+) \1	2
^.*?[^\/]\/([^\/]+)\/(?:\1\/[^\/]+\/([^\/.]+)|([^\/]+))	2
/\(\<\w\+\>\)\zs[ w]\+\1	1
/\<\(\w\+\)\>\(\_.\+\<\1\>\)\@=\c	1
(?<=B1541)(.{12})(.*?)\1(.*)	2
perl -pe 's/(p\.[A-Z][a-z]{1,}[0-9]{1,}[A-Z][a-z]{1,}.*?)p\.[A-Z][a-z]{1,}[0-9]{1,}[A-Z][a-z]{1,}/\1/' file	2
s/^([^_]+_).*\K\n(?=\1)/,/mg	2
perl -0777 -pe 's/^([^_]+_).*\K\n(?=\1)/,/mg; s/^([^_]*)\K/,$1/mg;' file	2
{% render controller(\1), \2%}	4
<([a-z][a-z0-9]*+)[^>]*>.*?</\\1>	2
sed -re 's/(\S+)\s+(.*)\s+(\S+)/Field1 = \1\nField2 = \2\nField3 = \3/g' file	2
String.matches("^([0-9])\1{9}$")	1
String.matches("^([0-9])\\1{9}$")	1
(["'])  \1|([ ]{2})	1
(["'])  \1(*SKIP)(*FAIL)|[ ]{2}	2
sed 's/.*"token":"\([^"]*\)".*/\1/'	1
your-command | sed 's/.*"token":"\([^"]*\)".*/\1/'	1
(["'])  \1|([-!$%^&*()_+|~=`{}\[\]:";'<>?,\w\/][ ]{2,})	2
<a [^>]*?title=(['"])([^\1]*?)\1	2
YourStreamOrFile | sed -n 's/.*"token":"\([a-f0-9]\{32\}\)".*/\1/p'	1
cat myfile.txt | sed -e 's:^\(.\{10\}\)\(.*\)$:\1^\1\2:'	1
sed -e 's:^\(.\{1,10\}\)\(.*\)$:\1^\1\2:'	1
(?=((?:[^"\\]+|\\.)*))\1	2
(pattern1)\1{2,}	1
\b([A-Z][a-z]*)\b(?:(?=.*\b(?=[a-z]+\b)(?i)\1\b)|(?<=\b(?=[a-z]+\b)(?i)\1\b.+))	2
/((["'])(?:\\[\s\S]|.)*?\2|\/(?![*\/])(?:\\.|\[(?:\\.|.)\]|.)*?\/)|\/\/.*?$|\/\*[\s\S]*?\*\//gm	2
/((["'])(?:\\[\s\S]|.)*?\2|(?:[^\w\s]|^)\s*\/(?![*\/])(?:\\.|\[(?:\\.|.)\]|.)*?\/(?=[gmiy]{0,4}\s*(?![*\/])(?:\W|$)))|\/\/.*?$|\/\*[\s\S]*?\*\//gm	2
sed '/^1/s/\(.\{4\}\)\(.\{9\}\)/\1123456789/' "$DEST/$FILE_NAME$DATE.txt"	1
sed -r  '/^1/s/(.{4})(.{9})/\1123456789/'	1
<a[^>]+title=(["'])(Google search|Microsoft home)\1	1
sed --posix 's/[^"]*"\([^"]*\)"[^"]*/\1,/g;s/\(.*\),/\1/' input.txt	1
(CK_\S*)\s.+\1	2
(?s)(CK_\S+\b)(?=.*\1)	2
(?:\s|^)(CK_\S*)(?=\s.*(?<=\s)\1(?:\s|$))	2
\b(CK_\S*)\b(?=.*\b\1\b)	2
\b(CK_\S*+)(?=.*\b\1\b)	2
(\b.+\b)\1	2
\b(\w+(?:\W+\w+)+?)\W+(?=\1\b)	2
sed 's/^(\([A-Z][A-Z]\))/\1/' filename	1
sed 's/(\([[:alpha:]][[:alpha:]]\))/\1/g'	1
curl "http://www.dailystar.com.lb/RSS.aspx?id=113" 2>/dev/null  | grep -E -o "<title>(.*)</title>" |sed -e 's,.*<title>\(.*\)</title>.*,\1,g' | less	1
curl "http://www.dailystar.com.lb/RSS.aspx?id=113" 2>/dev/null  | grep -E -o "<title>(.*?)</title>" |sed -e 's,.*<title>\(.*?\)</title>.*,\1,g' | less	1
<(?<open>[A-z0-9]{1,})>(?<content>.*?)<\1>	2
(['"])[^'"]*\1(*SKIP)(*F)|<[^>]*>	2
sed -n 's/^SocketAcceptPort=\([0-9]\+\).*/\1/p' yourfile	1
sed -En 's/^SocketAcceptPort=([0-9]+).*/\1/p' yourfile	2
([A-Za-z][A-Za-z0-9]*) = \1 \+ [A-Za-z][A-Za-z0-9]*	2
(\d)\1	1
sed -i -e 's/\(HOST_IP_ADDRESS=\).*/\1$(hostname -i)/' filenames-go-here	1
select * from tblPhone where PhoneNo like  '^([0-9a-z])\1+$'	1
(\baa\b).*?\1(*SKIP)(*F)|\bbb\w+\b	2
SELECT '22222' ~ '([1-9])\1{4}'	1
sed 's~#\(FILE.*/this/is/a/file/path/.*\)$~\1~' file	1
sed -r 's/([a-zA-Z])\.([a-zA-Z])/\1\t\2/g' file	1
sed -r 's/(\w)\.(\w)/\1\t\2/g' file	1
sed ':l s/\(number="[^" \t]*\)\s\s*/\1/g;tl' input	1
\s(__|\*\*)(?!\s)(.(?!\1))+(?!\s(?=\1))	3
(?=(a+))\1	2
echo "HEAD detached at 19d7ea9" | sed 's/HEAD\ detached\ at\ \(.\+\)/\1/'	1
sed -E 's/HEAD detached at (.+)/\1/'	2
s/\([^ ]*\) \(discovers <PLANET>\).*/\1 \2/g	1
sed -n 's/.* \([^ ]\{1,\} discovers <PLANET>\).*/\1/p'	1
echo "HEAD detached at 19d7ea9" | sed  's/HEAD detached at \(.*\)/\1/'	1
\d{3}([-\s\.])?\d{3}\1?\d{4}	1
^\d{3}([-\s\.]?)\d{3}\1\d{4}$	1
$ for i in *; do substring=`echo $i | sed -E 's/^(.).*$/\1/'`; echo "sub: $substring"; done	1
sed -E 's/^([a-zA-Z]).*/\1/'	1
sed -E -n 's/(.*)/\1/p'	2
sed -i -r "s/\(Copyright.*\)-[ ]*[0-9]+[ ]*\( Utkrist Adhikari\)/\1$END_DATE\2/" mycode.h	1
sed -r "s/^(Copyright 2002-)[0-9]{4}( Utkrist Adhikari)$/\1$END_DATE\2/" mycode.h	1
sed 's/[^0-9]*[0-9]: \(.*\)/\1/' | sed 's/[0-9]//g'	1
^([a-zA-Z]+(?:\s*|$))\1*	2
(?=[^:]+((?(1)\1)+:(\d+)))	4
(?(1)\1)	4
(?=[^:]+((?(1)\1):\d+))	4
\(?([0-9]{3})\)?([ .-]?)([0-9]{3})\2([0-9]{4})	1
(?sm)(^[^\r\n]*)[\r\n](?=.*^\1)	2
(?sm)(^[^\r\n]+$)(?!.*^\1$)	2
s/(^.*$)(\r?\n\1$)*/$1/gm;	3
^(.+)(\n(\1))*$	3
03[0-9]{2}-(?!0123456)(?!1234567)(?!2345678)(?!3456789)(?!4567890)(?!0987654)(?!9876543)(?!8765432)(?!7654321)(?!6543210)([0-9])(?!\1{6})[0-9]{6}	1
03[0-9]{2}-([0-9])(?!\1{6})[0-9]{6}	1
find . -type f -name '*.php' -exec sed -ir "s/_e\('(.+)', 'text_to_change'\);/_e('\1', 'some_text');/" {} \;	2
(.+)\1+	2
(.+?)(\1)+	3
(.+?)\1+	2
<([A-Z][A-Z0-9]*)\b[^>]*>.*</\1>	2
(?<=>)<([A-Z][A-Z0-9]*)\b[^>]*>.*<\/\1>	2
<([A-Z][A-Z0-9]*)\b[^<>]*>[^<]*</\1>	2
([a-z]) = (\d+)|\1 = \1 \+ \1	2
cat text4 | egrep '(Username:|Password:)' | sed 's/^.*<strong>\(.*\)<\/strong>.*$/\1/'	1
sed 's/\([a-Z]*\),.*/\1/' config >config.new	1
sed: 0602-404 Function s/\([a-Z]*\),.*/\1/ cannot be parsed.	1
's/\([^,]*\),.*/\1/'	1
\b(contact|demo|webinar|content).*?(\b(?!\1)(account)\b)	1
\b(contact\b|demo\b|webinar\b|content\b)(?:(?!\1).)*(?: account)\b	1
set new [regsub -all {(^|[^~])~([^~]|$)} $str {\1 \2}]	1
(\d+)(?!.*\1)	2
href[ ]*=[ ]*("|')(.+?)\1	2
/(<img>[^ <]*) /\1%20/	2
/<a\s[^>]*href=(\"??)(http[^\" >]*?)\\1[^>]*>(.*)<\/a>/siU	2
/<a\s[^>]*href=([\"\']??)([^\" >]*?)\\1[^>]*>(.*)<\/a>/siU	2
/<a\s[^>]*href\s*=\s*(\"??)([^\" >]*?)\\1[^>]*>(.*)<\/a>/siU	2
/<a\s[^>]*href=(\"??)([^\" >]*?)\\1[^>]*>(.*)<\/a>/siU	2
^(?!.*(.).*\1)[a-z]*$	4
echo "randomStringSEPrandomPATTERNrandomSEPrandom" | sed -n 's/^.*\(SEP.*PATTERN.*SEP\).*/\1/p'	1
(?s)(\S+) .*? end_\1	2
sed 's/[^<]*\(<.*\)/\1/' filename	1
(([a-z])(?!\g{-1})[a-z])\1{2}	4
(([a-z])((?!\2)[a-z]))\1{2}	4
eval "$(printf "sed "; echo "-e 's,@\("{a..z}{a..z}"\),\n\n\1,'")"	1
sed 'N;P;s/^innodb_//;tl;/.*\ninnodb_/{x;p;x;D};:l /^\(.\)\(.\).*\n\(innodb_\)\?\1\2/D;{x;p;x;D}' | …	1
sed 's/@\([a-u][a-z]\)/\n\n\1/' | ...	1
sed -i -r 's/(\w+)\s*\*(\w)/\1\* \2/g'	2
\"([0-9]{6})\" - \"\\1@\"	1
sed -r 's|"([0-9]{6})"|"\1@"|g' file	1
reqrep ^([^\ ]\*)\ /([-.0-9A-Za-z]\*)/([a-zA-Z]\*)/(.\*)  \1\ /\3-\2/\4	1
^([ABC])([123])(?!\1\2)[ABC][123]$	1
^(?!(.).{0,4}\1|.(.).{0,3}\2|..(.).?.?\3|...(.).?\4|....(.)\5)[a-f]{6}	4
^(([a-f])(?<!\2.*\2)){6}	2
sed 's/\(.......\):\(.*$\)/(\1) <s> \2 <\/s>/' tmp.dat	4
sed 's/\(.......\):\(.*$\)/<s>\L \2 \E<\/s> (\1)/' tmp.dat	4
(\w)\1+	1
[|]([*_@=])[^|]+\\1[|]	2
$(SolDir)..\..\ABC\ccc\1234\ccc_am_system;$(SolDir)..\..\ABC\ccc\1234\ccc_am_system\host;$(SolDir)..\..\ABC\ccc\1234\components\fds\ab_cdef_1.0\host;    $(SolDir)..\..\ABC\ccc\1234\somethingelse;	1
^\[(.+).*\1g:$	2
^(?!.*(\d)\1{5})[A-Z0-9]{9,15}$	4
\$(.[^\$;])*ccc\\1234(.[^\$;])*;	1
sed -r 's|(.*://)?([^/]*).*|\2|' file	2
sed 's#.*//\([^/]*\).*#\1#' <<<"$url"	1
puts "re is /#{re.to_s.gsub( /.*:(.*)\)/, '\1' )}/"	4
(["']?)([^'"].*?[^'"])\1	2
(["'])(?:\\.|.)*?\1	1
^(?=\\d{8,11}$)(?:(.)\\1*)$	1
1234567890|(\d)\1{9}	1
(\d)\1+\b	1
(?!(\d)\1+\b|1234567890)	4
^(?!(\d)\1+\b|1234567890)\d{10,}$	4
(?m)^(\S+).*\R(?s).*?\K\1	2
(['"])(?:(?!\1).)*or(?:(?!\1).)*\1(*SKIP)(*F)|\bor\b	2
^(\S+) (?=(?s:.)*(\1.*)).*	2
^(\S+) (?=(?s:.)*\1.*).*	2
(\D{3})\D{0,4}(OFF|SALE)\d{4}\1	1
([a-zA-Z]{3})[a-zA-Z]{0,4}(OFF|SALE)\d{4}\1	1
^(\D{3})(\D{0,4})(OFF|SALE)\d{4}(\1)$	1
(.)\1	1
/<a\s[^>]*href\s*=\s*(\"??)([^\" >]*?)\\1[^>]*>(.*)<\/a>/siU	2
sed -r -e 's#\"[ ]*\([0-9]+\)[ ]*\"#\1#g' file.csv	1
sed -r 's#\"[ ]*([0-9]+)[ ]*\"#\1#g' file.csv	2
sed 's#\"[ ]*\([0-9]\{1,\}\)[ ]*\"#\1#g' file.csv	1
s/(^|    )\*(   |$)/\1\2/g	1
^(?:a(?=a*(\1?+b)b*(\2?+c)))+\1\2$	4
(?:([-+0])(?!\2))?	4
^([-+0]?)(?!.?\1)(?:([-+0])(?!\2))?[-+0]?(?![-+0])	4
([-+0]?)(?!.?\1)	2
%s/^\@!\(,\)\?dan\(,\)\?/\2/ | %s/^dan,//	1
sed -r 's@([^\t])[*]@\1__0x2A__@g; s@[*]([^\t\r])@__0x2A__\1@g; s@[*]@@g; s@__0x2A__@*@g' file	1
sed -r 's@([^\t])[*]@\1\a@g; s@[*]([^\t\r])@\a\1@g; s@[*]@@g; s@\a@*@g' file	1
sed 's/\n\([0-9]{1,4}\)/ \1/g'	1
sed -ir 's:(#!/usr/bin/).*python.*:\1env python 3\n\n# Comment\n:'	1
(^[^=\n]+$)(?!.*^\1\s*=)	2
(^[^=\n]+$)(?!(?s).*^\1\s*=)	2
([a-z])[a-z]{1}\1	1
sed 's/.*username:\(.*\)@.*/\1/'	1
(.)\1	1
(.)\1	1
/<([^ \>]++) ?[^>]*+>.*?(?:<([^ \>]++) ?[^>]*+>.*?<\/ ?\2>|<[^ \/>]++ ?\/>).*?<\/ ?\1>/s	2
/<([^ \>]++) ?[^>]*+>(.*?(?:<([^ \>]++) ?[^>]*+>(?:[^<]*+|(?2))<\/ ?\3>|<[^ \/>]++ ?\/>).*?)<\/ ?\1>/s	2
/<[^ \/>]++ ?\/>|<([^ \>]++) ?[^>]*+>.*?<\/ ?\1>/s	2
/\d{4}([.\-/ ])\d{2}\1\d{2}/	1
(.)(?:(.)(?!.*\2))+\1	3
lynx http://pastebin.com/raw.php?i=qw47h4Yp -force_html -nonumbers -image_links -dump -source |grep http |gsed --regexp-extended "s/^.*[^\/][^\/]\/\/([^\/]+).*/\1/" |sort -u	2
sed "s/^.*\(\[${repoid}\].*?\[\).*/\1/" >~/trimed_repo	1
sed "s/^.*\(\[${repoid}\](.*?)\[\).*/\1/" >~/trimed_repo	2
sed "s/^.*\(\[${repoid}\].*\[\).*/\1/" >~/trimed_repo	1
sed -r s/([0-9][0-9]:[0-9][0-9])/\n\1/g	1
sed -nr 's/.*abc=([0-9])\.([0-9])\.([0-9]).*/\1\2\3/p' file	1
sed -nr 's/^abc=([0-9])\.([0-9])\.([0-9]).*/\1\2\3/p' file	1
sed -E 's/abc=|([0-9])\./\1/g' file	1
/(\d){7}( |\-|\(|\)|\/|\.)*(\1|\2)*/	3
echo FooBar.S02E03.foo | sed -r 's/(.*)\.S0*([0-9]{1,2})E0*([0-9]{1,2})\.(.*)/title:\1, season:\2, episode:\3, postfix:\4/'	2
s@typedef\s*([\w\s<>,:]*)\s(\w+)\s*;@using \2= \1;@g	2
/usr/bin/perl -p -i -e "s@typedef\s*([\w\s<>,:]*)\s(\w+)\s*;@using \2= \1;@g"  ./file.txt	2
/usr/bin/perl -p -i -e 's@typedef\s*([\w\s<>,:]*)\s(\w+)\s*;@using \2= \1;@g'  ./file.txt	2
find /hello -type f|xargs sed -i 's#\(account[.]\)oldomain\([.]com\)#\1newdomain\2#g'	1
("+)(.*?)\1	2
(</)(\2)([^>]*>)	4
'(((([A-Z])([0-9]))|(([0-9])([A-Z])))[a-z]\8\7)'	1
'(((([A-Z])([0-9]))|(([0-9])([A-Z])))[a-z]\5\4)'	1
([A-Z])([0-9])[a-z]\2\1|([0-9])([A-Z])[a-z]\4\3	1
\b(?=.{5})(?=(?:[A-Z]\d|\d[A-Z]))(.)(.)[a-z]\2\1\b	1
^Finished (\d+) of (?!\1$)\d+$	2
^Finished (\d+) of (?!\1)\d+$	2
gsub(";([^;]*;)\\1;", "\\1", z)	2
gsub("([^;]*;)\\1", "\\1", z)	2
gsub("([^;]*;)\\1;?", "\\1", z)	2
sed 's/\([0-9][0-9]*-[0-9][0-9]-[0-9][0-9] [0-2][0-9]:[0-5][0-9]:[0-5][0-9]\)\.[0-9]\{3\}/\1/g'	1
sed 's/\([0-9][0-9\- :]*\)\.[0-9]\{3\}/\1/g' < a.csv	1
sed 's/\([0-9][-0-9 :]*\)\.[0-9]\{3\}/\1/' < a.csv	1
sed -n '/myProg v/s/.*myProg v["FOO "]\([[:alnum:][:punct:]]*\).*/v\1/gp'	1
sed -n 's/.*myProg v\(FOO \)\?\([[:alnum:][:punct:]]*\).*/v\2/p'	1
([$@*&?]).*?\1(.*)	2
^(\d)(?!\1*$)\d*$	2
^(?!(?:(\d)\1+[ -]*)+$)\d[\d- ]+$	4
(([A-Z])[A-Z]{2}[a-z]\2[A-Z]{2})	1
^(?!(?:(\d)\1+[ -]*)+$)\d[\d- ]+$	4
sed 's/\(..\)/\1:/g;s/:$//' file	1
(abc)(?=\1)	1
\[lang:([a-z]{2})\]\R*(.*?)\R*\[endlang:\1\]	2
<(?<tag>\w*)\sclass=\"lent-editable\">(?<text>.*)</\k<tag>>	2
'@<(?:h[34])>(.+)</\1>@sU'	2
'@<(h[34])>(.+)</\1>@sU'	2
(?<=\((['"]))(.*?)\1	2
sed -r 's/(.*)([a-zA-Z0-9]{2}:[a-zA-Z0-9]{2}:[a-zA-Z0-9]{2}:[a-zA-Z0-9]{2}:[a-zA-Z0-9]{2}:[a-zA-Z0-9]{2})(.*)/\1\NEW_MAC_ADDRESS\3/g' file.txt	2
sed 's_^.*<a [^<>]* href="https*://[^/]*/\([^"?]*\).*$_\1_'	1
(\n([^\S\n]*)[^\s].*\s([^\s\(]+)\s*\(.*\)\s*\{\s*\n)(\s*)OLD\_LOG;((.*\s*\n)*?)(\s*return\s.*\r\n)?\2\}	2
\1\4NEW\_LOG\(\"\3\"\);\5\4END_LOG\(\);\r\n\7\2\}	1
sed '/^\[start\]/I{:a;x;/^\(.*\[stop\][^\n]*\).*/Is//\1/p;x;h;d};H;$ba;d' file	1
^(((?<!^),)?(apple|banana|mango)(?!.*\3))+$	3
sentence=$(curl -s http://www.fortunecookiemessage.com | grep -oP '(<div class=\"quote\").*(</div>)' | sed 's/.*link\">\(.*\)<\/a>.*/\1/')	1
curl -s http://www.fortunecookiemessage.com | grep -oP '(<div class=\"quote\").*(</div>)' | sed 's/.*link\">\(.*\)<\/a>.*/\1/'	1
(A)(B)(C)\1\2\3	1
sentence=$(curl -s http://www.fortunecookiemessage.com | grep -Eo '(<div class=\"quote\").*(</div>)' | sed 's/.*link\">\(.*\)<\/a>.*/\1/' | sed 's/<[^>]*>//g')	1
^\s*test_function\((['"])(.+?)\2\);?\s*$	2
^\s*test_function\((['"])([^'"]*)\1 *, *(['"])([^'"]*)\3\);?\s*$	2
test_function\(\s*(["'])[^\1]+?\1\s*,\s*(["'])[^\2]+?\2\s*\)	1
(\w)(?:(?!\1).)+(\1)	1
(\w)(.+?)(\1)	2
apple(,)\sorange\1	1
(a)[\1b]	1
^(.+): (.+)\r((?<=\1:) (.+)\r)*	3
^([[:alnum:]]+): (.+)\r((\1:) (.+)\r)*	3
^(?!(?:(\d)\1+[ -]*)+$)\d[\d- ]+$	4
^(?!(?:(\w)\1+[ -]*)+$)\w[\w -]+$	4
^(?:(?!##).)*(##[^#]*##)(?!.*?\1).*$	2
(T\1 + T\1) * T\1 + T\1 + T\1	4
^(.+?){2,}\1$	2
\b(.+)\1.*?\b	2
\b(.{3})\1.*?\b	1
regexp -all -inline {(..)\1} 0c1f1f03035d	1
(?=.*=\s*([a-z]+))\1_(\w+) \s+ = \s+ \w+_\d+	2
\[(.*?)\](.*?)\[\/\1\]	2
\[(cell)\](.*?)\[\/\1\]	2
^(?!ß)(?!.*(\s\-))(?!(.)\1{2})(?!.*\s{2})(?!.*\'{2})(?!.*\-{2})[a-zA-ZßöüäÜÖÄ\s\-\']{2,30}(?<![\s\-])$	2
^(?=.{2,30}$)(?!(.)\1{2})[a-zA-ZöüäÜÖÄ]+(?:[-'\s][a-zA-ZßöüäÜÖÄ]+)*$	1
./clean_txt.sh s/.*\(my_choices.*gz\)/\1p	1
sed -i".$BUILD" -e "s/\(version:[   ]*\)'[0-9. ]*-dev'/\1'$TAG$SUFFIX'/" -e "s/\(build:[    ]*\)'%build%'/\1'$BUILD'/" "$COREFILE"	1
sed -i".$BUILD" -e "s/\(version:[   ]*\)'[0-9. ]*-dev'/\1'$TAG$SUFFIX'/" -e "s/\(build:[    ]*\)'%build%'/\1'$BUILD'/" "$COREFILE"	1
regexp_replace(str,'"([^"]{1,32})[^"]*"','"\1"')	4
sed -r 's/(\[)(?=\[.*?)/\1\r\n/g' file.txt	2
/<(\w+)\b.*?>.*?<\/\1>(*SKIP)(*F)|>/gs	2
99_\w{3}_(A|B)_((X|(?>YZ))(0*[1-9][0-9]?)_(FOO|BAR) \3Y?-(\b0?20(1[4-9]|[2-9][0-9])\b)-\b0?((?:[1-9]|1[0-2])|(?:[4]|1[0]))\b$)	2
sed -ir 's/\bXYZ\$([^[:alnum:]]|$)/xyz$\1/g' file	1
sed -r '15s!@[^/]+(/[^/]+/[^.@]+@[^.]+).*$!\1/!g' $file	2
sed -E 's/(.*?\..*?)\/(.*?)@\1/\1\/\2/g'	2
sed -E 's/(\w+@\w+)[\w\.]*/\1/g'	2
(.*?\..*?)\/(.*?)@\1	2
perl -pe 's/(.*?\..*?)\/(.*?)@\1/\1\/\2/g' -i filename.ext	2
^(.)(.)(?:(.)(?:(.).?\4?)?\3?)?\2\1$	1
^(.)(.)(?:(.).?\3?)?\2\1$	1
<(.*?)\s*.*?>\s*<\/\1>	2
sed -r -e 's/(^|\|)\s+/\1/g' -e 's/\s+$//' filename	1
(['"])(?:(?!\1|\\).|\\.)*\1|\/\/[^\n]*(?:\n|$)|\/\*(?:[^*]|\*(?!\/))*\*\/|(getMessage\(\))	1
<(Attribute)(\b[^>]*>)([^<>]*)(?=<\/\1)	2
^[1-9](?:\d{0,2}(?:([,.])\d{3})*|\d+)(?:(?!\1)[,.]\d+)?$	1
(.)\1	1
(\w)\1{1,}	1
style=(['"])(?:(?!\1).)*\1	1
(@\w+)(?![\s\S]*\1)	2
sed '/hardware/{N;s/\n/ /}' < list | sort -k5 | uniq -f4 | sed -r 's/ *hardware ([^ ]*) ([^;]*); *.*"(.*\-(.*))";/host \3 {\n\thardware \1 \2;\n\tfixed-address 192.178.10.\4;\n}/'	2
#<a[^>]+href\s*=\s*(["\'])(.*?)\1[^>]*>((?:(?!</a).)*?)Domain#msi	2
([0-4]?\d{1,3}) To:\1	1
(\d)(?=\d*\1\d)	2
(\d)(?!\d*\1)	2
\A(?=\d{11}\z)(?:(\d)(?!\d*\1\d))*(\d)(?=\d*\2\d)(?:(\d)(?!\d*\3\d))+\d\z	4
\A(?=\d*(\d)(?=\d*\1\d))(?!\d*(\d)(?=\d*\2\d)\d*(\d)(?=\d*\3\d))\d{11}\z	4
(\d)(?=\d*\1)	2
sed -i.bak -r 's/^(.*?require\()require\((.*)\)/\1\2/' file	2
sed -ri ':a;s/^( *)\t/\1    /;ta' file	2
^.*<a.*href=(['"])[^'"]*\1>[^<]*<\/a>	1
<a .*?\bhref=\(['"]\)[^'"]*\1.*?>.*?</a>	1
"<a .*?\\bhref=\\(['\"]\\)\\([^'\"]*\\)\\1.*?>\\(.*?\\)</a>"	2
"<a .*?\\bhref=\\(['\"]\\)[^'\"]*\\1.*?>.*?</a>"	1
"\\d{3}([.-])?\\d{3}\\1?\\d{4}|\\(\\d{3}\\)([.-])?\\d{3}\\2?\\d{4}"	1
\d{3}([.-])?\d{3}\1?\d{4}|\(\d{3}\)([.-])?\d{3}\2?\d{4}	1
s/\+?[78](9\d{9})/\1/	1
s/^1\([0-9]\{10\}\)$/\1/	1
(\w).*(?=\w)(?!\1)	1
^\w*?(\w)(?!\1|$)\w*$	1
sed -n 's/\(hel\)lo/\1/p' <<<$'hell\nhello\nhelen'	1
\(?([0-9]{2,5})\)?([ .-]?)([0-9]{2,5})\2([0-9]{2,5})	1
\(?([0-9]{2,5})\)?([ .-]?)([0-9]{2,5})\2([0-9]{2,5})	1
sed 's|\. *|.\n|g' 's|\(Mrs?\.\)\n|\1 |g' myfile.txt	1
sed 's|^\([^ ]*\) \([^,]*,\)\{7\}\([^,]*\),.*|\1 \3|' Record1.txt	1
sed -i 's/^\(PIXEL_SCALE\s*\)\([0-9]*\.[0-9]*\)/\10.3/' filename.txt	1
subprocess.call("sed -i 's/^\(PIXEL_SCALE\s*\)\([0-9]*\.[0-9]*\)/\10.3/' filename.txt", shell=True)	1
's/(PIXEL_SCALE\s*)[0-9]+[0-9]+/\10.3/'	2
sed -ne '/./{H;$!d;}' -e 'x;/Address/,/^$/!d' -e 's/\n/#/g;s/#Address#//' -e 's/\(.*\)#\(.*\)#\(.*\)/Address1=\1\nAddress2=\2\n\3\n/;s/\(.*\)#\(.*\)/Address1=\1\n\2\n/;s/\([a-Z]*\)\s\([a-Z][a-Z]\)\s\([0-9]\{5\}\)/City=\1\nState=\2\nZip=\3/p' addr.txt	1
([a-z0-9]{2})\1\1	1
(.{2,})\1+	1
\1 - \2\n\4 - \5 (\3)\n\7 - \8 (\6)	4
Descendants().First(x => x.Name.LocalName == \1).Value	1
%s/_\([a-zA-Z]\)/\u\1/g	1
sed -E "s/.*kamilla(\d{8}).*/\1/g" input.txt >> output.txt	1
"(.*?)\(\1\)":(.*\/[a-zA-Z0-9]+)(?=\?|\,|\.|$)	2
(?=(.*?play))\1\s*(\w+)	2
([A-Za-z0-9])\1\1+	1
([A-Za-z0-9])(\1{2,})?	1
^(?:A()|B()|C()){3}\1\2\3$	1
s/(\d\d\d-\d\d).*(\..+$)/\1\2/	2
(..*?)(?=\1(?=\1*$)|$)	2
(..*?)(?=\1*$)	2
<(div)>\[([^\]]*)\]<\/\1>	2
sed -r "s/in ([0-9]+) (day(s)?)' time/| \1 \2 |/g" file	2
sed -i -e 's|\(</ANON>\)\([^[:space:]]\)|\1 \2|g' file	1
(\[\[NOTE\]\])(.*?)\1	2
\[{2,2}(NOTE)\]{2,2}(.*?)(?=\[{2,2}\/\1\]{2,2})	2
\[{2,2}(NOTE)\]{2,2}(.*?)\[{2,2}\/\1\]{2,2}	2
(\[{2,2}NOTE\]{2,2})(.*?)(?=\1)	2
(19|2\d)?\d\d([-/.])(0?[1-9]|1[012])\2(0?[1-9]|[12]\d|3[01]):	1
(?!.*([ACD]).*\1)	4
(?m)^(?!.*([ACD]).*\1)(?!(?>.*?B){3})(?>[A-D] ){2}[A-D]$	2
sed 's/^\(\s\+\)<type>/\1<myAddedTag \/>\n&/g' yourfile	1
"<([a-zA-Z]+)>[a-z]</\\1>"	2
R"(<([a-zA-Z]+)>[a-z]+</\1>)"	4
"<([a-zA-Z]+)>[a-z]+</\\1>"	2
^(?:(.)(?!\1))*$	3
(?!.*?([a-z])\1)^.*$	4
sed 's/^\(.\)\(.+\)\(.\)$/\3\2\1/' input.txt	1
sed 's/\(.\)\(.+\)\(.\)/\3\2\1/' input.txt	1
sed 's/^\(.\)\(.\+\)\(.\)$/\3\2\1/' input.txt	1
sed -E 's/(.)(.+)(.)/\3\2\1/' input.txt	2
echo ad | sed 's/^\(.\)\(.*\)\(.\)$/\3\2\1/'	1
abcd | sed 's/^\(.\)\(.*\)\(.\)$/\3\2\1/'	1
echo ad | sed 's/^\(.\)\(..*\)\(.\)$/\3\2\1/'	1
s/\v,(\d+)/\1/g	2
(?=(something+))\1	2
:0,$ s/0\+\([0-9a-f]\)/\1/	1
echo 'are' | sed 's/\(.\)\(.*\)\(.\)/\3\2\1/'	1
sed -i "s/\(\$rcmail_config\['default_host'\] = \)'';/\1'localhost';/g" file	1
echo "1969 years 12 months 25 days 19 hours 38 minutes 24 seconds since last release" | sed -r "s/^([0-9]+).*/\1/"	2
echo "1969 years 12 months 25 days 19 hours 38 minutes 24 seconds since last release" | sed -r 's/.* ([0-9]+) months.*/\1/'	2
$re = '~<(\w+)[^>]*>(?>[\p{Z}\p{C}]|<br\b[^>]*>|&(?:(?:nb|thin|zwnb|e[nm])sp|zwnj|#xfeff|#xa0|#160|#65279);|(?R))*</\1>~iu';	2
$re = '~<(\w+)[^>]*>[\p{Z}\p{C}]*</\1>~u';	2
$re = '~<(\w+)[^>]*>(?>[\p{Z}\p{C}]|<br\b[^>]*>|&(?:(?:nb|thin|zwnb|e[nm])sp|zwnj|#xfeff|#xa0|#160|#65279);)*</\1>~iu'	2
$re = '~<(\w+)[^>]*>(?>[\p{Z}\p{C}]|<br\b[^>]*>)*</\1>~ui';	2
$ sed -E -e 's/^([0-9]{2})-/\1:/' -e 's/\t([0-9]{2})-/\t\1:/g' file	1
$ sed -E -e 's/^([0-9]{2})-/\1:/' -e 's/\t([0-9]{2})-/\t\1:/g' file	1
s/^([0-9]{2})-/\1:/	1
s/\t([0-9]{2})-/\t\1:/g	1
perl -pe 's/\b(\d{2})-/\1:/g' file	1
sed -r 's/(^|[[:space:]])([0-9]{2})-/\1\2:/g' file	1
(?>expression)    <=>    (?=(expression))\1	1
bear(?=((?:[^cd]+|c+(?!at)|d+(?!og))*))\1bar	2
(["'])(?:\\.|(?!\1).)*\1	1
^(?!.*([A-Za-z0-9])\1{3})[A-Za-z0-9._%+-]{3,}\@[A-Za-z0-9-]{3,}\.[A-Za-z]{2,4}$	4
(?!.*([A-Za-z0-9])\1{3})	4
^[A-Za-z0-9._%+-]{3,}\@[A-Za-z0-9-]{3,}\.(?!([A-Za-z0-9])\1{3})[A-Za-z]{2,4}$	4
^[A-Za-z0-9._%+-]{3,}\@[A-Za-z0-9.-]{3,}\.(?:(?!(.)\1{3})[a-zA-Z]){2,4}$	4
sed -i.bak 's/\({{\)[[:alnum:]]\+\(-exfs-value}}\)/\1xyz\2/g' file1 file2 ...	1
sed -n '1,/^\(USE\|use\)/{/^\(USE\|use\)/{/^\(USE\|use\)\s\+\([a-zA-Z0-9]*\);/\1/p }}' 001.sql	1
sed -n 's/^USE \([[:alnum:]]*\);/\1/pI' file	1
sed -nE 's/^USE (.+);/\1/p' file	2
perl -ne "s/(?<!((\(| )N))(?:'{2})*\K(')(?!(, (N'|NULL|CAST|[-0-9])|\)\n))/\3'/g;print"	1
(["'])(?:(?=(\\?))\2.)*?\1	1
<([a-z]+)\ ?([a-z]+=\".*?\"\ ?)?>([.\n\sa-z]*)(<\/\1>)?	2
^([3-9])\1\d{6}$	1
(\w+) Vs \1	2
(\w+).*\1	2
\b(\w+)\s+\\1\b	2
\b(\w+=)\d+&(\1\d+)	2
\?.*?\K([^=]+)(?:=[^&]*)?&(.*)\1=(.*?)(?:&|$)	2
(.)(?!\1)	1
(?!(.)\1{1,2}).	4
(.)(?:(?!\1).){1,2}	1
^(.)\1(?:(?!\1).)+$	1
"(.*)\\1"	2
^(?=\d{2}([-.,\/])\d{2}\1\d{4}$)(?:0[1-9]|1\d|[2][0-8]|29(?!.02.(?!(?!(?:[02468][1-35-79]|[13579][0-13-57-9])00)\d{2}(?:[02468][048]|[13579][26])))|30(?!.02)|31(?=.(?:0[13578]|10|12))).(?:0[1-9]|1[012]).\d{4}$	4
"^(?=\\d{2}([-.,\\/])\\d{2}\\1\\d{4}$)(?:0[1-9]|1\\d|[2][0-8]|29(?!.02.(?!(?!(?:[02468][1-35-79]|[13579][0-13-57-9])00)\\d{2}(?:[02468][048]|[13579][26])))|30(?!.02)|31(?=.(?:0[13578]|10|12))).(?:0[1-9]|1[012]).\\d{4}$"	4
(abc)\1	1
sed 's/[^-]*\-\(.*\)/%\1%/' <<< "phu-ser4505"	1
^(x)$|^\1\1\1$	1
(?=^(x))\1*	1
^(x)(\1\1|)$	1
:%s/\(2\_.*3\)*[^\r\n]/\1_/g	1
sed  -r -i -e 's#(filter = )(\[ "a/\.\*/" \])#\1[ "a\/sda1\/", "a\/sdb\/", "r/\.\*\/"]#g' conf	1
^(?:(?!([,\/@])\1+)[a-z\W])+$	4
\\w+([^aeiou])\\1$	1
(?i)\\w+([a-z&&[^aeiou]])\\1$	1
^([AER])(?:,(?!\1)([AER])(?!.*\2))*$	4
^(?:([AER],?)(?!.*\1))*$	3
"^(?:([AER],?)(?!.*\\1))*$"	3
^([AER])(?!.*\1)(?:,(?!.*\2)([AER]))*+$	4
^(English|French|Spanish)(?:,(?!\1)(English|French|Spanish))?(?:,(?!\1|\2)(English|French|Spanish))?$	4
sed -n 's/\([^ ]\{1,\} \{1,\}\)\{2\}\(PREFIX_[^ ]*\).*/\1/p' YourFile	1
sed -n 's/.* \(PREFIX_[^ ]*\).*/\1/p' YourFile	1
s/(if[^;]+?)\s+(.*?uvm.*?);/\1\nbegin\n    \2;\nend/gm	2
<h1( [^>]*(["'].*["'])\1*)?>	4
sed -i '' 's/transition: ([a-zA-Z0-9.]*);/@include _transition\((\1)\);/' *	2
sed 's/transition: \([a-zA-Z 0-9.]*\);/@include _transition(\1);/g' file	4
sed 's/15=\([^ ]*\)/\1/g;s/[0-9]\+[^ ]\+ //g' input.file	1
^(?:(\w)(?!\1\1))+$	3
<input type="text" pattern="^(?:(\w)(?!\1\1))+$">	3
(\w)\1{2,}	1
sed -n 's:.*<seg id="1">\(.*\)</seg>.*:\1:p' XML-file.xml > output.txt	1
sed -n 's:.*\(<seg id="[0-9]\{1,\}">.*</seg>\).*:\1:p' XML-file.xml > output.txt	1
(.*([abcxyz])(?!.*\2)){3}	2
(\\b\\w{5}\\b)(?:.*?\\1){4}	1
(?:(?!(.).*\1)[abcd])+	4
^(?:(?!(.).*\1)[abcd])+$	4
(?!(.).*\1)	4
^([abcd])(?:(?!\1)([abcd]))?(?:(?!\1|\2)([abcd]))?(?:(?!\1|\2|\3)([abcd]))?$	4
^([abcd])((?!\1)[abcd])?((?!\1|\2)[abcd])?((?!\1|\2|\3)[abcd])?$	4
^.*(.).*\1.*$(*SKIP)(*F)|^[abcd]+$	2
^.*(.).*\1.*$	1
^(?>([abcd])(?!.*\1))+$	4
^(?!.*(.).*\1)([abcd]+)$	4
([\'"])((?:(?!\1).)++)\1	2
(?:u|r|ur|ru)?(?:(?P<q1>'''|""")(?:[^'"\\]*(?:\\.|(?!\1)['"]))*[^'"\\]*(?P=q1)|(?P<q2>'|")(?:[^'"\\\n]*(?:\\.|(?!\1)['"]))*[^'"\\\n]*(?P=q2))	1
<([A-Z][A-Z0-9]*)\b[^>]*>(.*?)</\1>	2
/<([A-Z][A-Z0-9]*)\b[^>]*>(?:(?!\/?\1)[\s\S])*<\/\1>/ig	2
sed -n 's/^[0-9-]\{10\} \([0-9,:]\{1,\}\) .*/\1/p' YourFile	1
(\d)\1{4,}	1
(\d)\1{5,}	1
(\d)\1{4,}	1
'String'.replaceAll("([aeioucgjkqsxyzbfpvwdtmn1234567890])\\1+", "$1")	1
(?!([A-Z]+)(?=.*\1))[A-Z]	4
^\d+\s<([A-Z]+)>\s(\d+\s)*<\/(\1)>$	2
^\d+\s<([A-Z]+)>\s(\d+\s)(\2)+<\/(\1)>$	3
echo "all/30" | sed 's/[^0-9]*\/\([0-9][0-9]*\)/\1/'	1
(?P<stmt>MyType\s+[a-zA-Z0-9_]+)\(\s*"|'[^"']+"|'\s*\)\s*;[^(?P=stmt)]*$	2
MyType\s*(\w+)\S+\s*;(?!.*?MyType\s*\1)	2
/(\/?)(.+)\1([a-z]*)/i	2
%s/\v.*host +(\S*)\_.{-}net +([^;]*)\_.{-}ress +([^;]*)\_.{-}\}\n\n?/\1|\2|\3\r/g	2
sed -r  's/(\$[^ "]+)/\n\1\n/g' filename | sed -n '/^\$/p'	2
egrep -e '([a-z])\1+' file	1
grep '\([a-z]\)\1\{1,\}' dict.txt	1
(.)\1{9,}	1
^(.)\1{9}$	1
^(.)\1*$	1
(.)\1{9}	1
sed -e 's/^\(.\{19\}\)[[:space:]]\+/\1 /' data.txt	1
sed -r 's/([^ ])([0-9]{2}):([0-9]{2}):([0-9]{2})/\1\2_\3_\4/g' file	1
sed 's/\([^ ]\)\([0-9]\{2\}\):\([0-9]\{2\}\):\([0-9]\{2\}\)/\1\2_\3_\4/g' file	1
String[] ss = "abbbcaababbbcaaabbca".split("(?<=bca|ab)|(?<=(.)(?=\\1))")	1
stringVar.split("(?<=(\\w))(?=\\1)|(?<=ab|bca)")	1
stringVar.split("(?<=(\\w))(?=\\1)")	1
([aeuioy])\\1{2,}	1
^(?:[^aeiou]*([aeiou])(?!.*?\1)){3}	2
(?:([aeiou])(?!.{1,2}\1)){3}	1
(?=[aeouiy]{3})(.)(?!\1)(.)(?!\1|\2).	1
(?!.*(.).*\1)	4
(?=[aeouiy]{3}$)(?!.*(.).*\1).*$	2
^(a+)[ab]+\1$	2
__\((['"]).*?\1\)	1
(?:(?P<year>\d{3,4})|(\d{1,2}))(?P<sep>[-./])\d{1,2}(?P=sep)(?(year)\d{1,2}|\d{1,4})	1
egrep '^[^,]*([a-z])\1[^,]*([a-z])\2' file	1
egrep '^[^,]*,[^,]*([a-z])\1[^,]*([a-z])\2' file	1
egrep '^[^,]*,[^,]*,[^,]*([a-z])\1[^,]*([a-z])\2' file	1
url\((["\']?)((?!["\']?[data:]?).*?\.(gif|png|jpg|jpeg|svg|woff|eot|ttf))\\1\)?	2
^(?i)(?:([A-Z])\1+)+$	1
^(?:([A-Z])\1+)+$	1
(?:([A-Z])\1+)+	1
([A-Z])\1{1,}	1
sed -i -c "s/~~(\d{3})~~/A\\1B/g" src.txt	1
sed 's/\(foo\)bar/\1test/g' file.txt	1
:%s/^\(reg.*[0-9]\{6\}\)_/\1,/g	1
:%s/^\(reg[a-z]\{3\}[0-9]\{6\}\)_/\1,/g	1
%s/^\(reg[a-z]\{3\}[0-9]\{6\}\)_/\1, /g	1
^(?:.(?=.*+\n(\1?+.).*+\n(\2?+.).*+\n(\3?+.)))*?...A.*+\n\1?+..A.*+\n\2?+.A.*+\n\3?+A	4
[machine]# echo "//dir1/dir2/dir3/component/file.rb#70"  | sed  's/\(.*rb\)#\d+$/\1/g'	1
sed -E 's/(.*\.rb)#[0-9]+$/\1/g'	2
perl -pe 's/(.*\.rb)#\d+$/\1/g'	2
sed 's/\(.*\.rb\)#[0-9][0-9]*$/\1/g'	1
([+-\/*x])\1+	2
sed -e 's/\( *\)def /\1@profile\n&/' test.py	1
sed -i -e  's/^\(.*\)\(def.*\)/\1@profile\n\2/' test.py	1
%s/\(\w\)/- \1/	1
^(\w)\1{3,}$	1
(?=^[\x20-\x7F]+$)(?!^.*?(\w)\1{2,}$).*	2
sed -n '/"name": "/{s/ *"name": "\([^"]*\)",/\1/;p}' YourFile	1
\D+(\d+)\D+(?:(?!\1)\d+)	2
(\d)\1*	1
(.)(?=\1)\1+|\d	1
([^\W\dA-Z && (I|X|L|V|\.)])\1{2}	1
\b(?:Fuss|Mass|Bloss|Gross)(*SKIP)(*FAIL)|([^\W\dA-Z && (I|X|L|V|\.)])\1{2}	2
\b(?:Fuss|Mass|Bloss|Gross)|([^\W\dA-Z && (I|X|L|V|\.)])\1{2}	1
(\d)\1*	1
([^\W\dA-Z && (I|X|L|V|\.)])\1(?<!(?i)fuss|mass|bloss|gross)\1	1
(<a(?:\s+\w+\s*=\s*(?P<quote>["']).*?(?P=quote))*)\s+class\s*=\s*(?P<q>["']).*?(?P=q)	2
(?=(pattern to make atomic))\1	1
(?=(a-b|a))\1(?!Z)	1
echo YOUR_STRING | sed -n 's/.*\([a-zA-Z0-9]\{2\}\(:[a-zA-Z0-9]\{2\}\)\{5\}\).*/\1/p'	1
^(.)\1+$	1
^(?=.{8}$)(?!999|[0147]|(.)\1+)[0-9]+$	2
^(?=(.*?sol))\1(.*)$	2
<(\w+)\s*.*?>\s*?</\1>	2
\((\d*(?:\.\d+)?\s\d*(?:\.\d+)?),(?!\1)(\d*(?:\.\d+)?\s\d*(?:\.\d+)?),(?!\1)(?!\2)(\d*(?:\.\d+)?\s\d*(?:\.\d+)?),(\1)	4
^(([A-Z])\2)-\d{2}-(?:(?!\1)[A-Z]){2}-\1$	4
^(([A-Z])\2)-\d{2}-(?:(?!\1)[A-Z]){2}-\1$	4
(one|two|three);?(?!\1)(one|two|three);?(?!\2)(one|two|three)	4
VERSION=$( curl --silent "http://nexus:8080/nexus/service/local/lucene/search?g=com.xxx.yyy&a=zzz" | sed -n 's|<latestRelease>\(.*\)</latestRelease>|\1|p' | sed -e 's/^[ \t]*//' | tail -1 )	1
<(script|style).*?</\1>	1
^(\S+).*\1	2
sed -rn 'G;h;/^(\S+).*\1/!b;/^(\S+).*\1.*\1/b;P' file	2
sed -r '/word/{:a;/(A)([^ABC]*C+[^ABC]*)(B)/{s//\1\n\2\n\3/;h;y/C/X/;G;s/.*\n(.*)\n.*\n(.*)\n.*\n/\2\1/;ba}}' file	2
(["'])(?:(?=(\\?))\2.)*?\1	1
sed 's/\([0-9]*\)\t\([a-zA-Z]*\)/\2,\1/g' <fifa.csv >fifa.csv	1
sed 's/^\([0-9]\+\)\t\([^\t]*\).*/\2,\1/' file	1
sed -i 's/^\([0-9]\+\)\t\([^\t]*\).*/\2,\1/' file	1
sed -i 's/^\([0-9]\+\)\t\([^\t]*\).*/\2,\1/' fifa.csv	1
<img.* src=(['"])\S*\/([^.]+)\.(?:png|gif|jpg)\1[^>]*>	2
(\b\w+) \1\b	2
.*(.).*(\1).*	1
([ABC])(?!\1)([ABC])(?!\1)(?!\2)[ABC]	4
^(?:([A-L])(?!.*\1)){12}$	2
egrep '([A-Z]{3,}).*\1'	1
egrep '([A-Z]{3}).*\1|([A-Z])([A-Z])\1\2\1'	1
(\b[A-Z]([A-Z]{2,})\2\b|\b([A-Z]{3,})\b.*\3)	2
sed 's/>.*(Sample .*)_Locus_.*/\1/' locus86.tmp > locus86.fa	2
^(?:\+?1?[-.\s]?)(\d{3})([-.\s])(\d{3})\2(\d{4})$	1
<img[^>]*src=(["\'])(.*?)\1	2
<img[^>]*src=(["\'])([^"\']*)\1	2
"(.)\1"	1
^(?=.{10,32}$)(?=.*[A-Z])(?=.*[a-z])(?!.*(.)\1).+$	2
\#\K([a-f0-9])\1([a-f0-9])\2([a-f0-9])\3	1
sed -rn '1{x;s/^/0123/;x};G;s/(.*)\n(.)(.*)/Run -cpu=\2 vanish \1.acd*.* -db ! \&\n\3\2/;P;s/.*\n//;h file	2
OUT\s*:?([^:]*):(?=.*?\bWarning\b)(?:(?!OUT).)*(?!.*?\1[:\s]*Warning)	2
OUT\s*:?([^:]+):\s*:\s*Warning(?!.*?\1\s*:\s*:\s*Warning)	2
^(?=.*([a-qA-Q])\1{5,})[a-qA-Q]{6,24}$	4
sed -nr 's/.*Begin(.*)End.*/\1/p'	2
([-_])\1+	1
^([\w-.]+) ([\w-.]+) (\1\.\2@([\w-]+.)+[\w-]{2,4})?$	2
(\d+?)\1+$	2
\.(\d*?)(\d+)\2+$	2
grep -E '([A-Za-z]{4})\1\1' test.txt	1
grep -oP '^(?:(?!\1).)*\K(.{4})(?=(?:(?!\1).)*\1(?:(?!\1).)*\1(?:(?!\1).)*$)' file	4
grep -E '([^[:space:]]{4})\1\1' file	1
grep -E '(....)\1\1' file	1
grep -E '(....).*\1.*\1' file	1
^(\s*([^,]*),\s*)\d+(?=.*?new file.*?\2,\s*(\d+))	2
sed 's|\(<a href="file:///[^>]*/\).*">|\1">|g'	1
sed 's/\(<a href="[^."]*\/\)[^."\/]*\.[^."\/]*">/\1">/g' file	1
^(?!(.)\1{3})(?!19|20)\d{4}$	4
^(?!(.)\1{3})(?!19|20)(?!0123|1234|2345|3456|4567|5678|6789|7890|0987|9876|8765|7654|6543|5432|4321|3210)\d{4}$	4
return input.matches(".*(.)\\1.*");	1
(.)\1	1
return input.matches("(.)\\1");	1
(.)\1	1
(.).*\1	1
return input.matches("(.).*\\1");	1
$path =~ s/^(.*)\/.*/\1/	2
:%s/\v^(\s*\S+\s+\S+).+/\1/	2
^[^#]*#([^#]*)#[^#]*#\1.*$	2
^[^#]*(#[^#]*#)[^#]+\1.*$	2
sed -r 's/^a=([0-9]+).*c=([0-9]+)$/\1 \2/' file	2
^(\S++).*\R(?=(?>.*\R)*?\1 )	2
^(?=.{8})(\d)(?!\1{7})\d{7}$	1
^(?!(\d)\1{7})(?!12345678|87654321)\d{8}$	4
^(?=[0-9]{8}$)(.)\1*+.++(?<!12345678|87654321)	1
^(?=[0-9]{8}$)(?!12345678|87654321).*?(.)(?!\1).+	1
^(?!(\d)\1+$)(?!12345678$|87654321$)\d{8}$	4
^(\S++)(.*)(?:\R\1.*)+	2
sed -r 's/^(\S+)[^:]+:\s+(.+?)\s+-.*/\1 \t\2/' file	2
^(FF)\\1*$	1
egrep '(...).*\1'	1
(?=((.)(.)(.)))(\2|\2\3|.+)\1	2
(?=(.)(?=.\1)(.{2})\2)|(?=((.)\4\4))|(.{3})(?=.*?\5)	4
(&lt;)([a-zA-Z0-9:]++)(?=[^&gt;]*&gt;&lt;/\2&gt;)	2
(&lt;)([a-zA-Z0-9:-]++)(?=[^&gt;]*&gt;&lt;/\2&gt;)	2
(sec\smtu)(?:(?!(\#|\1)).)*\#	1
sed -r 's/(^.*id=")([^"]+)(.*$)/\2/g' < file.txt	2
^\D*+\b(\d+)\b\D*(\b\1\b\D*)*+$	3
sed 's/\([^\( |       \)]*\)/\1\'$'\n/g' testFile.txt  | grep \# | tr -d ' ' | tr -d '        ' > dirNotes.txt	1
for myFile in `ls *.txt`; do sed 's/\([^\( |  \)]*\)/\1\'$'\n/g' $myFile  | grep \# | tr -d ' ' | tr -d '     ' > $myFile.ndx; done	1
GO(?:([A-Z])(?!.*\1))+$	3
^GO (?:([A-Z])(?!.*\1)\s*)*$	2
^(GO(?: ([A-Z])(?!.*\2))+)$	3
(?:(\d)\1{2,3}$)|(?:0\d0$)	1
(\d)\1{2,3}$	1
(\d-(?:\d{3}-){2}(?:(?:(\d)\2{3})|(?:\d(\d)\3{2})|(?:\d0\d0)))	1
for i in *; do sed -i 's/\(alphabet\.\)\([a-z]\+\) *= *\([^;]*\);/\1\U\2(\3);/g' $i; done;	4
find . -type f -execdir sed -i 's/\(alphabet\.\)\([a-z]\+\) *= *\([^;]*\);/\1\U\2(\3);/g' {} \;	4
:%s/\(textpattern\)/\1\1/g	1
:s/\(Hello\)/\1\1/	1
^(\w+)\R(?=.*?^\1$)	2
#([0-9a-fA-F])\1{3}[^0-9a-fA-F]	1
#([0-9a-fA-F])\1{3}[^0-9a-fA-F]|#([0-9a-fA-F])\1{6}[^0-9a-fA-F]	1
^(?!.*(.).*\1)[ABC]+$	4
(\/\/([^\n]*)(?:\n|$))|(['"])(?:(?!\3|\\).|\\.)*\3|\/(?![*/])(?:[^\\/]|\\.)+\/[igm]*|\/\*(?:[^*]|\*(?!\/))*\*\/	2
(.+?\((.+?),\2,\2\).+)	2
(.+?\((.+?),\2,\2\).+)	2
<(.*?)>.*?</\1>	2
(\2.\4)(\2.\4)	4
perl -pe 's/<([^<>]*)>\s*<\/\1>//g' file	2
sed -r 's/<([a-zA-Z0-9]+)>[ \s\t]*<\/\1>//g' file	2
s/A\(foo\)B/c\1D/g	1
sed -n 'H;${x;s/\(\n\)[^[:cntrl:]]*server[^[:cntrl:]]*/\1server 1.1.1.1/;s/.//p;}' /etc/ntp.conf	1
sed 's/\("[^"]*"\)* \("[^"]*"\)*/\1,\2/g' test1	1
sed 's/\("[^"]*"\)* \("[^"]*"\)*/\1,\2/g' test1 | awk -F ',' 'BEGIN {OFS=","} {print $3,$5,$7,$9}'	1
<tr[^>]*>.*(<(\S+)[^>]*>([^<]|(?1))*?<\/\2>).*?<tr[^>]*>	2
echo "apa.tif bib.jpg bad.tiffany.png" | sed 's/\.\(tif|jpg\)\( |$\)/\1/g'	1
sed 's/^\([^ ]* \)\([^ ]*\)\( \2\)* /\1\2 /' file	1
s/"editToken":"\([^"]*\)".*/\1/	1
^\/([\w-]*)(\/\1)*((?!\1)[\w-\/])*$	3
sed 's/.*\([0-9]\{1,\}\.\{0,1\}[0-9]*\) *$/\1/' YourFile	1
href=(["'])([^"']+\.pdf)\1	2
s/(\b\w{3,}\b)(.*)(\b\1\b)/\1\2/	2
(<!--((?!-->).)*-->|<\w*((?!\/<).)*\/>|<(?<tag>\w+)[^>]*>(?>[^<]|(?R))*<\/\k<tag>\s*>)	2
``([^']+)'' -> \\command{\1}	2
echo test.a.wav|sed 's/.*\(\.wav\)/\1/g'	1
url\(\s*(['"]?+)(.*?)\1\s*\)	2
echo c | grep -E '(c+)*\1' ; echo $?	2
:1,$s/ as \([^"]\+\)$/ AS \1/c	1
:1,$s/ as \([^"]\+\)$/ AS \1/	1
^(?=.*(.))(?=(.*\1){4}).*$	2
\b(?=\w*(\w)(\w*\1){2})\w*	4
sed 's@\(^\| \)\(http:[^ ]*\)@\1<\2>@g'	1
(padding|margin)[:] ([0-9](px|em)) \2 \2 \2;	1
sed 's/class (\w+)(.*)/\`ifndef \U\1__SV\2/' mipi_rffe_scoreboard.sv	2
sed -r 's/class (\w+)/`ifndef \U\1\E__SV\n`define \U\1\E__SV\n\n&/'	2
sed -e "s@\(http://\S\+\)@\<\1\>@g" -e "s@\(^<[^>]*>  <[^>]*>  \)\([^<].*$\|<.\{0,7\}$\|<\([^h]\|h[^t]\|ht[^t]\|htt[^p]\|http[^:]\|http:[^/]\|http:/[^/]\).*$\)@\1\"\"\"\2\"\"\"@g" -e "s@\([^\.]\)[ \t]*\$@\1\.@g"	1
sed -e "s@\(http://\S\+\)@\<\1\>@g" -e "s@\(^<[^>]*>  <[^>]*>  \)\([^<].*$\|<.\{0,7\}$\|<\([^h]\|h[^t]\|ht[^t]\|htt[^p]\|http[^:]\|http:[^/]\|http:/[^/]\).*$\)@\1\"\"\"\2\"\"\"@g" -e "s@\([^\.]\)[ \t]*\$@\1\.@g"	1
sed -e "s@\(http://\S\+\)@\<\1\>@g" -e "s@\(^<[^>]*>  <[^>]*>  \)\([^<].*$\|<.\{0,7\}$\|<\([^h]\|h[^t]\|ht[^t]\|htt[^p]\|http[^:]\|http:[^/]\|http:/[^/]\).*$\)@\1\"\"\"\2\"\"\"@g" -e "s@\([^\.]\)[ \t]*\$@\1\.@g"	1
sed 's/\(mv -v .*?\)\(\.jpg\)\(.*\)/\1.JPG \3/' finalDuplicates.txt > finalCaseDuplicates.txt	1
sed 's/\(mv -v .*\.\)jpg\(.*jpg\)/\1JPG\2/'	1
sed 's/^\(mv -v[^.]\+\.\)jpg/\1JPG/'	1
((?:[A-Z]{2,4})(?:[0-9]{4,})(?:[0-9A-Z]{1,2})?)(?!.*?\1)	2
[^'"]*(?=(?:(['"])+(.*?\1))|([^'"]*$))	4
q(?=(<([A-Z][A-Z0-9]*)\b[^>]*>(?:.*?)<\/\2>))	4
q(?=(?:<([A-Z][A-Z0-9]*)\b[^>]*>(.*?)<\/\1>))	4
sed 's/^\(\(\\.\|[^"\\#]*\|"[^"]*"\)*\)#.*$/\1/'	1
sed -n '/[wpLogin|editToken]/{s/.*".*"\(.*\)".*/\1/p}'  <file>	1
([^\d\s])\1+	1
(?!= |=|&|\||%)(\+|-)(?! |=|\1)	1
([^,]+)(,[ ]*\1)+	3
:%s/\([^\^|]\)\"\([^$|]\)/\1\2/g	1
((\d)\2*)	2
^(\w+\R)([\s\S]+?\R)\1	2
^(.+?)\1+$	2
(.+?)\1+	2
(.+?)(?=\1+$|$)	2
sed -r 's/\b([A-Z][a-z]+)/\L\1/g' file	2
sed -r 's/\b([a-zA-Z]*([A-Z][a-z]|[a-z][A-Z])[A-Za-z]*)\b/\L\1/g' file	2
sed -r 's/((\<[A-Z]+\>\W*)*)(\w+)/\1\L\3/g' file	2
^(?!.*?\{{2}\h*translateAttr).*(*SKIP)(*F)|=(["'])((?:\\\1|(?!\1).)*)\1	2
(?<=\s|^)\$\((['"])(?![#.])(?:(?!\1).)*\1\)	1
^(?!.*?(.+)\1)([\w@+$!.-]+){8,20}$	4
^(?!.*?(.+)\1)	4
([A-Z]{1})(\d+)((?:(?!\1)[a-zA-Z])+)	2
(?:\s?([ACERV])(?!\1)){0,3}	1
(?:([ACERV])(?!\1)|\s(?!$|\1))	1
sed  's/^.\{35\}\(.\{9\}\).*/\1/' infile	1
sed -n '/[--|==]>/{s/.*\(. [=|-][-|=]> .\).*/\1/p}' infile	1
sed -n "s/.*Directory \([^>]*\)>/\1/p" <<< "<Directory /var/www/my_site>"	1
sed -n "s/.*Directory \([^>]*\)/\1/p" <<< "<Directory /var/www/my_site>"	1
sed -n "s/.*Directory \([^>]*\)>/\1/p" /etc/apache2/sites-enabled/*	1
sed -n "s/.*Directory \([^>]*\)>/\1/p"	1
sed -n "s/.*Directory \([^>]*\)/\1/p"	1
sed 's#\(/\*bash_var\*/ *var foo = \).*\(; */\*end_bash_var\*/\)#\10\2#'	1
sed -r 's/([0-9])(\*)([0-9]),/\3,/g'	1
(\d)\1	1
(\d)\1+1	1
:s/^\([[:blank:]]*\w\+[[:blank:]]\+\w\+\)[[:blank:]]\+/\1\t/	1
sed -E 's/^([0-9]{3})\t([0-9]{3})([0-9]{4})$/\1-\2-\3/' infile.txt > outfile.txt	1
sed 's/\([0-9]\)[^0-9]*/\1/g;s/\(...\)\(...\)\(....\)/\1-\2-\3/' YourFile	1
sed  's/[^_]*\( _[^\b\t\s ]*\)[^_]*/\1XXX/;s/\(.*\)XXX.*/\1/;s/.*\(_\)/\1/' logs_data	1
(.)(?=(.*))(?<=(?=\1.*?\1\2$).+)	2
/{##(\d)##}([\s\S]*){##\/\1##}/g	2
/(?:<(\w+)[^>]*>(?:[\w+]+(?:(?!<).*?)<\/\1>?)[^\s\w]?|[^\s]+)/g	2
sed -e 's/\b\([a-z]\+\)[ ,\n]\1/\1/g' temp.txt	1
sed -r 'y/./ /; s/[()]//g; s/^([^0-9]+)([0-9]+).*\s([a-z0-9]+)$/\1(\2).\3/;' inputFile	2
sed -r -e 's:((^\s*common\.loader\s*=)(([^#\S]*)(#.*)?))$:\1 x \3:'	2
$linia =~ s/(.*)\1/$1/g;	2
$linia =~ s/(.*)\1+/$1/g;	2
'y/./ /; s/[()]//g; s/^([^0-9]+)([0-9]+).*\s([a-z0-9]+)$/\1(\2).\3/;'	2
sed -r 's/method=""([^"]*)"".*path=""([^"]*)"".*accept=""([^"]*)""/"\1","\2","\3"/' logfile	2
sed -r "s/^.*method\=\x22\x22([^\x22]*).*path=\x22\x22([^\x22]*).*req_header_accept=\x‌​22\x22([^\x22]*).*$/\x22\1\x22,\x22\2\x22,\x22\3\x22/" logfile	2
sed -r "s/.*\x22([^\x22]*)\x22.*/\1/" test.txt	2
sed -re '/^\s*common\.loader\s*=\s*/ {s/(\s*(#|$))/, x\1/; s/=,/=/}'	2
^(ENTITY) is ((?:\S+\s+){0,5})bigger than \1$	2
sed -i "s|http://www\.domain\.com/\('[+]img\[0\]\)|\1|g"	1
sed 's/\.\|\(=.*\)/_\1/g;s/_=/=/' file	1
sed -e ':b; s/^\([^=]*\)*\./\1_/; tb;'	1
sed 's/\(>[^ ]*\) /\1\n/g'	1
(text1)[\s\S]*(text2)|\2[\s\S]*\1	1
(text1).*(text2)|\2.*\1	1
\S*(\w)(?=\1+)\S*	2
\S*(\w)(?=\1{2,})\S*	1
\b\w*?(\w)\1{2}\w*	1
(\w)\1{2}	1
\b\w*(\w)(?=\1\1+)\w*\b	2
\b(?=[^\s]*(\w)\1\1+)\w+\b	4
find (.*)(\s\=\s) replace with \1\=	2
\([0-9]*,0,(\\[\'\"])(?:\\\\\1|.)*?\1,[0-9]*\)	1
(?m)^(.*)$(?=\r?\n^(?!\1).*(?s).*?\1)	2
([a-z])(\1{0,1})\1*	1
([,?!])\1+\s*	1
^([ABCDEFGJLMNOPRSTUVY])\s+\1\s*([-a-zA-Z\d, $]+)\1$	2
^([ABCDEFGJLMNOPRSTUVY])\s+\1\s*([-a-zA-Z\d, $^&+]+)\1$	2
(?<=\[([a-z0-9]+)\])(.|\r|\n)*?(?=\[/?\2\])	2
^(.)\1*$	1
find . -type f -exec sed -e 's@<b>\(.*\)</b><br />@<CustomerInfo>\1</CustomerInfo>@g' {} \;	1
find . -type f -exec sed -i 's@<b>\(.*\)</b><br />@<CustomerInfo>\1</CustomerInfo>@g' {} \;	1
sed -i 's/^\(home\/\)[^\/]*\/dmwebolabo/\1OK_REPLACED\/dmwebolabo/g' config.php;	1
sed -r 's#<b>([^<]*)</b><br />#<CustomerInfo>\1</CustomerInfo>#g' file	2
^(.).*?((?!\1).)	1
^(.).*?((?!\1).).*?((?!\1|\2).)	4
^(?!(.).*?((?!\1).).*?((?!\1|\2).))	4
sed 's/.*\(ADDR=[^|]*\) |.*/\1/'	1
sed -i "s/^\(public \$user = *'\)[^']*'/\1OK_REPLACED'/g" configuration.php	1
sed -r -i "s/^(public \$user = *')[^']*'/\1OK_REPLACED'/g" configuration.php	2
'(1:[^|]*\|)\1+'	2
sed -n '/^#error value for eg1$/{p;n;s/^\(\$text=\)1$/\10/};p' file	1
sed -r 'N;s/^(#error value for eg1\n\$text=)0$/\11/;P;D' file	1
^[^.]+\.([^\\]+)(?:\\(?!\1)[^\\]+)*$	2
sed 's/.*\(SNAP=[^|]*\) |.*/\1/' | sort | uniq -c > $log.snaps	1
cat test | sed 's/lo\(.*\)$/\1/' | sort | uniq	1
:%s/^\([^#].*\)\n\([^#].*\)$/\1\r#auto comment\r\2/g	1
:%s/^\(#.*\)\n#.*/\1/g	1
:%s/^\([^#].*\)/#auto comment\r\1/g | %s/^\(#.*\)\n#.*/\1/g	1
:%s/^\([^#].*\)/#auto comment\r\1/g	1
^([0-9]{4})-\1$	1
\b(\d{4})-(?!\1)\d{4}\b	1
^([0-9]{4})-(?!\1)[0-9]{4}$	1
^([0-9]{4})-(?!\1)[0-9]{4}$	1
echo "${f##*/}" && sudo cat $f/metadata.json | sed -n '/"version": "\([^"]*\)"/ s//\1/p'	1
(:wall:)(?=((?!\1).)*\1)	3
<a\h+href=(['"])\1>([^<>]*)<\/a>	2
^(\d)(?!\1+$)\d{11}$	2
(?=(subpattern*))\1	2
([^ ,]+),([^ ,]+)(?=.*\b\1\b)(?=.*\b\2\b)	2
([A-Za-z0-9\\-]+)\\s*=\\s*(['\"])(.*?)\\2	2
(?!.*(.).*\1.*,)	4
(?!,.*(.).*\1)	4
:%s/\(\;\)\(\s\)\(\DNA\)/\3\4/cg	1
:%s/; \+\(DNA \+[^;]*\) \+;.*/\1/cg	1
^(?=([A-Z]+|[a-z]+|[0-9]+|[^a-zA-Z0-9\s]+))\1\S+$	2
^\s*(?=((?:[A-Z]+\s*)+|(?:[a-z]+\s*)+|(?:[0-9]+\s*)+|(?:[^a-zA-Z0-9\s]+\s*)+))\1.	2
^\s*(?=((?:[A-Z]+\s*)+|(?:[a-z]+\s*)+|(?:[0-9]+\s*)+|(?:[^a-zA-Z0-9\s]+\s*)+))\1.+$	2
(?=([A-Z]+|[a-z]+|[0-9]+|[^a-zA-Z0-9\s]+))\1	2
<input type="password" value="" pattern="^(?=.{8,}$)(([a-zA-Z0-9])\2?(?!\2))+$" required/>	4
^(?=\D*\d)(?=.*?[a-zA-Z])(?=[\w!$(),.:;?@{}\[\]^-]{8,}$)((.)\2?(?!\2))+$	3
/<(style)(?:(?!<\\/?\\1).)*?<\\/\\1>/s	1
^(?=.*(text[12]))(?=.*(text[34]))(?=.*text5)(?=.*(text[6789]))(?=.*(?:(?!\3)text[6789])).*$	2
(?=.*(text[6789]))(?=.*(?:(?!\3)text[6789]))	4
"^(?=.*(text[12]))(?=.*(text[34]))(?=.*text5)(?=.*(text[6789]))(?=.*(?:(?!\\3)text[6789])).*$"	2
echo "firstString123456lastString" | sed -e "s|\([a-z]*\)[0-9].*|\1|"	1
([a-zA-Z]+[^/]*)\W+\1-	2
\b(\d{3})(\s?\1){2}\b	1
(\d{3})(\s?\1){2}	1
^(\s*)while.*{[^]*\1}	2
:%s/\([a-z]\+\),/'\1',/g	1
(?!(.)*\1{2,})	4
(?:(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#\$%!])(?!.*(.).*\1.*\1).{6,20})	2
(?!.*(.).*\1.*\1)	4
^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#\$%\!])(?!.*(.).*\1.*\1).{6,20}$	2
(?!.*(.).*\1.*\1)	4
\(?([0-9]{2})\)?([ ]?)([0-9]{4})\2([0-9]{4})	1
stri_replace_all_regex(string, "([a-z])\\1{1,8}", vector, vectorize_all=FALSE)	1
sed 's/\(.*\) /\1@/'	1
perl -ple 's/ ([^ ]+)$/@\1/' file.txt	2
s/\s([^\s]*)$/@\1/g	2
(?<=value=)(['"])(.*)\1(?=.*selected)	2
selected.*(?<=value=)(['"])(.*)\1	2
(?=.*?selected).*?(?<=value=)(['"])(.*?)\1	2
(?=[^>]*\sselected\b)[^>]*(?<=value=)(['"])([^>]*?)\1	2
echo "a b c d"|sed -r 's/^(([^ ]* ){3})/\1/'	2
echo "a b c d"|sed -r 's/^([^ ]* ){3}/\1/'	2
sed -ri "s/#(archive_command) .*$/\1 = 'bleh'/" postgresql.conf	1
[ ]+|(<([^ ]+)[^>]+>[^<]+<\/\2>)|(<[^>]+>)	2
(<([^ ]+)[^<>]+>)\s*([^<]+?)\s*(<\/\2>)	2
(<([^ ]+)[^<>]+>)([^<]+?)(<\/\2>)	2
<!--#\s*include\s+(file|virtual)=(['"])([^\r\n]+?)\1\s*-->	2
<!--#\s*include\s+file=(['"])([^\r\n]+?)\1\s*-->	2
(<!--#\s*include\s+(file|virtual)=(['"])([^\r\n]+?)\1\s*-->)	4
<!--#\s*include\s+(file|virtual)=(['"])([^\r\n]+?)\2\s*-->	2
sed -r 's/(burst_size[[:space:]])\{[[:digit:]]+\}/\1{256}/g' input	1
sed -r 's/(burst_size )\{[0-9]+\}/\1{256}/g' input	1
(Eggs|Legs) and (?!\1)(?:Eggs|Legs)	1
(['"])(?:\\\1|(?!\1).)*?\1	1
sed -E 's_^[/](.*)_\1_'	2
sed -E 's_^[/-](.*)_\1_'	2
\s(\d)[|\/](?!\1)\d:	1
sed -E 's/"([[:digit:]]+(\.[[:digit:]]+){0,1})"/\1/'	2
sed 's/^\("[^"]*": \)"\([0-9][0-9]*\(\.[0-9]*\)\?\)"/\1\2/' file.txt	1
s/[^ ]+ MD5 : (.+)/\1/	2
<(?P<beacon>[^>]).+(?P=beacon)	1
/\\*(?=((?:[^*]+|\\*(?!/))*))\\1\\*/	2
:%!column -t|sed 's/  \([^ ]\)/ \1/g'	1
\d+(\D+)\d+\1\d+\1\d+	2
\d+(\D+)\d+(\1\d+){2}	2
<(?<tag>script*)[^>]*>(?<content>.*?)<\/\k<tag>>	2
sed '/^\[section1\]/,/^\[/ { x; /^$/ !{ x; H }; /^$/ { x; h; }; d; }; x; /^\[section1\]/ { s/\(\n\+[^\n]*\)$/\nkey10=value10\1/; p; x; p; x; d }; x' foo.ini	1
^(\w+) : (\w+)[^\n]*(?:\n\1 : (\w+)[^\n]*)*	2
^(\w+) : .*(?:\n^\1.*)*	2
@"^(?!([0-9])\1{5}$)[0-9]{6}$"	4
"([0-9])\1\1\1\1\1"	1
^([A-Z])[A-Z]+:([A-Z]{4})[A-Z]+:\1\2$	1
m <- gregexpr('(.)(?=(\1{3}))', s, perl=TRUE)	1
(.)(?!.*\1)	2
cat /tmp/text | sed -En 's/(^[0-9]*$)/\1/p'	2
cat /tmp/text | sed -En 's/(^[0-9]+(^M)?$)/\1/p'	2
(?<!\\S)(\\S)(\\S+)\\1(?=\\s|$)	2
(?<!\S)(\S)(\S+)\1(?=\s|$)	2
(?<!\S)(\S)(\S*)\1(?=\s|$)	2
sed 's/.\(.\{7\}\).*/&\1/' YourFile	1
^(?=.*[A-Z])(?=.*(?:\d|-))(?!.*(.).*\1)[a-zA-Z]{2}.{4,}[a-zA-Z]{2}$	2
(?!.*(.).*\1)	4
^(?!\d*?(\d+?)\1)\d{6,15}$	4
(?!\d*?(\d+?)\1)	4
(.+)(?!\1)(.+)(?!\1|\2).	4
^(?=\d{6,15}$)(?!.*(.+)\1)(.+)(?!\2)(.+)(?!\2|\3).+$	4
(.+)\1	2
^((\d{4})_\d+.jpg)(\n\2.+)+	3
s/(account )\d+(\d{4})/\1xxx\2/g	1
sed -r ':a;s/[0-9](X*[0-9]{4})/X\1/;ta' file	2
sed 's#^[-].* \("[[:alnum:]]\{1,\}"\).*#\1#g' 'my_file'	1
sed 's~http://[.a-zA-Z0-9_/-]*\/\(\w\+\.\(jpg\|gif\|png\)\)~/images/\1~g' file	1
echo "http://www.domain.com/wp-content/uploads/2013/03/Security_Panda.png "|sed 's#^http:.*/\(.*\).$#/images/\1#g'	1
sed 's#^http:.*/\(.*\).$#/images/\1#g'	1
([a-zA-Z])(?=.*\1)	2
(.)(?=(?:(?!\1).)*\1(?:(?!\1).)*$)	2
(.)(?=(?:(?!\1).)*+\1(?:(?!\1).)*+$)	2
([^a-zA-Z ])[a-zA-Z]+(\1)	1
(.)\1	1
^(?=\S{8,20}$)(?=\D*\d)(?![0-9_]).{6,18}?(.)\1$	2
^(?=.*\d)[\D\S]\S{5,17}(\S)\1$	2
sed 's/^\(\([^,]*,\)\{2\}\)key1,[^,]*,/\10,0,/' foo.csv	1
sed -n 's/.*\[\(.*\)log/\1/p	1
sed -n 's/.*\[\(.*\)\]/\1/p'	1
sed -n 'H; $ { x; s/.*\[\(.*\)\].*/\1/; p; }' foo.txt	1
(?!.*?(\b\d+)\W+\1\b)	4
^(?!.*?(\b\d+)\W+\1\b)\d+(\W+\d+)*$	4
\b(\d+)\b.*\b\1\b	2
^(?!.*\b(\d+)\b.*\b\1\b)\d+(?:([.\s,])\d+)(?:\2\d+)*$	4
^(?!.*\b(\d+)\b.*\b\1\b)\d+(?:,\d+)+$	4
(?!.*\b(\d+)\b.*\b\1\b)	4
sed -i.bak 's/\(^.*\)\(page-\)\(.*\)/\1apple-\3.html/' Files	1
^(?!(.)\1).{4,10}$	4
(.)\1	1
^(?!.*(.)\1).{4,10}$	4
^(?:(.)(?!\1)){4,10}$	1
s/\(s[w|l].*[0-9].*\)\.\*'$/\1\\.*'/	1
s/\(s[w|l].*[0-9].*\)\(\.\*'\)$/\1\\\2/	1
^(?>(?!\2\b|\3\b)(1\d{1}|2[0-2]{1}|\d{1}+)[,.; ]+)(?>(?!\1\b|\3\b)(1\d{1}|2[0-2]{1}|\d{1}+)[,.; ]+)(?>(?!\1\b|\2\b)(1\d{1}|2[0-2]{1}|\d{1}+))$	4
sed -n 's/.*\-D\(.*[\s\|$]\)/\1/p'	1
(.)\1*	1
(?1 \(\1\2\:)(?2 \(\1\:)(?3 \(\:)	4
<([a-zA-Z0-9]+)[^>]*>(?1)*</\2>	2
sed -r 's/^.*>(.*) .*/pathfind -t lane -id \1 -f fastq -l/	2
(['"]).*?\1|(%)	1
(['"]).*?\1	1
sed 's/.*aln:>\(\S*\).*/pathfind -t lane -id \1 -f fastq -l/g'	1
^((\w+?)\2*)$	2
(?:(?=,)|(?<![<>=]) +(?! *[<>=])|(?:(?<=,)))(?=(?:(?:[^'"]*(?P<s>['"])(?:(?!(?P=s)).)*(?P=s)))*[^'"]*$)	2
\\24(.*:.*?)\\24	2
.*\\24(.*:.*?)\\24	2
\\24([a-zA-Z0-9]+:[a-zA-Z0-9]+)\\24	2
([\"']).*?\\2	1
((["']).*?\2|(?:[^\\ ]+\\\s+)+[^\\ ]+|\S+)	2
\\24((?:.(?!\\24))*:.*?)\\24	4
(?i)((?:(['|\"]).+\\2)|(?:\\w+\\\\\\s\\w+)+|\\b(?=\\w)\\w+\\b(?!\\w))	4
([^aeiouy])\1	1
:s/^[^#]([^\t]*\t)\{8\}\(\([^\t]*\)\(\t\)\)*/\1 \3 ,/	2
grep 'hasURL.*' inputfile.txt | sed -n '/CDATA\[http:\/\//s~^.*CDATA\[\([^>]\+\)\]\].*$~\1~p'	1
echo -n "{" && echo -n "$1" | sed -r ":a;N;;s/\\n/\\\\n/;$ba;s/((\\\\x[0-9a-fA-F]+)|(\\\\[0-7]{1,3})|(\\\\?.))/'\1',/g" && echo "0}"	2
echo -n "{" && echo -n "$1" | sed -r ":a;N;;s/\\n/\\\\n/;$!ba;s/((\\\\x[0-9a-fA-F]+)|(\\\\[0-7]{1,3})|(\\\\?.))/'\1',/g" && echo "0}"	2
^\d{4}(-|/|)\d{4}\1\d{4}\1\d{4}$	1
^(?!.*\b(\d+)\b.*\b\1\b)\d+(?:,\s+\d+)+$	4
"^(?!.*\\b(\\d+)\\b.*\\b\\1\\b)\\d+(?:,\\s+\\d+)+$"	4
^(?!.*\b(\d+)\b.*\b\1\b)\d+(?:,\s+\d+)*$	4
(?!.*\b(\d+)\b.*\b\1\b)	4
^(?!.*\b(\d+)\b.*\b\1\b)\d+(?:,\s*\d+)*$	4
sed -n '/FULL FILE OUTPUT/{ N;s/.*\nProcessing \(.*\) (.*).*/\1/p}' my_file	2
regex.match(r'\b\w+\b(?:\s(\w+\b)(?<!\G.*\b\1\b.*\b\1\b))*', words)	3
^(..)\1*$	1
<img\b[^>]*?\bsrc\s*=\s*(['"])(.*?)\1	2
sed 's#/\([^/]*\)/#\1#' file	1
sed -r 's#/([^/]+)/#\1#' file	2
egrep -v '[^\2]*(([13579])\2)*\2[^\2]'	3
^[^13579]*(?:([13579])\1[^13579]*)+$	1
sed -n 's@.* TYPE_C = "\([0-9a-zA-Z-]*\)".*@\1@p' text.txt	1
string=$(sed 's/^./\u&/; s/-\(.\)/ \u\1/g' <<< $string)	1
s/-\(.\)/ \u\1/g	1
echo "$string"|sed 's/-/ /g;s/\([^"]\)\(\S*\s*\)/\u\1\2/g'	1
echo '"this-is-my-string"'|sed 's/-/ /g;s/\([^"]\)\(\S*\s*\)/\u\1\2/g'	1
\{(\w+)\}((?:(?!\{\w+\}).)*)\{\/\1\}	2
sed "s/(\'name\':)/\1\"hello\"\,/g" /path/to/file.json	1
sed "s/\('name':\)/\1\"hello\"\,/g" /path/to/file.json	1
egrep -v '([A-Z])[A-Z]?\1[A-Z]* '	1
perl -0777 -p -e 's/(<script.*?orange.*?<\/script>)/\/\*\1\*\///s' file	2
(\w)(\1*)	2
((\w)\2*)	2
((\w)\2*)	2
((\w)\2)	1
^(?!.*[aeiou]{3})(?!.*[bcdfghjklmnpqrstvwxyz]{3})(?!.*([^eo])\1).*[aeiou]	2
(?!.*([^eo])\1)	4
(?!.*([a-z&&[^eo]])\1)	4
(?=.*[aeiouy])(?!.*[aeiouy]{3})(?!.*[a-z&&[^aeiouy]]{3})(?!.*([a-z&&[^eo]])\\1).*	2
^(?=.*[aeiouy].*)(?!.*([eo])\1\1.*)(?!.*([a-df-np-z])\2.*).*$	4
:%s/\(\w*\)->hwqe_w1_len/common_wqe_get_len(\1)/g	4
^(?!000)(?!666)(?!9)[X0-9]{3}([- ]?)(?!00)[X0-9]{2}\1(?!0000)\d{4}$	1
sed 's/5_[0-9]*_\(.*\)/\1/' example.txt	1
s/(\d)((\d\d\d)+\b)/\1,\2/g	2
s/(\d)(?=(\d\d\d)+\b)/\1,/g	2
(.+)(.+)\1\2	2
^(\s*<media>.*)\n\1$	2
egrep '^.*([a-f0-9])[^\1]*$'	1
\2 -> \3 (with quotes) or \4 (without quotes)	1
QRegularExpression var2("([a-z\\d])\\1");	1
echo '/dir1/dir2/dir3.../importance/lib1/lib2/lib3/file' | sed -E 's#.*(/importance.*)#\1#'	2
^(?=[0-9-a-zA-Z]+$)(.).{4,}(?!\1).	2
^([0-9a-zA-Z])(?!.*\1$)[0-9a-zA-Z]{5,}$	2
echo '<path>' | sed -r 's#.*(/importance.*)/[^/]*#\1#'	2
^(?<c>.)(?<my_match>(?:[^\k<c>]|(?<=\\)\k<c>)+)\k<c>(?<rest>.*)$	2
echo /sd\/grs/ | perl -ne "print $+{my_match} if /^(?<c>.)(?<my_match>(?:[^\k<c>]|(?<=\\)\k<c>)+)\k<c>(?<rest>.*)$/"	2
find . -iname \*.py | xargs sed -i "s/\([a-z]\)\([A-Z]\)/\1_\L\2/g"	1
sed -r ':loop; /.*\<([a-z]+([A-Z][a-z]+)+)\>.*/ { h; s//\1/; s/([A-Z])/_\l\1/g; G; s/(.*)\n(.*)\<[a-z]+([A-Z][a-z]+)+\>(.*)/\2\1\4/; b loop }'	2
<(([^<>]+?)>)([^<>]+?)(?=<(?!\1))	2
url\((?:\'|\"")?(?!(?:http|ftp))(?<path>.+)\/(?<filename>.*?)\1?\)	2
sed 's/\(o=.*IN IP4 \).*/\1127.0.0.1./' test.1	1
([!"'><+_^@#=/\\-])\1+	2
(XXX_(.)_XXX)(.)*?(YYY_\2_YYY)	1
sed -i.bak 's/\({ *http[^|]*\)|\([^|]*}\)/\1##\2/g' my_file	1
echo 'I have a [color=blue]dog[/color] and a [color=blue]cat[/color] in my house.'|sed 's#\(\[color=[[:alpha:]]*\]\)[[:alnum:]]*\(\[/color\)#\1[b]\2#g'	1
sed 's/\(\[color=[a-z]*\]\)[a-z]*\(\[\/color\]\)/\1[b]foobar[\/b]\2/g' File	1
sed -r 's/(\[color=[a-z]*\])[a-z]*(\[\/color\])/\1[b]foobar[\/b]\2/g' File	2
echo "Foo 12 (bar, 12)" | sed 's/\(.*\)\((\)\([^0-9,].*\)\([, ].*\)\([0-9].*\)\()\)/\1\2\3\6/g'	2
(\w+)=(['"])((?:(?!\2).)*)\2	2
\/\w+(?:=(?:(["'])(?:(?!\1).)*\1|\S+))?	1
(?!.*?(.)\1{2})	4
^(?=\S*\s)(?!.*?(.)\1{2}).{14,}\.$	2
"([a-z]{2,4}) is \1"	1
([a-z])([a-z])([a-z])([a-z]) is \4\3\2\1	1
("|')\w+\1\s*=\s*?\w*?\.?suppkdid	1
sed '/matchline_\(.*$\)/,/matchline_/ {s/^/\1_/g}'	1
\b[0-9]{2}([0-9]{2})-\1-\1\b	1
sed 's/\(\n\)\(^[^T]\)/\t\2/g' tmpfile2.txt	1
sed 'N;s/\n\([^T]\)/\t\1/;P;D' file	1
sed 's/.*/ & /;s/ /  /g;s/GAZ/³/g;s/ [^ ³]\{1,\} / /g;s/³/GAZ/g;s/  */ /;s/.\(.*\)./\1/' YourFile	1
<(?<element>\w+).*?>(?<content>.*)?</[\s]*\1>	2
<(div).*?>(?<content>.*)?</[\s]*\1>	2
$ sed -n "s/^\(\([a-zA-Z0-9]\+\) [a-zA-Z0-9]\+ [a-zA-Z0-9]\+$\)/\2 \1/p" test.txt	1
(^(\bhttp)(|s):\/{2})(?=[a-z0-9-_]{1,255})\.\1\.([a-z]{3,7}$)	1
sed 's/\(copyright.*\)201[01234]$/\12015/Ig'	1
__\((['"])((?:\\\1|(?!\1).)*)\1\)	2
^("?)-?\d+(?:\.\d+)?\1$	1
sed 's/.*\([0-9][0-9]\)[ y].*/\1/'	1
sed 's/^[^0-9]*\([0-9][0-9]\)[ y].*/\1/'	1
sed 's/^\([^0-9]*\([0-9][0-9]\)[ y]\)\{1\}.*/\2/' file	1
sed -r 's/[^0-9]*([0-9][0-9])[^0-9]*([0-9][0-9]).*/\1/'	1
sed -r 's/[^0-9]*([0-9][0-9])[^0-9]*([0-9][0-9]).*/\2/'	1
([\u4E00-\u9FFF])(?![\s\S]*\1)	2
(&nbsp;| )\1+	1
sed  's/\(mutex_lock(\(.*\));\)/printf ("locking \2");\n\1\nprintf ("locking \2");/g'	4
sed  's/\(.*(\(.*\));\)/printf ("locking \2");\n\1\nprintf("locked \2");/g'	4
((\w)\2*)	2
System.out.println("tttteeeeeeessssssttttttt".replaceAll("(.)\\1+","$1" ));	1
strng.replaceAll("(.)\\1+", "$1");	1
(.)(?=\1)	1
\bF([^a-zA-Z0-9])?S\1?F\1?\b	1
sed -r ':a;s/^(".*",".*").*/\1/;t;N;s/\n//;ta' file	2
s/^([[:digit:]]+)/\\\1/	2
sed -r 's/^([[:digit:]]+)/\\\1/' "$i"	2
^(?:.(?=.*?(?(1)(?=.\1$))(.\1?$)))*(.)	4
sed -e 's/^.*\([0-9]*\)\(.*?\)$/\1 \t \2/gp' textfile.txt	1
/([a-z])([a-z])\1\2/\1\2\1/\1\2.php	1
/\/(.)(.)\1\2\/\1\2\1\/\1\2\.php/	1
var=`grep 'class="some class"' <file> | sed -r 's/^.+href="([^"]+)".+$/\1/'`	2
var=`grep 'class="some class"' <file> | sed -r 's/^.+class="some class"\s+href="([^"]+)".+$/\1/'`	2
grep 'some class'|sed -n 's/.*href="\(.*\)".*/\1/p'	1
^(.)([A-(hex code of \1)])([(hex code of \2)-Z])$	4
sed 's/\("[^"]*"\|[0-9.]*\)\s\s*/\1,/g' file	1
sed -r 's/("[^"]*"|\S+)\s+/\1,/g' file	2
$line =~ s/(\d+\.\d+)/\1:1/g	2
sed: 1: "s/ft.\(*\)/gt.\1/g": \1 not defined in the RE	1
s|com/shop/(.*)\.htm$|com/product/\1/|	2
sed "s/\(.*\)\t\(.*\)\t\(.*\)/'\2'('\3', '\1')/" filename	4
sed "s/'/\\\\'/g;s/\(.*\)\t\(.*\)\t\(.*\)/'\2'('\3', '\1')/" filename	4
sed -n -e 's/.*\(date\).*/\1/p' -e 's/.*\(details in that entry\).*/\1/p'-e 's/.*\(some more details\).*/\1/p'	1
sed -n -e 's/.*\(date\).*/\1/p' -e 's/.*\(details in that entry\).*/\1/p'-e 's/.*\(some more details\).*/\1/p'	1
sed -n -e 's/.*\(date\).*/\1/p' -e 's/.*\(details in that entry\).*/\1/p'-e 's/.*\(some more details\).*/\1/p'	1
\[mod=(['"])(.*?)\1\](.*?)\[\/mod\]	2
^(?=.*\b(\w+)\b.*\b\1\b).*$	4
regsub -all {(\\")|"} $st {\1} result	1
$str =~ s/(.)\1+/$1/g;	1
sed 's/^\(B:.*\)/\1\n/'	1
sed -E -i 's:(^B.*$):\1\n:g' filename	2
@"<table>^<([a-z]+)([^<]+)*(?:>(.*)<\/\1>|\s+\/>)$</table>"	2
(\w)(\w)\2\1	1
\w*(\w)(\w)\2\1\w*	1
(?!\w*(\w)(\w)\2\1\w*)	4
(a(bc|de|def))g|\1	1
(?i)([A-Z_]{3,}\s{0,1}[=><-]{1,2}\s{0,1}(['"]?).+?\2)	4
sed -e '/^#/d;s/\(.+\)=\(.+\)/def \1 "\1"\n/g' configfile > formattedfile	1
sed 's/.*\([0-9]\.[0-9]\.[0-9]\-[0-9]\+\)$/\1/' inputfile	1
sed -e '/^#/d;s/^\([^=]*\)=\(.*\)/def \1 \2\n/' configfile > formattedfile	1
([A-Za-z])\\1+", "$1	1
([A-Za-z])\\1{2,}	1
sed -n 's_<env:Envelope\(.*\)<dp:file name="temporary://BackUpDir/backupmanifest.xml">\([^>]*\)</dp:file>\(.*\)_\2_p' tmp2	1
(pattern_that_i_like)(text_to_escape)(\1)	1
(\w)(o)(\1)	1
(\w+)o+\K(\1)	2
sed -i -e "s/\(1234:\).*\(.\)/\1$1\2/"  temp.txt	1
sed -i -e 's/\(1234:\)[^"]*/\1'$1'/'  temp.txt	1
sed -e 's/\(1234:\)[^"]*/\1'$1'/'  temp.txt > temp.txt	1
sed -i -e 's/\(1234:\).*/\1'$1'"/'  temp.txt	1
sed -n '$s/^.* \([1-9][0-9]*\)\.[^.]*$/\1/p' thefile.pgn	1
sed -n '/^.* \([1-9][0-9]*\)\.[^.]*$/{;s//\1/;x;};$!b;x;p' thefile.pgn	1
(\d+)(?!.*\1)	2
--regex-javaspring=/^\s*@Subscribe[a-z \s]+\s([a-zA-Z]+)\(([a-zA-Z]+).*$/@Subscribe \1 \2*/	2
^(?!(.)\1+$|.*(\d+)\2).*	4
string.matches("^(?!(.)\\1+$|.*(\\d+)\\2).*");	4
^(?!.*(.+)\1).+	4
sed -n -e 's/\(.*\)\(,OC,\)\(.*\)/\1/p' countries	1
(a|b) is \1	1
(?P<expr>this|that)|something then (?P=expr)	1
:%s/\([ft][ymdhi]\);/\11;/	1
perl -i -pe 's~(<link\b.+href=\")(?!http)([^\"]*)(\".*>)~\1js/app/globa/less/global.css" />~g' www/file.html	2
perl -pe 's~(<link\b.+href=\")(?!http)([^\"]*)(\".*>)~\1js/app/globa/less/global.css" />~g' www/file.html	2
sed -i.bak 's/\([^"]*"[^.]*\).*/\1"/' file	1
^([^=]+)=(\d+)\n(.*?)\1=\d+	2
sed 's#iso.*= STRING: "\([^".]\+\).*#\1#g' my_file	1
sed -i backup.bak '/<link\b.\+href=\"/{/href="[^"]*http/!{s#\(<link .\+href="\).*#\1js/app/globa/less/global.css" />#}}' www/file.html	1
\b(?!\w*(\w)(\w)\2\1)\w+	4
(?!\((\d)\1\1\) \1{3}-\1{4})	4
^(?!\((.)\1\1\)\s*\1\1\1-\1\1\1\1)\([0-9]{3}\) [0-9]{3}-[0-9]{4}$	4
(?!\1{2}\) \1{3}-\1{4})[0-9]{2}\)	4
^\(([0-9])(?!\1{2}\) \1{3}-\1{4})[0-9]{2}\) [0-9]{3}-[0-9]{4}$	1
(((\d)\3{1,})\d+(?:(?:\n|$)\2\d+)*)	4
s/(\W)\1+/\1/g;	1
s/(.)\1+/\1/g;	1
sed -r -e "s/^.*(0x[a-f0-9]+) \w:.+\\(.+\.exe).*$/\1 \2/i" test.log	2
@"(.+)\1+"	2
(?:(&nbsp;)(?=\1))+	3
\([^ ]\+\)[ ]+\1\1\1	1
(url\()((['"]{0,1})[a-zA-Z0-9-]+.[a-zA-Z]+\3)(\))	2
(\b(\w+))(\s+\2)+	3
(\b(\w+))( \2)+	3
find . -iname *.html |  xargs sed -i 's!"/media/static/\(.*\)"!"{% static "\1" %}"!'	1
(.*\n)+DOCUMENTATION.*(\"\"\"|''')\n-*\n?((.*\n)+?)(\2)(?s:.*)	2
\[([72])([sdch]) (?\!\1)([72])(?\!\2)([sdch])	1
((.)\2)+	3
\b((.)\2)+\b	3
pwd | sed -r 's/.*home(.*)/\1/'	2
sed -n 's/^\(\S\+\s\+\)\{8\}\(.*\)/\2/p'	1
s/^(\S+\s){8}(.*)/\2/p	2
sed -rn 's/^(\S+\s){8}(.*)/\2/p'	2
^(?!.*?(.)\1{2})(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z])(?=\D*\d)(?=.*?[\W_]).{8,20}$	4
^(?!.*?(.)\1{2})(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z])(?=\D*\d)(?=.*?[!@#$%^&*()_=\[\]{};':"\\|,.<>\/?+-]).{8,20}$	4
^(?=.*[!"#$%&'()*+,,\/:;<=>?@\[\]^_`{|}~-])(?!.*(.)\1\1).*$	2
\[(block-([0-9]+))\](.+?)\[\/\1\]	2
((['"])(?:(?!\2|\\).|\\.)*\2)|\/\/[^\n]*|\/\*(?:[^*]|\*(?!\/))*\*\/	2
^(?=.*\d)(?=.*[a-zA-Z])(?!.*(.)\1).{5,}$	2
^.*(?<=from )([a-z_]+).*where\s+([a-z]+)\s?\n?.*\1\.([a-z_]+).*@([a-z]*)	2
update \1 set \3 .write(\4, null, null) where \2	4
(.)\1\1	1
sed -r 's/ +/|/g; s/([[:alpha:]])\|([[:alpha:]])/\1 \2/g'	1
gawk '{print gensub(/([[:digit:]]) +/,"\\1|","g",gensub(/ +([[:digit:]])/,"|\\1","g",$0));}'	4
sed -r 's/([[:digit:]]) +/\1|/g; s/ +([[:digit:]])/|\1/g'	1
sed -r 's/([ ]*<value type=)\"(int)\"(>)([0-9]*)(.*)/echo "\1\\"\2\\"\3$((\4+1))\5"/ge' filename	2
^(\W|^)tms_raw\.([0-9]{4})(-?)(1[0-2]|0[1-9])\2(3[01]|0[1-9]|[12][0-9])([0-2]{1})([0-3]{1}([0-5]{1})([0-9]{1})([0-5]{1})([0-9]{1}))(\.out)(\W|$)	1
\[(code|php)\]([\s\S]+?)\[\/\1\]	2
(.*?)( EUR)\1*	2
(.*?)( EUR)\1*	2
\b(\w+)\s+\1\b	2
^(1|7|99)(?!.*?,\1)(?:,(?:1|7|99))*$	2
^(\d).*\1$	1
:for i in range(10) | s/\v((\w{-})-(\d{1,2}))(.*\2#\3)@!(.*)$/\1\5#\2#\3/e | endfor	4
(\w).*\1	1
(\w)(?=.*\1)	2
<(\w+)><.*?><\/\1>	2
<(?:script|link)[^<]*?\s(?:src|href)=(?<quot>['"])(?<result>(?>(?!\k<quot>).)+)\k<quot>	3
<script[^<]*?\ssrc=(?<quot>['"])(?<result>(?>(?!\k<quot>).)+)\k<quot>|<link[^<]*?\shref=(?<quot>['"])(?<result>(?>(?!\k<quot>).)+)\k<quot>	3
sed -nr 's/^\[(code\])(.*)\[\/\1$/\n\n    \2\n\n/p' file | sed -n l	2
sed 's/ \(10[0-9][0-9][0-9]\)/\n\1/g' file	1
sed 's/[[:space:]]\(10[0-9][0-9][0-9]\)/\n\1/g' file	1
((\d)\2*)	2
<a.+?href\s*=\s*(["'])(?<href>.+?)\1[^>]*>	2
sed 's/ *\(|\) */\1/g' file	1
sed  's/|\([^|]\+,[^|]\+\)|/|"\1"|/g' file	1
regexp_replace(chapters.name,'(\d+)\D*','0\1') as name	4
^.*(.).*(?!\1)$	1
^(.)\1*$	1
^(.)\1*$	1
sed -r 's/.*>([^>]+$)/\1/' file	2
sed 's/\([^,]*\).*/\1/g' employee.txt	1
s/\([^,]*\).*/\1/g	1
^(?:([A-D])(?!.*?\1),)*[A-D]$	2
^(?!.*?([A-D]).*?\1)[A-D](?:,[A-D])*$	4
^[(\w)(\w)][\2\1]$	1
^(\w)(\w).?\2\1$	1
(([A-Z])([A-Z])[0-9]{5}\5\4)	1
\v%(\<(\w+)\>)\zs.*\<\/\1\>	2
97890(\d)00(?!\1)(\d)(?!\2|\1)\d	4
sed -r 's/.*([0-9]+)Kb data.*/\1/'	2
sed -r 's/[^0-9]*([0-9]+)Kb data.*/\1/'	2
sed -r 's/.*\b([0-9]+).*/\1/'	2
(.)\1	1
(.)\1+	1
(.)\1	1
^(.)((?!\1).)((?!\1)(?!\2).)((?!\1)(?!\2)(?!\3))	4
(?=(.)(?!\1)(.)(?!\1)(?!\2)) # Makes sure first 3 characters are unique using lookaheads	4
^(?=(.)(?!\1)(.)(?!\1)(?!\2))(?=.*[a-zA-Z])(?=\D*\d)(?=.*?[$&+,:;=?@#|'<>.^*()%!-])(.{8,})$	4
sed -r 's/^Jan\s[0-9]{2}\s([0-9]{2}).*\bfrom\b=<(.*)>,\s\bsize\b.*/\1 \2/g' output	2
/<table[^>]*class=("|')?.*?\bCLASSNAMEHERE\b.*?\1[^>]*>([\s\S]*?)</table>/im	2
find . -type f  | sed -e 'p;s/\(.*\)~20[0-9]\{6\}-[0-9]\{6\}\(.*\)/\1\2/' | xargs -n2 -d'\n' mv	1
r := regexp.Compile(`(.)\1`)	4
sed -E -e 's/([^:]*:[^:]*):.*/\1/' -e 's/-SUFFIX$//' file	2
s/([^:]*:[^:]*):.*/\1/	2
(?:\$|\£)(\d+(?!\d*,\d)|\d{1,3}((, ?)\d{3}?)?(\3\d{3}?){0,6})(\.\d{1,2})?(?=[^\d,]|, (?!\d{3,})|$)	2
\b(\d+)\b.*?,\1\b	2
awk 'BEGIN{FS="|";} {print($3);}' | sed -r 's/([0-9]+)(.*)/\1/'	2
([abc])\1\1	1
([abc])\\1{2}	1
SELECT REGEXP_REPLACE(COLUMNNAME,'(\/foo1\/foo2\/foo3\-bar1\/p-\d+)\-\d+\.html','\1.html')	4
:%s/<p>\(\d\{4\}\)<\/p>/<h1>\1<\/h1>/g	1
(?:^|,)([^,]+)(?=.*,\1(?:,|$))	2
s/^(.+)$/images\/\1/	2
s/^^\(..*\)$/\1/	1
s/\(.*\)page=\d{1,}\(.*\)/\1number_to_replace\2/	1
sed -n 'H;1h;1!{x;/\nPAGE/ s/[^ ]*\(\n\)/\1/;P;s/.*\n//;h;$p;}' YourFile	1
^(?:€ ?(?:[1-9][0-9]{0,2}(?:([ .])[0-9]{3}(?:\1[0-9]{3})*|[0-9]*)(?:,[0-9]{2})?|0?,[0-9]{2})|(?:[1-9][0-9]{0,2}(?:([ .])[0-9]{3}(?:\2[0-9]{3})*|[0-9]*)(?:,[0-9]{2})?|0?,[0-9]{2})(?: ?€)?)$	1
^(?=(.))(?:€ ?)?(?:[1-9][0-9]{0,2}(?:([ .])[0-9]{3}(?:\2[0-9]{3})*|[0-9]*)(?:,[0-9]{2})?|0?,[0-9]{2})(?: ?(?!\1)€)?$	1
([a-z])\1	1
:%s/\(<text>\n.*\)<\(.*\n.*<\/text>\)/\1\&lt;\2/g | %s/\(<text>\n.*\)>\(.*\n.*<\/text>\)/\1\&gt;\2/g	1
:%s/\(<text>\n.*\)>\(.*\n.*<\/text>\)/\1\&gt;\2/g	1
find /my/path/ -type f -name '*_*.viz' | sed -r 's/([^_]+).*/\1/' | sort | uniq -d	2
find /path/to/files type f -name '*_*.viz' | sed -r 's/([^_]+).*/\1/'	2
sed 's/DATA\(.*\)/&#\1/;s/.*DATA\(.*\)#\1/\1/' YourFile	1
\b(?=(?=\w{3,})\w*(\w)\w*\1\w*\1\w*|(?=\w{2})(\w)(?=\2))\w{2,}\b	4
\b(?!\w*(\w)\1\1\w*|(\w)\2)\w*\b	4
\b(?!(?=\w{3,})\w*(\w)\w*\1\w*\1\w*|(?=\w{2})(\w)(?=\2))\w{2,}\b	4
\b(?=\w*(\w)\1\1\w*|(\w)\2)\w*\b	4
<!--\s*begin:\s*(.+)\s*-->[\s\S]*<!--\s*end:\s*\1\s*-->	2
([^aeiou])\1+|([^aeiou\s])	1
(?=[b-df-hj-np-tv-xz])(.)(?!\1)(?<!\1\1)	1
^(?!(?:^|.*,)([^,\n]*),.*\1(?:,|$)).*$	4
^(?!.*(^|,)([^,]+),.*\2(,|$)).*	2
sed -r 's/^(.{4})(.{2})(.{2}) (.{2})(.{2})(.{2})000/\1-\2-\3 \4:\5:\6/;s/,0$//' input.csv	1
((\w)\2)+|([^aeiou\s])	3
\b\w+([^aeiou])(\1)\w+\b	1
(.)\1{2,}	1
"(?i)\\b(\\w+)(((\\.{3}\\s*|,\\s+)*|\\s+)\\1)+\\b"	3
(?i)\b(\S.*\S)[ ,.]*\b(\1)	2
t\((['"])\K.*?(?=\1\))	1
/<(h[2-4])>([^<>]+)<\/\1>/g	2
/<(h[2-4])>((?:(?!<h\d+\b).)+?)<\/\1>/g	2
(?:[a-zA-Z0-9]|([.])(?!\1)){5,20}$	1
(\bmodule\b[^()]+\([^;]*?)(\\wire(\d+)\[(\d+)\][^;]*\wire\3\[(\d+)\])	2
"^(0?[1-9]|[12][0-9]|3[01])([-./])(0?[1-9]|1[012])\\2((19|20)\\d\\d)$"	1
'^(\w{3})\w*\1$'	1
^(\w)(\w)(\w)\w*\3\2\1$	1
awk '/from=<([^>]*)>/ { print gensub(/.*from=<([^>]*)>.*/, "\\1", "1");}' mail.log	2
s|(\#include.*)\\|\1/|	2
(^[0-9]{4}(-[0-9]{2}){2}([^|]+\|){3}).*(?!\1)	2
(^[0-9]{4}(-[0-9]{2}){2}([^|]+\|){3})(?!\1)	2
(([0-9]{4})(-[0-9]{2}){2}([^|]+\|){3})((.(?!\2))*)	3
sed 'N;s/^\([^#]*\)#\([^\n]*\)\n\1/\1#\2/' database	1
perl -p0E 'while( s/(^|\n)(.+?#)(.*)\n\2(.*)/$1$2$3 $4/ ){}' yourfile	2
sed 'N;s/^\(\([^#]*#\).*\)\n\2/\1#/;P;D' file	1
event += +(\w+) +name+ = +\w+ +((?!\1)\w+)\b	2
/\\[(.*?) (.*?)](.*?)\\[\\/\\1\\]/msi	2
perl -p -i -e 's|(#include ")(.*\.hpp)|\1project-head/\2|g' test_file.hpp	2
\b(?:(?<![-:\.])(?:(?:[0-9A-Fa-f]{2}(?=([-:\.]))(?:\1[0-9A-Fa-f]{2}){5})|(?:[0-9A-Fa-f]{4}(?=([-:\.]))(?:\2[0-9A-Fa-f]{4}){2}))(?![-:\.])|(?:[0-9A-Fa-f]{12}))\b	1
\b((?<![-:\.])([0-9A-Fa-f]{2}(?=([-:\.]))(\3[0-9A-Fa-f]{2}){5}|[0-9A-Fa-f]{4}(?=([-:\.]))(\5[0-9A-Fa-f]{4}){2})(?![-:\.])|[0-9A-Fa-f]{12})\b	4
%s/<.*>\(.*\)<.*>/\1/g	1
s/\b (\D)/_\1/g	1
\\begin\{(align\*?|eqnarray)\}(.*?)\\end\{\1\}	2
(a|b).+(^\1)	1
FIELD=(.{1,4})\1{4,};	1
FIELD=((.)(.)?(.)?(.)?)\1{4,}(\2|\3|\4|\5)*;	3
([\"\'])(.*?(?:(\\"|\\').*?\3.*?)*?)\1	2
string map {\u0000 \" \" {}} [regsub {"(.*)"} $sample \u0000\\1\u0000]	1
sed -r 's/[^"]*"([^"]+)"[^"]*/ \1 /g' /var/log/syslog	2
sed -r 's/[^"]*"([^"]+)"[^"]*/ \1 /g;s/([0-9]{1,3}(\.([0-9]{1,3}){2})\.([0-9]+))\.[0-9]+/\1.0/g' /var/log/syslog	2
sed -r 's/([0-9]{1,3}(\.([0-9]{1,3}){2})\.([0-9]+))\.[0-9]+/\1.0/g' /var/log/syslog	2
(m).\1	1
(([acgt])\2+)	2
((?P<letter>[a-zA-Z])(?P=letter)+)	2
(?!(?:one|two|three|four|five|six|seven|eight|nine|oh|zero))\b(\w+) \1\b	2
\b(\w+) \1\b	2
grep -Proh "\b(\w+) \1\b" | grep -Prohv "?(?:one|two|three|four|five|six|seven|eight|nine|oh|zero)"	2
echo "$str" | sed -r "s/#\!.*?/(.*?)\>/\1/g"	2
:s/\v:([a-z_]+)/'\1'/g	2
sed 's/.*\(0\/[0-9]\+\).*/\1/g' input.txt	1
"([a-z\\d])\\1{3,}"	1
<(\d+)>.+?</\1>	2
@([^\{]+)\{(\1:\1)(,\2)*\}@	4
(...) D\374sseldorf (...)	1
paul@paul:~$ sed 's,\\\([0-3][0-7][0-7]\),\\o\1,g' file	1
sed "s/^[^⎵]*⎵\([^⎵]*\)⎵.*/\1/"	1
sed $'s/^[^\t]*\t\([^\t]*\)\t.*/\\1/'	1
perl -pe "s/[0-9]+\t([-A-Za-z ]+)\t-?[0-9]+\.[0-9]+\t-?[0-9]+\.[0-9]+\t[A-Z]{2}/\1/" city_list.txt > city_list_clean.txt	2
sed 's/Convert(\(.*\),\(.*\))/CAST(\2 AS \1)/g'	4
^(?:\+?1?[-.\s]?)(\d{3})([-.\s])(\d{3})\2(\d{4})$	1
:\/\/\w+\/(\w+)\/(?=\1)	2
\b(\w+)\b(?=.*\b\1\b)	2
sed 's/\([^/]*\).class/[\1\\$.*\\.class]/g'	1
@"^\(\d{3}\)([- ]?)\d{3}\1\d{4}$"	1
(.)\1{9,}	1
([A-Za-z])\1{9,}	1
%s/^\([^:]*:[^:]*:[^:*]\):\(.*\)/\1:1:\2/	1
([a-z])([a-z])([a-z])\3\2\1	1
([b-df-hj-np-tv-xz])\\1+	1
(\w*):([0-9]*).*\1:-([0-9]*)	2
(?=\b(\w+)\b:([0-9]+).*\1:-([0-9]*))	4
(\w*):([0-9]+)(?=.*\1:-([0-9]*))	2
<(img|a|div).*?>.*?</\\1>	1
sed -r -i.bak 's/-- Database: (.*?)\n/CREATE DATABASE \1\n/g' file.sql	2
sed -r -i.bak 's/-- Database: (.*)/CREATE DATABASE \1/' file.sql	2
\s([^:]*)\s?r?:([0-9]+)(?=.*\1:-([0-9]*))	2
.*?((\S+):\d+)(.*)(\2:-\d+)|.+$	2
eval $(sed 's/\([^()]*\)(\([A-Z0-9]\{2\}\)\([^AP]*[AP]\)) */\1 \2 \3" "/g ; s/\([^ ]\)\([0-9]\{2\}:[0-9]\{2\}[AP]\)/\1 \2/g ; s/ "$//g ; s/^.*/array=("&)/' file)	2
(\S+)(?=.*\b\1\b)	2
^(?!\S*([a-f])-\1)([a-f](?:-[a-f]){2,10})$	4
^(?!\S*([a-f]+)\S*-\1(?:-|$))[a-f](-[a-f]){2,10}	4
regexp_filter = (?i)\b([^\s]+?[^es])s\b => \1	2
regexp_filter = (?i)\b([^\s]+?[^es])s\b => \1s	2
regexp_filter = (?i)\b([^\s]+?[^es])s\b => \1s \1	2
s/(.*)@/\1\n/	2
echo "path-to-csv-on-s3/foo.csv000644 000765 000024 00132244376 12501623550 027273 0ustar00hillsstaff000000 000000 \"\",\"id\",\"price\", \"lala\", \"hooha\"" | sed -e '1 s/^.*\(\"\".*\)/\1/'"","id","price", "lala", "hooha"	1
sed -e '1 s/^.*\(\"\".*\)/\1/'	1
^(.)\1{1,}$	1
^(.)\1+$	1
while {[regsub -all {\y((\w+)\y.*?)\y\2\y\s*} $a {\1} a] > 0} {continue}	1
(.*)\1	2
(.)\1	1
(\w)\1	1
^(?!(\w)\1)	4
^(?!.*(\w)\1).*	4
^(?!.*(\w)\1)	4
.*(\w)\1	1
(?!.*(\w)\1)	4
(?:(\w)(?=\1{1}))	1
(\b\w*(\w)(?=\2)\w*\b)	2
^(\d)(\1+$)\d*$	2
^([0-9])\1{2}\.\1{3}\.\1{4}$	1
^(\d){2}\.\1{3}\.\1{4}$	1
"(\b\w+\b)(?=.*?\b\1\b)"	2
\b(\w+)\b(?=(?:(?!\b\1\b).)*\b(\1)\b(?:(?!\b\1\b).)*$)|\b(\w+)\b(?=.*?\b\3\b)	4
\+?\(?([0-9]{2})\)?([ .-]?)([0-9]{4})\2([0-9]{4})	1
string pattern = @"\+?\(?([0-9]{2})\)?([ .-]?)([0-9]{4})\2([0-9]{4})"	1
\+?\(?([0-9]{2})\)?([ .-]?)([0-9]{4})\2([0-9]{4})	1
string pattern = "\\+?\\(?([0-9]{2})\\)?([ .-]?)([0-9]{4})\\2([0-9]{4})"	1
^(?!(xx+)\1+$)	4
^(?!(xx+)\1+)$	4
^(?!(x{2,})\1+$)	4
^(?!(xx+)\1+$)	4
^(?!(xx+)\1+)$	4
Regex.Replace(str, @"(.)\1*", m => m.Value.Length + m.Groups[1].Value);	1
^[0-9a-f]{1,2}([\.:-])[0-9a-f]{1,2}(?:\1[0-9a-f]{1,2}){4}$	1
^(\d)\1+-(\d)\1+-(\d)\1+$	1
^(?!(\d)\1+-(\d)\1+-(\d)\1+$).*	4
:1,$ s/(\["\S*)\s+(\S*"\])/\1\2/	2
<!--\s?BEGIN (\w+) \s?-->(.*?)<!--\s?END \1\s?-->	2
sed 's/\(.*_\)\(.\{5\}\)-\([0-9][0-9]\)_\([0-9][0-9]\.\)/xyz_20\3-\2_0\4/'	1
s/0([0-9]{3})\./\1./	1
sed -r 's/([^_]+)_([^-]+)-([^-]+)-([^_]+)_([^.]+)/xyz_20\4-\2-\3_0\5/;s/0([0-9]{3})\./\1./' <<<'abc_03-24-15_12.jpg'	2
sed -r 's/([^_]+)_([^-]+)-([^-]+)-([^_]+)_([^.]+)/xyz_20\4-\2-\3_0\5/;' <<<'abc_03-24-15_12.jpg'	2
/(a)/\1\1/g	1
/(.)/\1\1/g	1
/(.)$/\1\1/mg	1
\w(\D+)(?:,\s+\1\b,)+/gm	2
(\b[^,]+),(?=.*\b\1\b)	2
(?:<(h\d)>[^<>]*?)(?:<(?!\2).*>)\K(.+?)<\/\1>	4
(?:<(h\d)>([^<>]*?))(?:<(?!\2).*>)\K(.+?)<\/\1>	2
(.)\\1+	1
\b130001(\d),\1\d{2}\b	1
\w*(\w)\1\w*	1
^(?!([0-9])\1{2}[-. ]*\1{3}[-. ]*\1{4}$)	4
^(?=(?!([0-9])\1{2}[-. ]*\1{3}[-. ]*\1{4}$))\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$	4
^(?!(\d)([.-]?\1)+$)(\d{3}[-.]?\d{3}[-.]?\d{4})	4
sed -r 's/(a[[:digit:]]{6})[[:space:]]+/\1\n/' old > new	1
sed -r 's/(a[0-9]{6}) +/\1\n/' old > new	1
sed ':a $!{ N; ba }; s/"\([^"]*\)"/``\1'"''"'/g' filename.tex	1
^(?!.*([1-4]).*\1)[1-4]{0,4}$	4
\b(?:([1-4])(?![1-4]*\1)){1,4}\b	2
(["']).*?\1(?![^\p{L}])	1
(["'])(?:(?!\1).)*\1(?=\p{L}(?:\1(?:(?!\1).)*+\1|[^'"])*$)	2
(["'])(?:(?!\1).)*\1	1
(?:\1(?:(?!\1).)*+\1|[^'"])*	4
%s/\(http.*\(jpg\|png\)\)\(.*\|\_s\)/\1/g|%s/\n\=	1
%s/\(http.*\(jpg\|png\)\)\=\(.*\|\_s\)/\1/g|%s/\n\=	1
%s/\(http.*\(jpg\|png\)\)\=\(.*\|\_s\)/\1/g	1
db.zips.find( { city: { $regex: '^(.).*\\1$' } }, { city: true } ).count()	1
sed 's/"\([^"]*\)"/\1/' filename	1
sed '/^password =/ s/"\([^"]*\)"/\1/' filename	1
sed '/pattern/ s/"\([^"]*\)"/\1/' filename	1
sed 's/password = \"\([^"]*\)\"/password = \1/'	1
sed 's/\b\(\w\)\b/0\1/g' file	1
(.*)bc\1	2
(.+)bc\1	2
%s/\([A-Za-z]\+\)\ze:/"\1"/g	1
(?s)<product>(?:\s*<(\w+)>[^<]*?<\/\1>\s*)*?\s*<category>Drinks<\/category>(?:\s*<(\w+)>[^<]*?<\/\2>\s*)*?\s*<\/product>	2
sed -n 's/.*helloThereId=\([0-9]\{1,\}\).*/\1/p' file	1
sed "s/\(^.{70}\)/\1\n\r/g" firstMondayNoParas2.txt > firstMondayLined.txt	1
perl -i -pe 's/(.{70})(?!$)/\1\n/g' file	1
sed "s/^\(.\{70\}\)/\1\n\r/"	1
<a\\s[^>]*href=([\"']?)(?>https?|ftps?):\/\/(?![^'\">]*www[^\"]+?\\1)([^'\">]+?)\\1[^>]*>(.*?)<\\/a>	2
for i in *; do j=`echo $i | sed -r 's/(.*?Mod[0-9][0-9])(.*?\.bdf)/\1_temp\2/g'`; mv "$i" "$j"; done	2
gsub('(.+?)\\1', '', str)	2
\b(\S+?)\1\S*\b	2
\\b(\\S+?)\\1\\S*\\b	2
sed -ne :1 -e 'p;s/\(.*·\)..*/\1/;t1'	1
s/\(action\s*=\s*["'][^"']*\)\.php\(["']\)/\1\2/g	1
(?=(.+).*\1)	4
perl -0777 -pe's/(^.+?)\.doc\s*.+?[\:]\s*(CC.+?xml)\./\2-\1.xml/igs'	2
perl -pe's/(^.+?)\.doc\s*.+?[\:]\s*(CC.+?xml)\./\2-\1.xml/ig'	2
(["']).....\1	1
\w*([aeiou])\w*\1+\w*	1
.*([aeiou]).*\1.*	1
^(?!.*(.)\1)[a-z]+$	4
\b(?![a-z]*([a-z])\1[a-z]*)[a-z]+\b	4
(['\"])(?:\\1|.*?\\1)	1
(['"])(?:\\.|.)*?\1	1
(?<!\\)(['"])(?:\\\1|(?!\1).)*\1	1
^(?=(?!([0-9])\1{2}[-. ]*\1{3}[-. ]*\1{4}$))\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$	4
^(?:\(\d{3}\) ?\d{3}-\d{4}|\d{3}([.-]?)\d{3}\1\d{4})$	1
(.).*\1	1
([A-Za-z]).*\1	1
sed -r 's/(^|[^_])str([^_]|$)/\1replacement\2/g'	1
(?:(.)\1+)*\K(.|$)	1
(?:(.)\1+)+|(.)	1
(^(?=.*\d)(?=.*[a-zA-Z]).{3,16}$)\1{2,}	2
^(?=.*[0-9])(?=.*[a-zA-Z])(?!.*(.)\1\1.*).{3,16}$	2
(.+)\h+(?=\1)	2
([a-zA-Z ]+) (\1)	2
^(.*?)(?=\s\1)	2
([abc]+).*\1	2
LEVEL=$(sed -E "s/.*_([0-9]+).*/\1/" <<< $imgs)	2
sed "s/.*_\([0-9]\+\).*/\1/" <<< "AA13_11BB"	1
LEVEL=$(sed "s/.*_\([0-9]\+\).*/\1/" <<< $imgs)	1
^(?!.*(?:abc|bcd|cde|def|efg|fgh|ghi|hij|ijk|jkl|klm|lmn|mno|nop|opq|pqr|qrs|rst|stu|tuv|uvw|vwx|wxy|xyz|012|123|234|345|456|567|678|789|([\da-z])\1{2}))[\x20-\x7E]+$	4
sed 's/\([^\\]\|^\)=/\1\t/g' file	1
(\d{2,}?)\1	1
[0-9]+\.0*+[0-9]*?([0-9]{2,})\1[0-9]*	1
(.*)\1	2
(.{5,})\1	1
^(\s*)\*\1$	2
sed ':a; s/\([^|]\)"\([^|]\)/\1'\''\2/g; ta' file	1
sed 's/\([0-9]\) \([^0-9]\)/\1,\2/g;s/\([^0-9]\) \([0-9]\)/\1,\2/g'	1
sed -E 's/ ([0-9]+) /,\1,/;s/ ([0-9-]+)$/,\1/' file	2
sed -r 's/^([^ ]*) ([0-9]*) (.*) /\1,\2,\3,/' file	2
sed -r 's/ ([0-9]*) (.*) /,\1,\2,/' file	2
y[grepl("[aeiou]{2}r", y, perl=T) & !grepl("(.)\\1r", y, perl=T)]	1
(.)\1*(?<result>.+?)\1	2
\#\{()\w+\1\}	1
^(?:(?!(?:abcd|bcde|cdef|defg|efgh|fghi|ghij|hijk|ijkl|jklm|klmn|lmno|mnop|nopq|opqr|pqrs|qrst|rstu|stuv|tuvw|uvwx|vwxy|wxyz|(a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z)\1{3})).)*	4
^(.)[^p].*\1$	1
^(.)(?!p).*\1$	1
^(.).*\1$	1
^(.)[^p].*\1$	1
\(.*\([[:<:]][[:alpha:]]*[[:>:]]\).*\)\(\2\)\(.*\)	1
sed 's/\(.*\([[:<:]][[:alpha:]]*[[:>:]]\).*\)\(\2\)\(.*\)/\1russians\4/'	1
sed -n 's#^Length (seconds):[^0-9]*\([0-9.]*\)$#\1#p'	1
sed -r -e 's/.*(AS[0-9]+) ([^"]+).*/"\1","\2"/'	2
sed -r -e 's/.*(AS[[:digit:]]+)[[:space:]]([^"]+).*/"\1","\2"/'	2
:%s/private\s\(\w*\)\s\(w*\)/private \1 \L\2/g	1
sed 's/.*my_val_="\([0-9.]\{1,\}\)".*/\1/' file	1
sed -r 's/.*my_val_="([0-9.]+)".*/\1/' file	2
sed -nr 's/.*my_val_="([0-9.]+)".*/\1/p' file	2
(?!.*\b(\w+)\b.*\b\1\b)	4
^(?!.*\b(\w+)\b.*\b\1\b)Here are a few different colors: (\w+), (\w+) and (\w+)$	4
(?i)^(?<q>['])[%\p{Zs}\p{L}\p{N}|()]*\k<q>$	1
(?i)(['""]?)input_csv\1	1
sed -i '/![^#]/ s/\(^.*BBB.*$\)/#\ \1/' file	1
sed -i '/![^#]/ s/\(^.*BBB.*$\)/#\1/' file	1
sed 's#.*:\([0-9]*\)".*#\1#' filename	1
sed -n "s/.*websitedata:\/\/somenumber:\(.*\)property=something.*/\1/p" filename > output_filename	1
sed -r 's/([a-z]+) ([a-z]+)*/\1/g' <<< 'foo bar foo bar foo bar foo'	2
sed -r 's/([a-z]+) ([a-z]+)/\1/g' <<< 'foo bar foo bar foo bar'	2
(?<one>[1-9])\-(?<two>\1)	1
(?<one>[1-9])\-(?<two>\g{one})	1
(\d+)(\s+\d+){\1}	2
(Easting|Northing) Begin([\s\S]*?)\1 End	2
(\S+)\s+=\s+("?)(.*)\2	2
(.{2,})\1+	1
^([0-9])\\1+$	1
^([0-9])\1+$	1
:s/_\(\w\)/\u\1/g	1
:%s/\(get\)\([a-zA-Z]*\)_\(\w\)/\1\2\u\3/g	1
:%g/public function [gs]et/:s/\(\$.\+\)\@<!_\(\w\)/\u\2/g	1
:%g/public function [gs]et/:s/_\(\w\)/\u\1/g	1
$regexp = "/<([\w-]+)\s*([^\/>]*)\s*(?:\/>|>(.*)<\/\s*\\1\s*>)/s";	2
(\w+\b)(?!.*\b\1\b)	2
^(?!.*(.)\1)(^[1-9][0-9]{8}$)	4
sed -n 's/.*\"\([^"]\+\)".*/\1/p' <<< 'some stuff "A234DG3" maybe more stuff'	1
s/^[<]p[>](.+)[<][/]p[>]/\1[<]br[>][<]br[>]/	2
s/^<p>(.+)<\/p>/\1<br><br>/;	2
s/<p>(.+?)<\/p>/\1<br><br>/si	2
\[\!([\s\S]+?)\]\s+([\s\S]+?)\s*\[@\1\]	2
^(?:([1-4])(?!.*\1)){4}$	2
grep "EID:" in.txt | sed 's/\(.*\EID:......\).*/\1/g' | sed 's/^.*EID://'	1
(?<N>[01])+(?<-N>\k<N>)+(?(N)(?!))	3
<(th|td)>.*?<\/\1>(*SKIP)(*F)|\n	2
<(th|td)>.*?<\/\1>	1
(?s)<(t[hd])[^>]*?>.*?<\/\1>(*SKIP)(*FAIL)|\n	2
^(?:a(?=a*(\1?+b)b*(\2?+c)))+\1\2$	4
sed 's/^\[....\] . \([A-Za-z0-9]*\).*/\1/' file	1
^((?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%&*]))((.)(?!\3{3})){0,100}$	2
crontab -l | sed -e 's/\([0-9]*\) \([0-9]*\) \([0-9]*\) \([0-9]*\) \(.*#customer1 #type1 #editable\)/30 22 25 05 \5/'`	1
sed -r -e "s/:\/\/(www\.)?${domain}/:\/\/\1${1}\.${domain}/g" "/vagrant/repositories/apache/$domain/_sql/$(basename "$file")" > "/vagrant/repositories/apache/$domain/_sql/$1.$(basename "$file")"	1
s/([^ ]) ([^ ])/\1_\2/g	1
$ sed -E -e '/CREATE TABLE `archive_exported_problems`/,/AUTO_INCREMENT=/ {s/(AUTO_INCREMENT)=[[:digit:]]+/\1=0/;}' file	1
s/(AUTO_INCREMENT)=[[:digit:]]+/\1=0/	1
COMMAND=`echo "$QUERY_STRING" | sed -n 's/^.*com_tex=\([^&]*\).*$/\1/p' | sed "s/%20/ /g"`	1
((pid\d)\s*(ConnectionString\d))(?!\1).*\2\s*RequestString\d	2
(\b\d+\b)(?=.*?\b\1\b)	2
(^|[^0-9])([0-9]+)(?=[^0-9]).*[^0-9]\2([^0-9]|$)	2
\b(\d+)\b(?=.*\b\1\b)	2
sed -e 's/\(\b[[:alpha:]]*\)\([[:digit:]][[:digit:]][[:digit:]]\)\(\b[[:alpha:]]*\)/\2/'	1
/\s*((ABC|A)(/\2+)*)\s*/i	3
/\s*((ABC|A)(/\2+).*)\s*/i	2
^(?!.*(.)\1+).*$	4
(.)\1	1
sed 's/.*ds:\([^[:space:]]\+\).*/\1/' /proc/drbd	1
sed 's/\(;[0-9]\{1,\}\)\.\([0-9]\{4\}\)/\1,\2/g' file	1
sed -r 's/(;[0-9]{1,})\.([0-9]{4})/\1,\2/g' file	1
sed 's/\(;[0-9]\+\)\.\([0-9]\{4\}\)/\1,\2/g'	1
echo "var/opt/test/war/test-webapp-4.1.56.war" | sed -nre 's/^[^0-9]*(([0-9]+\.)*[0-9]+).*/\1/p'	2
echo "Version 4.2.4 (test version)" | sed -nre 's/^[^0-9]*(([0-9]+\.)*[0-9]+(-[a-zA-Z]+[0-9]+)).*/\1/p'	2
sed -n 's/.*\mem *= *\([0-9]*\).*/\1/p'	1
s|.*(chicken).*|\1|	1
(?:(,?)\d{3}(\1\d{3})*)?	3
^\d{1,3}(?:(,?)\d{3}(\1\d{3})*)?(?:\.\d{2})?$	3
Exec=env qs='echo $1 | sed 's/mailto:/To=/' | sed -e 's/\(To==1&\).*\( *@=2&\)/\1\2/' | sed 's/\?subject=/\&Subject=/'' epiphany %U --new-tab http://compose.mail.yahoo.com/?$qs&#8221;	1
sed -e 's/\(To==1&\).*\( *@=2&\)/\1\2/'	1
sed 's/<CITY>\(.*\)<\/CITY>.*<COUNTRY>\(.*\)<\/COUNTRY>/<ADDRESS>\1 \2<\/ADDRESS> /g'	1
sed 's/<CITY>\(.*\)<\/CITY>.*<COUNTRY>\(.*\)<\/COUNTRY>/<ADDRESS>\1 \2<\/ADDRESS> /g'  <<< "go to <CITY>rome</CITY> <COUNTRY>italy</COUNTRY>"	1
sed -E 's/<CITY>(.*)<\/CITY>.*<COUNTRY>(.*)<\/COUNTRY>/<ADDRESS>\1 \2<\/ADDRESS> /g'	2
(?<=((\d{4})-(\d{2})-(\d{3})-(\d{4})).*?)\2\3\4\5	2
((?<=((\d{4})-(\d{2})-(\d{3})-(\d{4})).*?)(?!\3\4\5\6)\d{13})|(((?<=((\d{4})(\d{2})(\d{3})(\d{4})).*?)(?!\10-\11-\12-\13)((\d{4})-(\d{2})-(\d{3})-(\d{4}))))	4
((?<=((\d{4})-(\d{2})-(\d{3})-(\d{4})).*?)(?!\3\4\5\6)\d{13})	2
([0-9]{3})(?!.*?\1.*$)	2
(?P<st>[a-z]).*(?P=st)$	1
^([a-z]).*\1$	1
grep -o 'test .*</singleline>' * | sed -e 's/test \(.*\)<\/singleline>/\1/'	1
sed -i 's/^# \(.*\)$/---\ntitle: \"\1\"\n---/' *	1
find . -type f -name "*.java" -exec sed 's/^# \(.*\)$/---\ntitle: \"\1\"\n---/' "{}" > "{}.bak" \; -exec mv "{}.bak" "{}" \;	1
%s/\([\S"']\)\@<!\(\(t\)rue\|\(\(f\)alse\)\)\([\S"']\)\@!/'\3\5'/g	1
sed -r 's/^(([^@]*@){2})/\1\n/;ta;:a;/\n[0-9]?$/s/\n//;t;/\n(1[0-9]|[0-9])([0-9][0-9]?)/s//\1@\2\n/;ta;/\n([0-9]?[^0-9\n]) ?/s//\1\n/;ta' file	2
sed 's/\b(throw some::lengthy::exception());/throw CreateException(\1);/g'	1
sed -r '/^throw/s/throw (.*);$/throw CreateException(\1);/' file	2
sed -r 's/\([0-9]+\.[0-9]*\)\s*/\1/g'	1
s/\n\([^0-9]\)/ \1/gp	1
sed ':a;N;s/\n\([[:alpha:]]\)/ \1/;ta;P;D' file	1
sed -i "/^config wifi-iface 'priv'/,/^config /s/\( disabled\) '1'/\1 '0'/" wireless	1
\[(?<number>[0-9])\].+?\[\/\k<number>\]	1
\[([0-9])\].+?\[\/\1\]	1
sed -i "/client $wireless_prefix\\$iface_netsize/ {n; s/\(\W*secret\W*=\W\).*/\1$key/}" $radius_clientsfile	1
{n;s/\(\W*secret\W*=\W\).*/\1$key/}	1
(.{2,})(?=.*?\1)	2
sed 's/\(\(^\||\)[^|,]*,\) \?\|, \?/\1 /g;'	1
sed -r 's/((^|\|)[^|,]*,) ?|, ?/\1 /g;'	2
sed  's%<\([^>]*Name\|[^>]*SSN\|Address[^>]*\)>[^<]*%<\1>***%g' file	1
sed -E 's%<([^>]*Name|[^>]*SSN|Address[^>]*)>[^<]*%<\1>***%g' file	2
gsub(x = "AXA", pattern = "(A)(X+)(\\1)", replacement = "\\1\\1\\1")	2
^(.)(?!\1)	1
((?<!\\)["']).+?(?<!\\)\1	1
String rx = "^(.).*?((?!\\1).).*?((?!\\1|\\2).).*?((?!\\1|\\2|\\3).).*?$"	4
sed ':l s/\(android.*\)\t\t\t*\(.*android\)/\1\t\2/;tl' input	1
(\w+)\1+	2
(\w+\s*)\1+	2
(.).*?((?!\1).).*?((?!\1|\2).).*?((?!\1|\2|\3).).*	4
(.)(?>.*?((?!\1).))(?>.*?((?!\1|\2).))(?>.*?((?!\1|\2|\3).)).*	4
input.matches("(.)(?>.*?((?!\\1).))(?>.*?((?!\\1|\\2).))(?>.*?((?!\\1|\\2|\\3).)).*")	4
input.matches("(.).*?((?!\\1).).*?((?!\\1|\\2).).*?((?!\\1|\\2|\\3).).*")	4
((.)\2*)	2
regsub -all {^[0-9]+\.([0-9]+)\.([0-9]+)\.[0-9]+$} $a {\1 \2} b	2
((['"])(?:(?!\2|\\).|\\.)*\2|\/\/[^\n]*(?:\n|$)|\/\*(?:[^*]|\*(?!\/))*\*\/)|\^	2
echo "cos(2*a)^2+sin(3*b)^2+m1^2*m2^2*cos(4*c)"  | sed 's/\(.*\)\^2/\1\*\1/g'	1
^.*?([.?!:;,])\1.*	1
%put %sysfunc(prxchange(s/(\w+)/\1_/,-1,%bquote(&st1)));	4
(['"])\1	1
r /(.*)/ \i\/\1/	2
sed -nr -e "s/^(REM GENRE )(.*)\r/\2/p" *.cue	2
sed -nr -e 's/^(REM GENRE )"?([^"\r]*)/\2/p' *.cue	2
sed -nr 's/^REM GENRE "?([^"]*)"?\r?/\1/p' *.cue	2
sed -nr '/^REM GENRE "?(([^"]|\\")*)"?\r?/ { s//\1/; s/\\"/"/g; p; }'	2
\[(text)\s*=\s*"([^"]*)"\](.*?)\[\/\1\]	2
\[(b|i|u|s)\]\s*(.*?)\s*\[\/\1\]	2
"/\[(b|i|u|s)\]\s*(.*?)\s*\[\/\\1\]/i"	2
'/\[(b|i|u|s)\]\s*(.*?)\s*\[\/\1\]/i'	2
(?m)^(?(?=\110\x65\x6c{2}\157)(?:\110\x65\x6c{2}(?P<o>\157)[\x20\x2f]?\127\k'o'\x72\x6c\x64|\110\x65\x6c{2}\157$)|\127\157\x72\x6c\x64$)	1
sed -r 'h; s|(.*dn=([^&]+).*)|<li><a href="\1">\n</a></li>|; x; s//\2/; s/foo/bar/; G; s/(.*)\n(.*)\n(.*)/\2\1\3/' filename	2
^(([OMHE])(?!.*\2)){4}$	2
^(?:([OMHE])(?!.*\1)){4}$	2
sed 's/^.*Counter32: \(.*\)$/\1/'	1
echo "dir1|file1|dir2|file2" | sed 's/\(\([^|]\)|\)*/-f \2\/\4 -f \6\/\8/'	1
sed 's/\([^|]*\)|\([^|]*\)|\?/-f \1\/\2 /g;s/ $//' file	1
$ tr -d '\n' < file.html | sed -n 's/.*City:<\/p><\/td>.*<p>\(.*\)<\/p><\/td>.*/\1/p'	1
-([^\/\s]+)(?=.*-\1)	2
cat myfile.txt| sed s/\(.+\)\.png/\/full\/path\/\1/g | ack /full/path	1
sed -E "s/(.*)\.png/\/full\/path\/\1/g" <<< "lolsed_bulsh.png"	2
sed -r 's~(\"diffuseTexture\"\:\{\"name\"\:\")([^\"]*\.png)\"~\1/assets/babylon/\2"~g' file	2
sed -r 's|"name":"([^"]*.png)|"name":"/path/to/prefix/\1|g' test.json	2
(\"|\').*?(\1)	1
(a).*\1.*b	1
\b(a)\b.*\1.*\bb\b	1
^(\d+)\..*\.\1$	2
^([^.]+).[^.]+.\1$	2
(\w)\1+	1
(\w)\3+	1
((\w)\2\2)\2+	1
((\w)\2{2})\2+	1
(\w)\1\1\K\1+	1
^(\d{2})([\/-])(\w{3}|\d{2})\2(\d{2,4})$	1
^([0-9]{2})([/-])([a-zA-Z]{3}|[0-9]{2})\2([0-9]{2,4})$	1
^(\p{N}{2})([/-])(\p{L}{3}|\p{N}{2})\2(\p{N}{2,4})$	1
grep -n '' YourFile | sed 's/^\([0-9]*\):\(.*\)/\2 line \1/'	1
((.)\2{9})\2+	1
([a-z])\1+	1
([a-z])(?:.*)\1+	1
([a-zA-Z]).*(\1)	1
([a-z])(?:.*)(\1)+	3
(.{5,})\1	1
(.{5,})\1	1
^(?>\S+[^\S\n]+){3,}?(\S+?)\K\1(?!\S)	2
(\b(?:([A-Za-z0-9])(?!\2{2}))+\b)	3
\b(?=\S*(.)\S*\1)(?!\S*(\S)\S*\2\S*\2)[a-zA-Z0-9]+\b	4
sed -r 's/^(.*)$\n^(.*)$/\1/mg' filename	2
("|')(.*.svg)\1	2
("|')(.*?\.svg)\1	2
(["'])(.*?\.svg)\1	2
sed "s/\(.*: \)\(.*\)/\1'\2'/" <data.yml >datanew.yml	1
sed "s/\([^:]*: \)\(.*\)/\1'\2'/" <data.yml >datanew.yml	1
kalkomey\.course\.init\([\S\s]*?,[\S\s]*?(["'])((?:(?=(?:(\\))*)\3.|.)*?)\1[\S\s]*?,[\S\s]*?,[\S\s]*?(\d+?),	2
sed "s/\([^:]*:\s*\)\(.*\)/\1'\2'/g"	1
(\w+\b)(?!.*\1\b)	2
([0-9])\1{4}	1
sed '$!h; ${/hgip/{x; s/.*\]//; x; s/\(^.*\]\).*/\1/; G; s/\n//  }}' file	1
:g/<DistanceMeters>\(\d*\)/+1,+15s/<DistanceMeters>\1/	1
s/^\([a-j0-9]\)[a-j0-9]\{6\}/\1123456/	1
s/\(.\)a/\11/g	1
sed '/[a-j][0-9a-j]\{6\}$/{h;y/abcdefghij/1234567890/;G;s/.\(.\{6\}\).\(.\).*/\2\1/;}' YourFile	1
(\$[a-zA-Z_]\w*(\[(["'])\w+\3\])?|\$\{\w+\})	2
"^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.(\\1)\\.(\\1)\\.(\\1)$"	1
^([1-9])\1[0]$	1
(?:&|(\?))key=[^&#]*(?:(?!\1).)?	1
sed 's/\([^_]lm[01?]_[[:alnum:]_]*\)\(.\)/\1_out\2/g' text_to_edit	1
echo 'Lorem {{echo ipsum}}' | sed ':a /\(.*\){{\(.*\)}}\(.*\)/ { h; s//\1\n\3/; x; s//\2/e; G; s/\(.*\)\n\(.*\)\n\(.*\)/\2\1\3/; ba }'	1
sed ':a /\(.*\){{\(.*\)}}\(.*\)/ { h; s//{{{}}}\1{{{}}}\3/; x; s//\2/e; G; s/\(.*\)\n{{{}}}\(.*\){{{}}}\(.*\)/\2\1\3/; ba }'	1
s/(<a\b[^<]*?|(?<!^)\G)([^\/]*?)%20(?=(?![^\/]*\.jpg">)[^\/"]*">)/\1\2-/g	2
URL\(\s*(['"]?)(.*?)\1\s*\)	2
sed 's/\([[:blank:]]android:versionName="\)[^"]*"/\1Your New Value"/' YourFile	1
"<a\\s+(?:[^>]+\\s+)?bclass\\s*=\\s*(?:whtbigheader(?=\\s|>)|(['\"])(?:(?:(?!\\1).)*?\\s+)*whtbigheader(?:\\s+(?:(?!\\1).)*?)*\\1)[^>]*>(.*?)</a>"	2
^(\(\d{3}\)|\d{3})?([.-]?)\d{3}\2\d{4}$	1
sed -i -e "s/<?=\(.*\)?>/<?php echo \1; ?>/g" file	1
sed 's/<[?]=\([^?]*\)/<?php echo \1; /g' file	1
find . -type f -name '*.txt' -exec sed -i '' '/^$/{N; s/([^\n]+)\nACROSS\n/<ACROSS PUZZLE>\n<TITLE>\n\1\n<AUTHOR>\n\n<COPYRIGHT>\n\n<SIZE>\n15x15\n<GRID>\n<ACROSS>\n/;}' {} +	2
<([^>]*)>(?:(?!<\/\1>).)*<\1>	2
\bbackground-image\s*:\s*URL\(\s*(['"]?)(.*?)\1\s*\)	2
^[a-jl-oq-z]*(k|p)?[a-jl-oq-z]*(?!\1)(k|p)?[a-jl-oq-z]*$	1
^\s*(_?)(\S+?)\1\s*$	2
(?=(.)\1)..	4
..(?<=(.)\1)	4
(\w+),(\w+)\s*\|\2,(.+)	2
s/(~.*?) {2,}/\1 /g	2
^\s?(\(\d{3}\)|\+?\d{3})([\s-.])?\d{3}\2\d{4}\s?$	1
\s*(\+)?(\(\d{3}\)|\d{3})([ -.]|)\d{3}(\3)\d{4}\s*	1
(\w)\1+	1
(\w)\1	1
(\w)\1	1
(\w)\1+	1
sed -rn 's/Google[ ]{1,3}"[A-Za-z0-9 ]{1,100}[., ]{0,3}"/\n&\n/g; s/[^\n]*\n([^\n]*\n)/\1/g; s/\n[^\n]*$//p' filename	2
sed -n ':start /foo/{ h; s/\(foo\).*/\1/; s/.*\(foo\)/\1/; p; g; s/foo\(.*\)/\1/; b start; }' infile1 >outfile2	1
:%s/\vNumberInt\((\d+)\)/\1/	2
sed 's/NumberInt(\([0-9]\+\))/\1/' infile	1
sed 's/\(: *\)NumberInt(\([0-9]\+\))/\1\2/g' infile	1
<t:([A-Z][A-Z0-9]*)\b(.*?)>((?s).*?)</t:\1>	2
:%s/{\\it \(.*\)}/\1/gc	1
url\((['"]?)((?:(?!data:image).)+?)\1?\)	2
sed -i -r 's/(\$enviro *= *)[^;]*/\1 1/' file	2
sed -i.bak 's/\(\$enviro *=\).*/\1 1;/' constants.php	1
sed -r ':a; s/(___.*)[-:](.*___)/\1?\2/; ta' file	2
([abc])(?!\1)([abc])(?!\2|\1)[abc]	4
sed 's/^.*_\([[:digit:]]\+\)\..*$/\1/' file	1
((\w)\2(\w)\3){8}	1
([abc])(?!\1)([abc])(?!\2|\1)([abc])	4
echo '<test>' | sed -e 's/<\(.*\)>/\1/g'	1
sed 's/.*<\(.*\)>.*/\1/'	1
'01:32:54:67:89:AB'.match(/(([A-F0-9]{2}):){5}\2/); //null	1
(["'])\w+\1	1
for i in 9.[0-9]15/file1 ; do d=`echo $i|sed 's/^\(9\.[0-9]15\).*/\1/'` ; sed -i $i -e "s/9.015/$d/" ; done	1
(\w)\1{5,}	1
^(?!.*?(\w)\1{5}).*$	4
(?!.*?(\w)\1{5})	4
(?!.*(\d)\1{5})	4
^(?!.*(\d)\1{5}).*$	4
((?:a=b\s?)\1)+	4
sed 's/\(.*xId \)[^ ]*\(;.*\)/ a \1"newValue"\2/'	1
sed -r 's/(xId\s*[^"]*")([^"]*)/\1prefix_\2/' input.txt	2
([^,"\r\n\\])(\\?")([^,\\"\n\r]+)\2(?=[^"]?)	2
sed 's/\([[:space:];]xId[[:space:]]\{1,\}"\)/\1prefix_/' YourFile	1
/templateUrl: *(['"])[a-z0-9äöü.-_\/\\]*\1 *;/gi	1
sed -e "s/<%= @\([A-Za-z0-9]*\) %>/\1/g"	1
^\d*(\d)\1+\d*$	1
(\d)\1+	1
(\d)\1+	1
sed -E 's/(^| )[Mm][Aa][Yy][Uu][Kk][Hh]( |[^S]|$)/\1sobo\2/g' temp.txt	1
\([{}]\)\1	1
^([\t ]*)<bPoint.*?>[\s\S]+?\n\1</bPoint>[\t ]*(?:\r?\n|$)	2
echo '"AAA","99"' | sed -E 's/"([0-9]+)"$/\1/'	2
'([a-zA-z])\1{4,10}'	1
/^(.*)$/-\1-/	2
sed -r "s/-([^-]*$)/_\1/"	2
sed -r "s/(.*)-(.*)/\1_\2/"	2
sed -i 's/^\(\([^;]*;\)\{7\}\)value;/\1column 8;/' file	1
sed 's/^\(\([^,]*,\)\{5\}[^.,]\+\),/\1./;s/^\(\([^,]*,\)\{10\}[^.,]\+\),/\1./' file	1
:%s/\v^(\t*) {4}/\1\t/g	2
RewriteCond %{HTTP_HOST}#.*#%{QUERY_STRING} !^([^#]+)#.*?\1	2
sed 's/^\(\([^:]*:\)\{5\}\)[^[:blank:]]*/\10:0/' YourFile	1
sed 's/:[0-9]+:[0-9]+\(\s\)/:0:0\1/'	1
grep -oP 'target=.*?\ |[^\-]bytes=.*?\ ' file | sed 's/^ //g' | sed -r 's/target=([^/]*)[/].*/\1/; s/bytes=[^/]*[/]//' | sed 'N; s/\n/ /'	2
sed -n '1h;1!H;${;g;s/.*<h3><a href="\/questions\/.*link" title="\(.*\)<\/a><\/h3>.*/\1/p;}' Trial.html	1
sed -n '1h;1!H;${;g;s/.*<h3><a href="\/questions\/.*link" title="\(.*\)/\1/p;}' Trial.html	1
sed -n '1h;1!H;${;g;s/.*<h3><a href="\/questions\/.*link" title="\(\.*\)<\/a><\/h3>.*/\1/p;}' Trial.html	1
/([a-zA-Z0-9])\1{2,}/.test(str) // it returns true if contains and false if not	1
std::regex e("^<([^>]*)>(((.|\\n)*)<[!]\\1>[^<]*)?");	2
(['"])[a-z'"&&[^\1]]*\1	1
^(\b\w{3,}\b).*\1	1
^(\b\w{3,}\b).*\1{3,}	1
(\b\w{3,}\b).*\1.*\1	1
([A-Za-z\u00C0-\u1FFF\u2800-\uFFFD]+)\s+\1	2
s/([^"]*"[^"]*"[^"]*")([^"]*)"([^"]*")/\1\2\3/	2
sed -E -e ':a' -e 's/([^"]*"[^"]*"[^"]*")([^"]*)"([^"]*")/\1\2\3/' -e 'ta' input.csv	2
(?=^\d+$)(?!([98])\1\1)\d+	2
(\d)\1\1	1
sed 's/^\(.*\)"/\1\n/;/s/"//4g;s/\n/"/' file	1
^( +)\1	2
.\1(\2) .\3(\4)/	4
.\1(\U\2\E) .\3(\u\4)/	4
/(\/\w{30,50})(.+?\1){3,}/s	2
(\/\w{30,50})(.*?\1){3,}	2
^(?:([A-Z])(?!.*\1)){2}$	2
([A-Z])(?!\1)[A-Z]	1
<(.*?)>(.)(.*?)<\/\1>	2
^(.*)(\r?\n\1)+$	3
^(.+)\r?\n(?=[\s\S]*?^\1$)	2
(?i)^(?<q>['])[%\p{Zs}\p{L}\p{N}|()]*\k<q>$	1
sed 's/\({% url \)\([^ ]*\)\( %}\)/\1"\2"\3/' file	1
^(?<q>')(?:'[^']*'|[%\p{Zs}\p{L}\p{N}|()])*\k<q>$	1
^(?<q>')['%\p{Zs}\p{L}\p{N}|()]*\k<q>$	1
POLYGON\s*\(\s*\(\s*([+-]?\d*\.\d+)\s+([+-]?\d*\.\d+)\s*(,\s*[+-]?\d*\.\d+\s+[+-]?\d*\.\d+)+\s*,\s*\1\s+\2\s*\)\s*\)	2
echo "/logs/{server_id}/path/{os_id}" | sed "s/{\([^{}]*\)}/\U\1/g"	1
sed "s/{\([^{}]*\)}/\U\1/g"	1
sed 's/.*\([0-9]\{4\}\)\([0-9]\{2\}\)\([0-9]\{2\}\)\([0-9]\{2\}\)\([0-9]\{2\}\)\([0-9]\{2\}\).log$/\1-\2-\3 \4:\5:\6/' infile	1
^(.)\1+$	1
<("?)a(?(1)\1)>	1
sed '1h; 1!H; $!d; x; s/\(START[^\n]*\).*\(\n[^\n]*END\)/\1\2/' filename	1
wget -r --accept-regex="^.*/([^/]*)/$" $MYURL |  sed 's~\(.*\)/[^.]*~\1~'	1
"((\\w)\\2+\\2)+.*"	3
"((\\w)\\2\\2)+"	3
"(\\w)\\1{5,}"	1
(?=(.)\1{3})(\1+)	4
perl -pe 's/(?=\xE3\x80\x82)(.*\xE3\x80\x82).*/\1/' your_file	2
s/(?=\xE3\x80\x82)(.*)\xE3\x80\x82.*/\1/	2
/^(?!.*([A-Za-z0-9_@./#&+-])\1{2})(?=.*\d){8,15}$/	4
^(?!.*?(.)\1{2})(?=\D*\d)(?=[^a-zA-Z]*[a-zA-Z]).{8,15}$	4
^(?!000)(?!666)(?!9)\d{3}([- ]?)(?!00)\d{2}\1(?!0000)\d{4}$	1
\\b(\\w)?(\\w)\\w?\\2\\1	1
(.+)\1+	2
sed -r 's/\$(Revision|Date|AndSoOn):[^$]+\$/$\1$/g' input.file	1
sed -r 's/(\$[^:]+):[^$]+\$/\1$/g' input.file	2
sed -r 's/(\$Revision):[^$]+\$/\1$/' input.file	1
echo "AAAAATTTTTGGGGGGCCCCCAAAATTTT" | perl -pe 's/(.)\1+/\1/g'	1
(.)\K\1+	1
(\\w+)-([fcl])(\\w+)-(?!\\2)([fcl])(\\w+)-(?!\\2|\\4)([fcl])	4
(\w+)-([fcl])(\w+)-(?!\2)([fcl])(\w+)-(?!\2|\4)([fcl])	4
((\d)\2){4}	1
([\"'])(?:\\\1|.)*?\1	1
sed -n -r '/searchterm/ s/^|(.*\. (.*))(searchterm[^.]*\.).*/\2\3/ ; s/\..*/\./p'	2
('|")(?:\\\\|\\\1|[\s\S])*?\1	1
('|")((?:\\\\|\\\1|[\s\S])*?)\1	2
((q)?b\2)	1
String patt = "(.+?)\\1+";	2
sed '/^start :[0-9][0-9]*$/{:a;n;/./{s/^\(modify [0-9][0-9]* \|delete \)/\1NewDir\//;ba}}' file.txt	1
(\d)[ ]*\1	1
(\d).*\1	1
egrep '([0-9]) *\1'	1
(\w)(\w)\2\1	1
\S*(\w)(\w)\2\1\S*(*SKIP)(*F)|\S+	2
\S*(\w)(\w)\2\1\S*|(\S+)	2
^(?!.*?(\w)(\w)\2\1).+$	4
sed  's/.*\(plugin\|theme\)s\/\([^\/]*\)\/.*/\2/'	1
sed  'h;s/.*• \([^;]*\).*/cat <<\\! | sort -u |\1|!/;s/\s*|\s*/\n/2ge;s/\n/ | /g;G;s/^\(.*\)\n\(.*• \)[^;]*/\2\1/;s/;/ &/' file	1
String patt = "(.+?)\\1+";	2
^(.+?)\\1+$	2
0\.(.+?)\\1+	2
"(.+)\\1+"	2
while ($input =~ s/row(\d+)((?: multiline \d+)+)\n+row\1/row$1$2/gm){}	4
\(?([0-9]{3})\)?([ .-]?)([0-9]{3})\2([0-9]{4})	1
((.)+?(?!\2).+?)\1+|(.)\3+	4
(?=(?<sub>(.+)(\\2+)))(?=(?<pattern>.+?)(?:\\4+\\3|\\2))	4
(?=(?<sub>(.{1,20})(\\2+)))(?=(?<pattern>.{1,10}?)(?:\\4+\\3|\\2))	4
<([a-zA-Z]+).*?>(.*?)</\\1>	2
(?!<!--.+)<([a-zA-Z]+([a-zA-Z]|-)+)>(.*)</\1>	2
(\d{7})(-\1)+	3
(\w+) \1\w	2
:%s/\(\ case\ |\ default:\)/\ \ \1/g	1
cmap >c %s/\(\ case\ \|\ default:\)/\ \ \1/g	1
cmap >c %s/\(\ case\ \\|\ default:\)/\ \ \1/g	1
\\(?\\d{3}\\)?([-.]?[\\s]*)\\d{3}\\1\\d{4}	2
^\\(?\\d{3}\\)?([-.]?[\\s]*)\\d{3}\\1\\d{4}$	2
cat test.txt | tr -d '\n' | sed 's/\([A-Z]\)/\n\1/g'; echo	1
cat test.txt | sed ':a;N;$!ba;s/\n//g' | sed 's/\([A-Z]\)/\n\1/g'	1
cat test.txt | tr '\n' ' '  | perl -ne 's/(?<!\|) ([A-Z])/\n\1/g; print' | sed 's/ ,/,/g' | sed 's/ \([0-9]\+\)/\n\1/g'; echo	1
cat test.txt | tr '\n' ' '  | perl -ne 's/(?<!\|) ([A-Z])/\n\1/g; print' | sed 's/ ,/,/g' | sed 's/ \([0-9]\+\)/\n\1/g'; echo	1
(COLOR|SIZE).*?value":"([^"]+).*?(?!\1)(?:COLOR|SIZE).*?value":"([^"]+)"	2
nnoremap <leader>cf :%s/\(\ case\ \<bar>\ default:\)/\ \ \1/g<cr>	1
command! -range=% CaseFix <line1>,<line2>s/\(\ case\ \<bar>\ default:\)/\ \ \1/g	1
%s/^$\n\(\t\t\w\)/\t\1/g	1
%s/^$\n\(\t\w\)/\t\1/g	1
tr '\n' '\t' | sed -E 's/([^\t])\t\t/\1\n/g'	1
/To:\s([a-z0-9][-a-z0-9]{1,19})\@somedomain\.com[a-z0-9\s=;:\/\.-]*\1\b/i	1
/\bTo:\s([a-z0-9][-a-z0-9]{0,18}[a-z0-9])\@somedomain\.com[a-z0-9\s=;:\/\.-]*\b\1\b/i	1
/([a-z0-9][-a-z0-9]{1,19})\@somedomain\.com[a-z0-9\s=;:\/\.-]*\1\b/i	1
To:\s+([a-z0-9][-a-z0-9]{1,18}[a-z0-9])\@somedomain\.com[\S\s]*?\1\b	1
sed -r -e 's:(/a|$):\x00:;s:^(.*)\x00(.*):\1:g'	2
echo "blabla/a/b/dee/per" | sed -r -e 's:([^/a]*):\1:g'	2
echo "blabla/b/b/dee/per" | sed -r -e 's:([^/a]*):\1:g'	2
(<a[^<>]*\shref=([\"\']))(?!#)([^<\"\'>]+)(\2[^<>]*)(.*?<\/a>)	2
(<Cat>).*\1	1
/\(foo\|bar\)#\1%\1	1
sed "s/id='\([^']*\)' srcDocId='\([^']*\)'/id='\2' srcDocId='\1'/g" file	1
sed "s/id='\([^']*\)'[[:blank:]]\+srcDocId='[^']*'/id='\1' srcDocId='\1'/g" file	1
torrent_title=$(tr -d "\n" < "$filename" | iconv -f utf-8 -t utf-8 -c | sed 's/.*:\(.*\)12:piece lengthi.*/\1/')	1
sed 's/.*:\(.*\)12:piece lengthi/\1/' input.torrent	1
^([^\$-\/]|([\$-\/])(?!\2))+?[^\/-]$	3
(?=\b(\w+)\b.*\b(\1)\b)(\1)	4
(?<=.*(?!.*(\w+).*)\1.*)\b\1\b	4
(\b\w+\b)(?:(?=.*?\b\1\b)|(?<=\b\1\b.*?\1))	2
(\b\w+\b)(?=.*?\b\1\b)(?<!\b\1\b.*?\1)	2
puts a.scan(/<([^>]+\b)[^<>]*>(.*?)<\/\1>/m)	4
/<([^>]+)>(\d+)<\/\1>/	2
<([^>]+)>(\d+)<\/\1>	2
puts a.scan(/<([^>]+\b)[^<>]*>(.*?)<\/\1>/)	4
puts a.scan(/<([^>]+\b)[^<>]*>([^<]*)<\/\1>/)	4
r'package ([^\s]+)\s+is([\s\S]*)end\s+(package|\1)\s*;'	2
package\s+(?:\w+\s+?)?([^\s]+)\s+is(.*?)end\s+(package|\1)\s*;	2
sed -i 's/\(^\|[^[#.*]]\)\brm\b/\1$RM/' file1	1
sed -e 's/<\/tag1>\(.*\)<tag1><\//\1<\//g'	1
echo '<tag1>text1<tag2>text2</tag1><tag3>text3</tag3><tag1></tag2>text4</tag1><tag1>text5<tag4>text6</tag1><tag3>text7</tag3><tag1></tag4>text8</tag1>' | sed -e 's/<\/tag1>\(.*\)<tag1><\//\1<\//g'	1
perl -p -e 's/<\/tag1>(.*?)<tag1>(\<\/.+?<\/tag1>)/\1\2/g'	2
sed -r 's/<tag1>/\n/g;s/<\/tag1>(<tag3>[^\n]*)\n/\1/g;s/\n/<tag1>/g' file	2
ps -eo pid,cmd | sed -n '/[q]emu.*-name lubuntu/  s/^ *\([0-9]\{1,\}\) .*/\1/p'	1
<([A-Z][A-Z0-9]*)\b[^>]*>.*?</\1>	2
^(\S)e$% \1\[ee\]	1
`s/^\s*([a-z])e\s*$/\1 [ee]/`	1
`s/^([c|d|j|l|m|n|s|t])e$/\1 [ee]/g`	1
(?=(\d{3}))\1	1
sed -nr 's/([^[:space:]]*)[^;]*(\(spal,afra\)|\(afra,spal\)).*/\1/p' file	2
^\S+\s+\S+\s+\S+|([a-z])\1\1\1	1
(?!.*?([A-Za-z])\1{3})	4
^(?!.*?([A-Za-z])\1{3})\S+\s+\S+\s+\S+	4
s/(\sstyle=[\'\"])[^\'\">]+\bline-height:[^;\'\">]+;?/\1/g	1
(\w+|("|')(.*?)\2)	2
[pP]iece_?[iI][dD] *= *("?)(?<PieceID>[A-Z0-9]{11})\\1	1
(?:^|(?<=(\d))(?!\1))(\d)\2{2}(?!\2)	1
(\d)\2{2}(?!\2)	4
(\d)(?<!\1.)\1{2}(?!\1)	1
(?:^|(?<=(\d))(?!\1))	1
$ echo -e "ID::\nuser::\nprocess::" | sed 's/\(.*\)::/\\\1::/g'	1
sed -i -e 's/\([A-Za-z]*\)::/\\\1::/g' `grep -ril '::' *.php`	1
(\S+\s*)\1{2,}	2
sed -nr '/([0-9]+) in ([0-9,.]+)/ { s//\1\/\2\n/g; s/\n[ ]*/\n/g; s/\n[^\n]*$//; p }' file	2
sed -r 's/([0-9]) in ([0-9]\S*\s*)/\1\/\2\n/;/[0-9]\/[0-9]/P;D' file	2
r"(\S+)(?=( \1)*$)"	3
replace(r"(.)(?=\1*$)","hello","k")	2
replace(r"(.)(?=\1*$)","hell","k")	2
r"(.)(?=\1*$)"	2
replace("abc abc defg abc h abc abc abc",r"(\S+)(?=( \1)*$)","hello")	3
\G(\S+)( (?=\1 ))?	2
sed "s/\b1234[0-9]\{4\}\([0-9]\{4\}\)\b/12342007\1/g" <%INPUTTEXTFILE% >%OUTPUTTEXTFILE%	1
sed -n 's/^[a-zA-z0-9][a-zA-z0-9]*[ ][ ]*\([0-9][0-9]*\).*[/]dir1[/]subdir1\).*/\2:\1/p'	1
(\w+)\.emx#\w+\?\1\/\w+AL\d{5}\?	2
(\\w+%\\w+)\\.emx#[\\w%]+\\?\\1\\/[\\w%]+AL\\d{5}\\?	2
String.replaceAll((.)?=.*\\1)	4
String.replaceAll("(.)(?=.*\\1)", "")	2
\b(\w+)\s+(?=\1)	2
echo "CamelCase" | sed -e 's/\([A-Z]\)/-\1/g' -e 's/^-//' | tr '-' '_' | tr '[:lower:]' '[:upper:]'	1
echo "CamelCaseID" | sed -e 's/\([A-Z]\)/-\1/g' -e 's/^-//' | tr '-' '_' | tr '[:lower:]' '[:upper:]' | sed -e 's/I_D$/ID/g'	1
string.replaceAll("(?s)<(\\w+)\\b[^<>]*>.*?</\\1>", "");	2
^(?<i1>[ \t]*)group\(?[ \t]*(?<grps>#{SYMBOLS})[ \t]*\)?[ \t]+do[ \t]*?\n(?<blk>.*?)\n^\k<i1>end[ \t]*$	2
^(?!(.)\1+$)[XO]{5}$	4
$version =~ s/.*(\d)\..*/\1/;	1
<some_command> | sed 's/^.* \(".*"$\)/\1/'	1
^(\S+)(\S*?)\s+?(\S*?(\1)\S*?)$	2
s/([0-9])(?=9*~[0-9]*?\1([0-9]))/$2/g	2
.*filename=([\'\"]?)([^\"]+)\1	2
sed -E '2,/<version>.*<\/version>/s#<version>(.*)</c>#<version>\1</version>#' file.xml	2
(?m)^(?>(?>\\d+([ \\t]|$)(?=.*\\n(\\2?+\\d+\\1)))+\\n(?=\\2$))+.*	4
sed 's/^\([0-9]\+\)[\ \t]\+\([^,]\+\),[\ \t]\+\([^,]\+\),[\ \t]\+\([^,]\+\)/\1 \2\n\1 \3\n\1 \4\n/g'	1
(<(p|li)\b[^<>]*>[^<>\n]*)\b(Cat|Dog|Fish)\b([^<>\n]*<\/\2>)	2
^(.*)\R(\1.*$\R?)+	3
([0-9]):\1	1
([a-z])[a-z]*\1	1
(?!(.)\1{9}$)	4
^(?!(\d)\1{9}$)[2-9]\d{9}$	4
^([2-9])(?!\1{9}$)\d{9}$	1
:s/\v\-\>(.*)>/['\1']/g	2
grep -Pwo '[abc]+' | grep -Pv '([abc]).*\1' | awk 'length==3'	1
cat filename|sed 's/^[^_]\+_[^_]\+_\(.*\)Match[fF]ile.*/\1/g'	1
find -iname '*.[ch]' -exec sed -nse 's/.*\(#define\s*[a-zA-Z0-9_]*\)\(.*\)/\1: \2/p' {} +	1
sed 's/\([0-9]*\)\.\([0-9]*\) M/\1\200000/' file	1
\(['"]\)key\1: \1value\1	1
sed 's/\([\\\x27"]\)key\1: \1value\1//'	1
\(pom\)\1	1
echo $sea | sed 's#.*(DMJK.*).t*#\1#g'	2
sed -E 's#.*(DMJK.*)\.(tgz|tar.bz2|tar)#\1#g'	2
sed 's/\.\([^,]*\) M/\1000000/' YourFile	1
sed 's/([^-][1-9][0-9]*) /sqrt(\1)/g' text.txt	2
(['"]?)((?:\\\1|.)+?)\1(,|$)	2
(['"]?)((?:\\\1|.)+?)\1(,|$)	2
\b((\w)(?!(\2)))+\b	3
\b(?!((\w)\3))+\b	3
\b(?!((\w)\3))+\b	3
\b((?:(\w)(?!\2))+)\b	3
perl -0777 -e -pi "BEGIN { undef $/ } s/(\[repo\-first\]\n(.*\n)*?enabled\=)0/$1\1/mg" /etc/yum.repos.d/repo-def-file	2
(\b[a-zA-Z0-9]+: )[^\n]+(?:\n|$)(?!\1)	2
(\d)\1*	1
"(\([^\)]*(&gt;)[^\(]*\))" => \3	1
"(&lt;)(#|(\/#))" => \1	1
(.)(.)\2\1	1
\b\w*(.)(.)\2\1\w*\b	1
(?<=(\w+:)) (.*\n?)\1?	2
(?<=(\w\w:)|(\w:)) (.*\n?)\1?\2?	2
^(.+)\1+$	2
(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3}).*(Thread-\d+).*Received message with id (\d+) [\s\S]+?\2.*Message processed in (\d+)ms	2
(\w+) AS \[\1\]	2
MCV(1|0)(\d)(?<!1)\1[0-6]|[0-9]	1
MCV(1|0)(\d)(?<!1)\1[0-6]|[0-9]	1
:%s/underline{\(\w*\)}/underline{\1\.}/g	1
$pattern = "<($tagname)\b.*?>(.*?)</\1>"	2
([^,\w]+)(,[ ]*\1)+	3
tag:('|")?(.+?)(\1|$)	2
(\d)(\1){9}	1
echo $(echo $string | sed -r -e 's/(.)/\\\\\1/g')	1
sed 's/"\([^"]\+\)"/\\q{\1}/g' your_file	1
\s\w+:(|\"|\')\w+\1\s?	1
\s\w+:(|\"|\')\w+\1	1
\s*\S+:(["'])?.*?(?:\1|\s|$)	1
sed -i 's/(keyword1).*(keyword2)/\1 contentsoffile2 \2/g' file1.txt	1
rename 's/^(\w+)\s+(\w+)/\2 \1/' *.vcf	2
$ sed -i "s/\(keyword1\).*\(keyword2\)/\1 `cat file2` \2/g" file1	1
sed -r 'N;s/(keyword1\s*)\n/\1/;s/\n(\s*keyword2)/\1/;P;D' new_file	2
^(?!.*(\w)\1{3,}).+$	4
^(?:(.)(?!\1{2}))+$	3
sed '0,/#/s/#\(.*\) off/\1 on/' settings.conf	1
sed '1,/#/s/#\(.*\) off/\1 on/' settings.conf	1
sed -r 's/(.*[^0-9])([0-9]+)/\2:\1\2/' <<< "$string"	2
sed -n "s/'srv', Host path: \(.+\)/\1/p"	1
sed -r 's/^(([^ ]+ ){11})([^ ]+)/\3:\1\3/'	2
(\d{17}\r\n)\2*	1
(\d{17}\r\n)\1{5,}	1
(\d{17}\r\n)\1{5,}|(\d{17}\r\n)\2*	1
:noremap <C-x><C-j> :%s/[ \t]\([A-Za-z_].*\):/"\1":/<CR>	1
:%s/[ \t]\([A-Za-z_].*\):/"\1":/	1
/<(.*?)(\h*).*?>(.*?)<\/\1>/	2
((\d)\2{2})|\d	1
\b(?!(.)\1)(?:[rs]{1,2}|[as]{1,2})\b	4
^(?![0-9_.])(?!.*([._])\1)(?!.*(?:_\.|\._))(?!.*(.)\2{2,})[\w.]+$	4
(?i)^(?=[a-z])(?!.*?(?:\._|_\.|\.{2}|_{2}|([a-z\d])\1{2}))[a-z\d._]+$	2
sed -r 's/([0-9]+)./\1,/g'	2
sed -r 's/([0-9]+)./\1,/g'	2
sed 's/\(\d\+\)./\1,/g'	1
(\w(\w)\2)	1
[^<>]*(?=<(\w+)\b[^<>]*>[\s\S]*?<\/\1>)	4
start\((\d+)\)(.*)end\(\1\)	2
ls -l | sed -r 's/([a-zA-Z0-9])_.*/\1/' | uniq	1
(?<1><\s*input\s+[^>]*)(?:(?<2>\s*type\s*=\s*)(?<3>[""'])(?<4>[^>\s]*)(?<5>\3))(?:(?<6>\sname\s*=\s*)(?<7>[""'])(?<8>find_me)(?<9>[^>\s]*)(?<10>\3))(?<11>[^>]*>)	2
regsub {(\.sv).*} $str {\1} new	1
(ACA[A-Z])(,\1)*	3
(\d{1,3}\.\d{1,3}\.\d{1,3}\.)\d{1,3}-\1\d{1,3}	1
^(\d{1,3}\.\d{1,3}\.\d{1,3}\.)\d{1,3}-(?!\1)\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}	1
'<a.*?href=\s*?([\'"])(.*?\.(?:jpg|png))\\1'	2
echo 'Catt Puppet Worry Fool' | grep -E '(.)\1'	1
echo 'Catt Puppet Worry Fool' | grep -Po '[^ ]*(.)\1[^ ]*'	1
echo 'Catt Puppet Worry Fool' | grep -oE '(.)\1'	1
(?<entry>@(\w+)\{(\w+),(?<kvp>\W*([a-zA-Z]+) = \{(.+)\},)\k<kvp>*(\W*([a-zA-Z]+) = \{(.+)\})\W*\},?\s*)\k<entry>*	4
replaceAll("(.)\\1+","$1"))	1
string.replaceAll("((.)\\2{2})\\2+","$1");	1
str.replaceAll("([a-zA-Z])\\1\\1+", "$1$1$1");	1
sed -rn 's/([0-9]+) \(([a-z._0-9]+)\) ([0-9]+) ([0-9]+)/ \2,\1,\3,\4 \n/gp' < file	2
sed 's/\(.*\)-.*/\1/'	1
%s/\v.*"\d{4}[- ]\zs\d{4}([- ])\d\d\ze\d\d[- ]\d{4}".*/****\1**/	1
(?:(\d)[\s\S]*)(?:\1[\s\S]*){2}	1
(\d)\d*\1\d*\1	1
par\.\(.*\) -> par\.\1 = \1;	1
<\s*[UT]_C_B\s*>(?:\s*<\s*(?<name>[^<]*)>(?<val>[^<]*)<\s*/\s*\k<name>>.*?)+	2
^(x+)+(x+) % \1 = \2$	2
^(x+)\1*(x+) % \1 = \2$	2
\b(\w+)\b(?=.*\b\1\b)/g	2
sed -E 's|(jndiName=")[^/]*(/jdbc/WorklightDS")|\1app\2|' file	1
sed -E -i 's|(jndiName=")[^/]*(/jdbc/WorklightDS")|\1app\2|' file	1
\b(\w+)\b.*\b\1\b	2
sed -r '/^(\t*)FOO$/,/^\1BAR$/d' file	2
sed -r '/^\t*FOO$/{:a;N;/^(\t*)FOO(\n.*)*\n\1BAR$/d;ba;};' file	2
\\bvar\\s+([a-zA-Z]+)\\b(?:.*?(\\1)\\b)*	2
(?m)(\\G(?!\\A)|\\W*(?>\\w+\\W+)*?\\bvar[^\\S\\n]+)(\\w++)([^\\S\\n]*(?>\\w+[^\\S\\n]+)*?)(?=\\2|$)	2
(?=(subpattern))\1	1
(\b.+)(?=\1)	2
(\b.+)\1	2
(one)(one)(one)(one)(one)(one)(one)(one)(one)(one)(two)\11	1
"(one)(one)(one)(one)(one)(one)(one)(one)(one)(one)(two)\\11"	1
(-[a-zA-Z]+=?)+(([^\s]+)|(\s+((["'])(?:(?=(\\?))\2.)*?\6)))	4
(?s)\s*<!-- this_tag_start\s+(\d+)\s*-->.+?<!-- this_tag_end\s+\1\s*-->\s*	2
(?s)\s*<!-- this_tag_start([\s\d]+)-->.+?<!-- this_tag_end\1-->\s*	2
m/(?<=<(name)>)\w+(?=<\/\1>)/g	1
\b([aeiouy])\w{2}\1\w+\b	1
(?=\b([aeiouy])\w{2}\1\w+\b)\w{3}|(?<=(?!\A)\G[aeiouy])\w+\b	4
^\D([2-9])(?!\1\1)\d{2}\D\s+[2-9]\d{2}\s+\W\s+\d{4}$	1
^\(([2-9])(?!\1\1)\d\d\) [2-9]\d\d-\d{4}$	1
diff -I '^#' <(sed -r 's/^((.){20})/#\1\n/' 1.log) <(sed -r 's/^((.){20})/#\1\n/' 2.log)	1
diff -I '^#' <(sed -r 's/^((.){20})/#\1\n/' 1.log) <(sed -r 's/^((.){20})/#\1\n/' 2.log)	1
(?!.*(.)\\1)	4
^(?!.*(.)\\1)%[%SCD-]*$	4
^(?!.*([C%])\\1)%[%SCD-]*$	4
echo "rm -rf /tmp/foo" | sed 's/rm (-[A-Za-z]* )*\(.*\)/\1/'	2
echo "rm -rf /tmp/foo" | sed 's/rm \(-[A-Za-z]* \)*\(.*\)/\2/'	1
echo "rm -rf /tmp/foo" | sed -r 's/rm (-[A-Za-z]* )*(.*)/\2/'	2
m{1,4}([:/-])d{1,4}\1y{1,4}|d{1,4}([:/-])m{1,4}\2y{1,4}|y{1,4}([:/-])m{1,4}\3d{1,4}	1
^(\d{1,3}\.\d{1,3}\.\d{1})\d{1}\.\d{1,3}-(?!\1)\d{1,3}\.\d{1,3}\.\d{1}\d{1}\.\d{1,3}\r\n|^(\d{1,3}\.\d{1,3}\.\d{2})\d{1}\.\d{1,3}-(?!\2)\d{1,3}\.\d{1,3}\.\d{2}\d{1}\.\d{1,3}\r\n	4
^(?!.*(.)\\1)%[%SCD-]*$	4
sed 's|\(<host><!\[CDATA\[\).*\(\]\]></host>\)|\1lala\2|' file	1
sed -E 's|(<host><!\[CDATA\[).*(\]\]></host>)|\1lala\2|' file	1
(\b[^\n,]+)\n(?=.*\b\1\b)	2
([^\n].*)\n(?:\1(?:\n|$))*	2
(\b\w+\b)(.*?)\W+\1.	2
(\b\w+\b)\W+\1.	2
\b(\w+)\b\s*,\s*(?=.*\1)	2
sed 's/^\([[:digit:]]\)/\$\1/' file	1
(?=(....))\1	1
^(?=.)(?=(\d*(?:\(\d+\)\d*)*))\1$	2
sed 's/[^,]*/\n&/3;s/\n\([^,]\{5\}\)[^,]/\12/' file	1
sed 's/^\(\([^,]*,\)\{2\}[^,]\{5\}\)[^,]/\12/' file	1
sed -r 's/^(([^,]*,){2}[^,]{5})[^,]/\12/' file	2
(?:a(?=[^b]*((?(1)\1b|b))))+\1	4
(?:a(?=[^b]*(\1?+b)))+\1	4
\b(?<!\d.)(3[47]\d{2}([ -]?)(?!(\d)\3{5}|123456|234567|345678|5454545)\d{6}\2(?!(\d)\4{4})\d{5}|((4\d|5[1-5]|65)\d{2}|6011)([ -]?)(?!(\d)\8{3}|1234|3456|5678)\d{4}\7(?!(\d)\9{3})\d{4}\7\d{4})(\b|\s)	4
^(?=x+ % (x+) )\1*(x*) % x+ = \2$	2
\b(?<!\d.)(3[47]\d{2}([ -]?)(?!(\d)\3{5}|123456|234567|345678|424242|545454|11111)\d{6}\2(?!(\d)\4{4})\d{5}|((4\d|5[1-5]|65)\d{2}|6011)([ -]?)(?!(\d)\8{3}|4242|5454|1234|3456|5678|2345|4567|1111)\d{4}\7(?!(\d)\9{3})\d{4}\7\d{4})(\b|\s)(?!.\d\d)	4
\b(x*)\1*+(x+) % \1\b = \2\b	2
\b(x*)\1*(?!\1)(x+) % \1\b = \2\b	4
^(?=x+ % (x+) )\1*(?!\1)(x*) % x+ = \2$	2
/^(https?:\/\/.*)\1$/	2
sed "s/;\(;\)/;\\N\1/g" file1.txt  >file2.txt	1
^(\S+)\1+$	2
\b(\w+);(?=.*\b\1;?)	2
(?<=^|;)([^;]+)(?=(?:;\\1(?:$|;))+)	2
sed 's/;/;\\N/g;s/;\\N\([^;]\)/;\1/g;s/;[[:blank:]]*$/;\\N/' YourFile	1
sed -r ':;s/^(;)|(;);|(;)$/\2\3\\N\1\2/g;t' file	1
sed -e 's#<\([*][[:blank:]]\{1,\}\)\{2\}\(\([*][[:blank:]]\{1,\}\)\{3\}/opt/scripts/centralizedLogging>\)#<0 0 \2#g' /etc/cron.d/jobs	1
(\w+)(?=.*\1)	2
(home|fire)(?!.*\1)	2
sensors -f | sed -nE 's/^temp1: +\+([^.]+).[0-9]*(°F).*/\1\2/p'	2
(INFO1:).*?(?=\1|$)	1
("|\'|)(.*?)\\1	2
'(\\['+tag+'=("|\'|)(.*?)\\1\\])((?:.|\\r?\\n)*?)\\[/'+tag+']'	4
^(?=0[723][2-8]\d{7})(?!.*(.)\1{2,}).{10}$	2
^(?<paren>\()?0(?:(?:72|74|75|76|77|78)(?(paren)\))(?<first>\d)(?!\k<first>{6})\d{6}|(?:251|351)(?(paren)\))(?<first>\d)(?!\k<first>{5})\d{5})$	1
(?:72|74|75|76|77|78)(?(paren)\))(?<first>\d)(?!\k<first>{6})\d{6}	1
(?:251|351)(?(paren)\))(?<first>\d)(?!\k<first>{5})\d{5}	1
grep -oE '(.)(\1){2,9}' <<< "1837488809"	1
(<levelledPara>\s*)<([^>]+)>(.*?)<\/\2>	2
<(whoName)>(?!self\s*<).*?<\/\1>	2
(.)\1{"Number of repeating characters wants to avoid",}	1
(01|02|03|20), (?!\1)(01|02|03|20), (?!\1)(?!\2)(01|02|03|20), (?!\1)(?!\2)(?!\3)(01|02|03|20)	4
/\[(\w+)\].*\[\/(\1)\]/	2
$pattern= '/\[(shortcode_name)\].*?\[\/\1\] ?/';	1
sed -i '/Subject/{:a;s/\(Subject.*\)Subject/\1SecondSubject/;tb;N;ba;:b}'	1
(?<=(.))(?!\1)	1
find . -type f -exec sed -i '/Subject/{:a;s/(Subject.*)Subject/\1SecondSubject/;tb;N;ba;:b}' {} +	2
sed 's/|/| /g;s/| \([^|]\)/|\1|/g' YourFile	1
^(.*?)[\/]+$ \1	2
(["']).*?\1(?<!\\["'])|[^\r\n\t\f ,]+	1
(["']).*?\1(?<!\\["'])	1
sed 's/ *\([0-9]*\) /\1,/'	1
(.*?)\s*([^A-Za-z0-9])?\s*S(\d+)E(\d+)\s*\2\s*(.*)	2
(.*?)\s*(\W)?\s*S(\d+)E(\d+)\s*(\2)\s*(.*)	2
/^(.*)(_.*?)$/\1/	2
perl -pi -e "s/^(.+STATE\h)(.*)\h/\1\2_/g" $1	2
sed ':a;s/\(STATE [^ ]*\) /\1_/;ta;' file	1
sed -e ':cycle' -e 's/^\(\([^$]*[$][^$]*[$]\)*[^$_]*\)_/\1-/;t cycle' YourFile	1
sed -r 's/([^$]+)\$([^_]+)_([^$]+)\$([^$]+)/\1$\2-\3$\4/'	2
sed -n "s/^.*\x0d(\d)(\d)?(\d)?\x0d.*$/\1\2\3/"	1
ip -o -4 addr show dev eth0 | sed 's/.* inet \([^/]*\).*/\1/'	1
#([a-fA-F\d]{1,2})\1{2}\b	1
(?:^')?(.')\1*(?:.$)?	1
(?<=(\w)'(?!\1))	4
"(.*?)"\s*=\s*"\1"	2
:22s/\s.*has_many (:[a-z]*),.*/it { should have_many(\1) }/g	2
:22s/\s.*has_many \(:[a-z]*\),.*/it { should have_many(\1) }/g	4
find . -type f -name "*.jsp" | xargs perl -i -p -e 's|" value=("\${.*}"?)|" value="<c:out value=\1/>"|'	2
sed '/^<Log /{:a;/<\/Log>/!{N;ba;};s/>.*\(decimal\|DBNull\).*</>\1</}' file.log	1
/(^Receptor Name:[^\n]*)(?:.*?^[-+]+)(.*?)(?=^Receptor Name:|\Z)/\1\2/gms	2
([a-zA-Z][a-zA-Z0-9_]*)\s*=\s*(|['"])(.+)\2	2
zcat file* | sed -e 's/.*text=\(.*\)status=[^/]*/\1/' | cut -f 1 - | grep "pattern"	1
(.)\\1+	1
(.)(?=.*\1)	2
zcat file* | sed -e 's/.*text=\(.*\)status=[^/]*/\1/' | ***cut -f 1 - | grep "pattern"***	1
zcat file* | sed -e 's/.*text=\(.*\)status=[^/]*/\1/' | **awk '$1 ~ "pattern" {print $0}'**	1
zcat file* | sed -e '/pattern/s/.*text=\(.*\)status=[^/]*/\1/'	1
(href=)(['"])[^\2]+?\2	1
^([ ]*)if.+\r?\n(\1[ ]+).+(?:\r?\n\2(?!if).+)*	4
%s/\$\(.\+\)\$/\\(\1\\)/gc	4
^(?>0*)(?<number>\d+)-(?>0*)\k<number>$	2
sed ':;s/\(^\||\|;\)[^x;|][^;|]*/\1/;t;s/|//g' file	1
(\w{2})\w*\1	1
perl -pe 's/(\.\d{4})\d+\s*$/\1/'	1
perl -pe 's/(\.\d{4})\d+[ \t]*$/\1/'	1
echo "sample_2341-43-11.txt" | sed -r 's/^.*([0-9]{4}-[0-9]{2}-[0-9]{2}).*$/\1/'	1
echo '^h?e.l*l+o:' | sed 's/\([[:punct:]]\)/\\\1/g'	1
sed -r 's/(Inn (Express)?).*/\1/' file	1
sed 's/\(.*Inn\) \(Express\)\?.*/\1 \2/' FileName	1
sed -E "s/^(.*Inn( Express)?).*$/\1/" yourfile	2
sed -E "s/^(.*[[:<:]]Inn[[:>:]]( Express)?).*$/\1/" yourfile	2
(?=(<([^>]+)>([\s\S]*?)<\/\2>))	4
^(.+)$(?=[\s\S]*^(\1)$[\s\S]*)	2
sed 's/[^_]\+_\([^.]\+\).*/\1/' <<< sample_2341-43-11.txt	1
^(.+)\R([\s\S]*?)\1$	2
(?<=var.{0,999})(?<!=)(?!var\b)\b(?<var>\w+)\b(?<!var.{1,999}(?=\k<var>).{1,999}(?=\k<var>).{1,999})	2
sed -n 's/.*\(http:\/\/\([a-zA-Z0-9\-]+\.\)+[a-zA-Z0-9\-]+:[a-zA-Z0-9\-]+\/[a-zA-Z]+\.[a-zA-Z]+\).*/\1/p' filename	1
sed -r -n 's~.*\(http://\([a-z0-9\-]+\.\)+[a-z0-9\-]+:[a-z0-9\-]+/[a-z]+\.[a-z]+\).*~\1~ip' file	1
sed -rn 's~.*(http://([a-z0-9\-]+.)*[a-z0-9\-]+:[0-9]+\/[a-z0-9]+.[a-z]+).*~\1~ip' Filename	2
\bsomeObject\[\s*(['"])(.+?)\1\s*\]	2
\b\w+\[\s*(['"])(.+?)\1\s*\]	2
([[:alpha:]])\1+	1
(\w+)=(['"])((?!\2).+?)\2	2
((\d[^0-5]|[6-9])\d{9})|^(\d)\1*$	1
(([6-9])(?!\2{9})\d{9})	1
([[:alpha:]])\1+	1
^(?!9876543210)(?!([\d])\1{9})[6-9][\d]{9}$	1
(?!([0-9])\1{9})(\b[6-9]\d{9})	4
((["])(?:(?=(\\?))\3.)*?),\2	2
([123]),((?!\1)[123]),((?!\1|\2)[123])	4
((.)\2*)	2
(?<=(.))(?!\1)	1
(?!(..)\2+$)	2
(?!(.[789])\2+$)	2
"/(http:\/\/www\.mega\.pk\/mobiles-\w+\/)(?!.*\1)/gs"	2
(\w)\1+	1
sed 's/^\([^@]*;\)\?\([^&;]*@[^&;]*\).*/\2/' file_of_email_addresses	1
(.*)(\\b)(GRP)(-|\\s|)(\\d+)(\\/|\\b)(.*)","\\3\\5	2
^\h*(?<name>\w++)\h*=.*\R(?=\h*(?<good>(?!\k<name>\b)\w++\h*=.*$))	2
"(?m)^\\h*(?<name>\\w++)\\h*=.*\\R(?=(?<good>\\h*(?!\\k<name>\\b)\\w++\\h*=.*$))"	2
(.*?(?:[\/\&\?])\1){3,}	4
(/.+)\1	2
$ sed -n 's/.*"entries": *\(\[\[.*\]\]\)/\1/p' /tmp/response.txt	1
$ sed -n 's/.*"entries": *\(\[\[(?!\]\].)*\]\]\)/\1/p' /tmp/response.txt	1
sed -n 's/.*"entries": *\(\[\[.*\]\]\).*/\1/p'	1
\n(.*?)c(.*?)\n(.*?\n)*?\1f\2\n	2
(\b(\w*?)([cf])(\w*)\b)(?=[\s\S]*(\b\2(?!\3)[cf]\4\b))	2
\.+\s((?:\/[a-z]+)+\/(?:include|lib)\/[a-z0-9_+-]+)(?![\s\S]*\1)	2
(.)(?!\1{1,7})(.)\2{2}(?!\2{1,4})(.)\3{1}(?!\3{1,2})(.)\4{1}	4
sed 's/^[^"]*"\([^"]*\).*\(.[^ ]\)/\1 \2/;' file	1
sed -E 's/^[^"]*"|"[^ ]*( ).*(.[^ ])/\1\2/g' file	1
grep -P -v '(.)(?!\1).*\1'	1
(?!.*(.)(?!\1).*\1).{1}.{3}.{2}.{2}	4
(?!.*(.)(?!\1).*\1)(.){1}(.){3}(.){2}(.){2}	4
echo "foo bar baz quz" | sed -E 's/(bar[[:space:]]*(.[[:space:]]*){0,2})z/\1t/'	2
sed -E 's/(bar[[:space:]]*(.[[:space:]]*){0,2})z/\1t/'`	2
^Test((_[A-Za-z0-9]+)\1*)	4
^Test((_[A-Za-z0-9]+)\1*)	4
(?m)^DOCUMENTATION.*(\"{3}|'{3})\n-*\n?([\s\S]+?)^\1[\s\S]*	2
^((?!(\w)(\w)\2\1).)*$	4
(\w)(\w)\2\1	1
(?smi)^([ \t]+)<version>.*?^(?!\1)[ \t]*</([^\s>]+)	2
grep "backup-directory-path" test.txt | sed 's/.*backup-directory-path="\(.*?\)" /\1/'	1
grep "backup-directory-path" test.txt | sed 's|.* backup-directory-path="\([^"]*\)".*|\1|'	1
tr ' ' ',' <file | sed -r 's/(\.[0-9]{2})/\1,/'	1
(?!.*(.).*\\1)	4
grep('^([123])((?!\\1)\\d)(?!\\2|\\1)\\d', a, value=TRUE, perl=T)	4
perl -pe 's/(?:logger\d\d )?([\dA-F]{10}),?([\dA-F]{12}) ?/\1\t\2\n/g'	1
(.+)(?=.*\1)	2
^[\S\s]*?^([^][]*=)\[\[.*\]\]\K\]\R\1\[(.*)\]$	2
sed -r 's/(\\w+) (\\w+)/\\1 \\2\\n/g' input.txt >output.txt	2
sed -r -e 's/ /  /g' -e 's/ (\w+) / \1\n\1/g' -e 's/  / /' input.txt	2
s/ (\w+) / \1\n\1/g	2
grep -iE '.*([a-z])\1..*([a-z])\1.*' sample	1
'.*([a-z])\1..*([a-z])\2.*'	1
'.*([a-z])\1..*([a-z])\1.*'	1
grep -iE '([a-z])\1.*([a-z])\2'	1
sed -r 's/^\S+ (\S+ \S+)/&\n\1/;//P;D' file	2
sed -r 's/^\S+ (\S+)/&\n\1/;//P;D' file	2
sed -r 's/(\S+) /\1\n&/2g' file	2
([aeiou])\1	1
/(<iframe.*?src=([\"\'])https?:\/\/w{0,3}.?youtube.com.*?(\2).*?\>)(.*?)(\<\/iframe\>)/gm	2
[=:]\s*(?:(["'])((?:(?!\1).)*_ash)\1|(\S*_ash)(?!\S))	2
sed 's/\(= *\){"\([^"]\+\)", "$entry"}/\1"\2"/g' yourfile	1
sed 's/\(= *\)"\([^"]\+\)"/\1{"\2", "$entry"}/' yourfile	1
/\d{2}([\/.-])\d{2}\1\d{4}/g	1
(\d{2}[.]\d{2}[.]\d{4})[^(\1)]*	1
:%s/\([^[:blank:]]\+\).*/\1/	1
sed 's/\([^_]\+\).*\(_.*\).*/\1\2.zip/' Filename	1
grep -E "^(.{3}).*\1$" file.txt	1
sed -i 's/\(AB[0-9][0-9]-XYZ\)/Linux\\\1/g' file	1
ex -s +'%s/\(AB[0-9][0-9]-XYZ\)/Linux\\\1/g' -cwq foo.txt	1
line =~ s/(parameter WQA= ?)([0-9.]+)/\1$newparam1/	2
sed 's/\([.!?][.!?]*\)  *\([A-Z]\)/\1\n\2/g;' file	1
sed -E 's/= {?("[^"]*"(, "[^"]*")*)}?/= {\1, "\$entry"}/' input_file	2
"sysparm_type=list_data&count=(\\d+)&start=\\1&p=incident%3Bq%3Aactive%3Dtrue%5EEQ&table=incident"	2
ATG([AGCT])\1{2}(?:TGA|TA[AG])	1
sed 's/\(^\).\($\)/A \1\2 Z/g' input	1
^(?=.*\b(Ade\w*)\b)(?=.*\b(?!\1)(Ad\w*)\b)(?=.*\b(?!\1|\2)(A\w*)\b).*	2
sed 's/\([^-\t]*\t\)\{3\}.*/\1/' films.txt	1
sed -r 's/([^-\t]*\t){3}.*/\1/' films.txt	2
s/([a-z])([A-Z])/\1|\2/g	1
(\s*)\{\s\n(?=(\s+))[\s\S]*?^\2"id":"(?<ID>\d+)"[\s\S]*?^\1\}	2
sed -E -e 'H;1h;$!d;x' -e ':a' -e 's/(, *"[^"]*)\n/\1 /' -e 'ta' file	2
0([./-])0\\1(0)	1
0([\.\-/])0\1[0]	1
s/0\.([0-9][0-9]).*/\1/	1
sed -E 's/0\.([0-9][0-9]).*/\1/;s/^0//' myfile.txt	1
sed -r 's/0\.(([1-9][0-9])|0([0-9])).*/\2\3/' file	1
sed '18s/=\s*{\s*\("[^"]*"\)\s*,\s*\("[^"]*"\)\s*}/= \1/; 18s/=\s*{\s*\("[^"]*"\)\(\(\s*,\s*"[^"]*"\)\{1,\}\)\s*,\s*"[^"]*"\s*}/= { \1\2 }/' output.txt	1
echo '7:30 pm -9 pm Lorem Ipsum is simply dummy text. 9pm-10pm Lorem Ipsum is simply dummy text' | sed 's/\([0-2]\?[0-9]\(:[0-5][0-9]\)\? *[ap]m\).*/\1/i'	1
(\d)(?=\d*\1)	2
(?P<pat>.+)(?P=pat)	2
^((\w)(?!\2))+$	3
^[a-zA-Z0-9]+(a-zA-Z0-9\-\.'|([^\-\.'])\1)*[a-zA-Z0-9]$	4
sed -e ':redo' -e 's/\([^[:blank:]]\)[[:blank:]]\{1,\}\([^[:blank:]]\)/\1|\2/g;t redo'	1
^([^;]+)(;\1)*;((?!\1)[^;]+)(;(\1|\3))*;((?!\1|\3)[^;]+)	4
(.).*?\1	1
$regex = '<a\s[^>]*href=(\"??)([^\" >]*?)\\1[^>]*>(.*)<\/a>';	2
sed 's|^ *\([A-Z]\)|\t\1|'	1
sed -E 's/(version\s*=\s*\"\d+\.\d+\.\d+\.)/\1foo"/' settings.lua	2
(?=(...))\1	1
(?=([^\r\n\S]+))\1(?!$)	2
(.+)\\1+	2
(.+?)\\1+	2
(.+)\\1+	2
<a(?: [^>]*?)? href=(["'])([^\1]*?ProgramName*?)\1(?: .*?)?>.*?<\/a>	2
sed -nE 's/(^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}) .* [htpsw:\/.]{4,8}([0-9a-z.]+)\.com.*$/\1 \2/p' > newfile	2
perl -ne 's/Intel::DOMAIN.*from http:\/\/(.+?)\..*/\1/; m/^(\d{1,3}\.){3}\d{1,3}/ and print'	2
grep '\([A23456789TJQK]\)\(.*\1\)\{3\}' cards.txt	1
grep '\([A23456789TJQK]\).*\1.*\1.*\1' cards.txt	1
sed 's/.*Linux \(.*\) .*/\1:/' ex2.txt	1
sed -r 's/.*Linux (.*) .*/\1:/' ex2.txt	2
s/^\s*(lr_start_transaction.*\))\s*;\s*$/\1\);/	2
(G{2,5})([ACGT]{1,7})\1([ACGT]{1,7})\1([ACGT]{1,7})\1	1
sed '35,40s/^\(.\{9\}\).*/\10123456789/' file	1
sed '35,40s/^\(.\{9\}\).\{10\}/\10123456789/' file	1
<code>\[(=*)\[.*?\]\1\]	2
<code>(?<!--)\[(=*)\[.*?\]\1\]|"((\\.)|[^"\\])*?"|'((\\.)|[^'\\])*?'	2
grep current_count file | sed "s/.*\('current_count': u'\d+'\).*/\1/"	1
sed  -r -e '/current_count/!d' -e "s/.*('current_count': u'[0-9]+').*/\1/"	2
sed 's/;[^-0-9]*\([0-9]\{1,\}\)[^;]*;$/;\1;/;t;s/[^;]*;$/0;/' file	1
sed -i .bak -E 's/(memory_limit = )[0-9]+M/\11024M/g' php.ini	1
sed -Ei '' 's/(memory_limit = )[0-9]+M/\11024M/g' ~/Desktop/php.ini	1
s/.*\`\(.*\)'/\1/g	1
url\((['"]?+)(?!data)(.*?)\1\)	2
([a-z]{1,})\1	1
sed 's/\(.\{15\}\)\(.\{4\}\)\(.\{69\}\)\(.\{5\}\)/\1,\2,\3,\4/' YourFile	1
s/(?s).*(<!-- LIST -->.*?<!-- \/LIST -->).*/\1/	2
sed 's/\([A-z ]*\) .*/\1/g'	1
([0-9])(\1)	1
(\d)\1*	1
perl -nlE 'say "BAD number" if ($_ =~ /^(\d)\1*$/ or "123456789" =~ /$_/)'	4
^(\d)\1*$	1
(<.*>)\1+	2
%s/\(\w\)[^\.]/\1, /g	1
%s/\(\.[[:digit:]]\)\=\(\w\)/\2\1,/g	1
sed -E '/.*priceRuleDesc=(.*)>$/s//\1/p;d' file	2
egrep ([ab])_[^\1]	1
egrep '^(.).*\1$'	1
^(.).*\1$	1
^(.).*((?!\1).)+$	3
^(.)_.(?<!\1)$	1
^(.).*(?<!\1)$	1
:%s@\(<title>.*\)<\(.*</title>\)@\1\2@	1
:%s:\"\([^"]*\)\":\1:g	1
^(?!.*?([' -])\1)\b([a-z '-]{1,25})\b$	4
sed 's/^[^[:digit:]]*[[:digit:]]\+[^[:digit:]]*\([[:digit:]]\+\).*/\1/' file	1
sed 's/< \(.*\) \(.*\) >/< \1\2 >/g' | sed 's/< \(.*\) \(.*\) $/< \1\2 /g' | sed 's/^ \(.*\) \(.*\) >/ \1\2 >/g'	1
sed 's/< \(.*\) \(.*\) >/< \1\2 >/g' | sed 's/< \(.*\) \(.*\) $/< \1\2 /g' | sed 's/^ \(.*\) \(.*\) >/ \1\2 >/g'	1
sed 's/< \(.*\) \(.*\) >/< \1\2 >/g' | sed 's/< \(.*\) \(.*\) $/< \1\2 /g' | sed 's/^ \(.*\) \(.*\) >/ \1\2 >/g'	1
select regexp_replace('Bhal|Bhal|Bhal|Bhaloo|Bhaloo|Bhaloo|Bhaloooo|Bhaloooo|Bhaloooo|Baker|Baker|Baker', '([^|]+)(\|\1)+', '\1') from dual;	3
'([^|]+)(\|\1)+'	3
select regexp_replace('Bhal|Bhal|Bhal|Bhaloo|Bhaloo|Bhaloo|Bhaloooo|Bhaloooo|Bhaloooo|Baker|Baker|Baker', '(.+?)(\|)((\1(\2|$))+)', '\1\5') from dual	3
sed 's/[^:]\+..\([^;]\+\).*/\1/' FileName	1
sed -E 's/(\|[A-Z][a-z]{2})\|([0-9]{1,2}\|)/\1 \2/' file	1
gawk '{c="[|]([[:upper:]][[:lower:]]{2})[|]([0-9]{1,2})[|]";print gensub(c,"|\\1 \\2|",1,$0)}' file	1
sed -i -e 's/(.*module2.*?#)(.......)(.*)/\1abcdefg\3/' json-file	2
echo "www.blah.com/012345/moreblah.html" | sed -e 's/\([[:digit:]]\{1,\}\)/!\1/g'	1
:%s/,(\S)/, \1/g	1
%s/,\(\S\)/, \1/g	1
:%s/,\(\S\)/, \1/g	1
egrep "(\b[a-zA-Z]+\b) \1" file.txt	2
egrep "(\<[a-zA-Z]+\>) \1" file.txt	2
egrep "\b([a-zA-Z]+) \1\b" file.txt	2
egrep "\<([a-zA-Z]+)\> \<\1\>" file.txt	2
egrep "(\b[a-zA-Z]+) \1\b" file.txt	2
egrep "(\<[a-zA-Z]+>) \<\1\>" file.txt	2
\ba(\w)\1{1}\b	1
sed -i 'bak' -Ee 's/(--> [0-9:.]+)/\1 L:90%/' */*.vtt	2
(["\'])([^"\']*(?:\.jpg|\.png|\.gif))\1	2
(["\'])(.*(?:\.jpg|\.png|\.gif))\1	2
sed -i -e "s/(push|pop) e(\w+)/\\1 r\\2/"	2
sed -i 's/\(push\|pop\) r\([abcd]\)x/\1 e\2x/'	1
$ echo "#~#0.12#~#0.....#~#0.1#~#0.#~#" | sed -r 's/#~#0(\.+)#~#/#~#\1#~#/g'	2
http-request set-header X-ID %[(apply [a-zA-Z].(.*)(:)?.* \1 to req.hdr(host)),lower,map(/some.map,99999)]	1
(<!--(.*)-->).*(\n)?\1	2
(?=((\b\w+\b).+?(\b\2\b)))	4
^(?!.*(.)\1)[a-zA-Z]+[a-zA-Z0-9]*(?:-[a-zA-Z0-9]+)*$	4
^(\d)\1{2}.\1{3}.\1{3}-\1{2}$	1
^(\\d)\\1{2}.\\1{3}.\\1{3}-\\1{2}$	1
s/\(X[0-9]*\).*[^0-9]\([0-9]{3}\)[^0-9].*\([0-9][0-9]:[0-9][0-9]\).*/ \1 \2 \3/g	1
sed 's/\([^,]\+,[^_]\+\)[^,]\+,\([^:]\+:[0-9]\{2\}\).*/\1 \2/' FileName	1
^(?!.*\b([1-4])\b.*\b\1\b)[1-4](,[1-4])*$	4
(.*?)=%{DATA:\1?}\s	2
^(?=.{6,15}$)(?:([A-Za-z0-9])\1{0,3}(?!\1))+$	3
echo ${LAST_COMMIT} | head -c $(echo ${FORMAT} | sed -e 's/%c\([0-9]\+\)/\1/')	1
(?:<(comment)>)(.*)(?:<\/\1>)	2
(\*)(.*?)\1	2
(\/)(.*?)\1	2
sed -r '/(:325F)/ s/^/\1/'	1
sed 's/^\([^:]*\):\([^|]*\)/\2:\1/' file	1
sed -r '/((extent|next) size )([0-9]*)[0-9]\>/!b;s//\1\n\3\n/g;s/\n(1[0-5])\n|\n[1-9]\n/16/g;s/\n//g' file	2
sed -n 's/\([[:alnum:]]\{7\}\) \([[:digit:]]\{3\}\)/\1\2/' myfile.txt	1
/^\/(\*\*-+\*\*)\\$(.*?)^\\\1\/$|./gsm	2
(.)\\1*	1
(.+)[0-9]{4}.+ # with backreference \1	2
sed 's|^\(abc\.defef\.efefef\.gege=\).*|\1%7p [%d{HH:mm:ss}] %d{1}@%X|g'	1
(?=\b(([a-z]{2,3})\s+[a-z]{2,3})\b)\2	2
(?=([^$]*))\1(?=((?:\$+(?!MOXDATA\${%end%})[^$]*)*))\2	2
(?=(subpattern))\1	1
"{{[A-Za-z-]*}}\s(#[a-zA-Z0-9]+)\s*\1\s*[a-z]*"	2
(\b\S+\b)(?=.*\1)	2
<([A-Z][A-Z0-9]*)\b[^>]*>.*?</\1>	2
<([A-Z][A-Z0-9]*)[^>]*>.*?</\1>	2
<([A-Z][A-Z0-9]*)[^>]*>.*?<\/\1o>	2
<([A-Z][A-Z0-9]*)\b[^>]*>.*?<\/\1o>	2
$string =~ s/([^a-z])$find([^A-Z])/\1$replace\2/gi;	1
:%s/^\(........\)\(.........\)\(...................\)/|\1|\2|\3/g	1
/MINISTÉRIO\sDO\sTRABALHO\sE\sEMPREGO(?:[^P]*(?:P(?!ÁG\s:\s\d+\/\d+)[^P]*)*)PÁG\s:\s\d+\/(\d+)\b(?:\D*(?:(?!\1\/\1)\d\D*)*)\1\/\1(?:[^Z]*(?:Z(?!6:\s\d+)[^Z]*)*)Z6:\s\d+/g	2
s/.*(<REGEX>)/\1/g	1
^(?!^(.)\1+$).*$	4
/^(.{1,95}).*/\1/	1
find -type f  -exec sed 's#\(<?php echo \$var_one;?>/<?php echo \$var_one;?>\)#\1\n#g' {} \;	1
([\w ]*#\d\d?,)\1*	2
([a-z]{2,}?)\1+	1
\b[a-z]*?([a-z]{2,}?)\1+[a-z]*?\b	1
(.{2,})\1	1
^(.{2,})\1$	1
\<\(\w\+\)\1\>	1
(\S+\s*)\1	2
(.+)\1	2
<a(.*?)(?i)href\\s*=\\s*"([^"\\s]+)"(.*?)>(?=\\2)(.+?)</a>	2
([""'])(?:(?=(\\?))\2.)*?\1	1
echo "(SIM,0)" | sed -n 's/("\?\(.*\)"\?,.*)/\1/ip'	2
echo "(string_without_spaces,4)" | sed -n 's/(\(.*\),.*)/\1/ip'	2
echo "(\"SIM\",0)" | sed -n 's/("\?\(.*\)"\?,.*)/\1/ip'	2
echo "(\"string with spaces\",4)" | sed -n 's/("\(.*\)",.*)/\1/ip'	2
sed -n "s/^\($s\)\($w\)$s=$s\(.*\)$s\$/\1$fs\2$fs\3/p" $file	1
sed -n "s/^\([[:space:]]*\)\([a-zA-Z0-9_]*\)[[:space:]]*=[[:space:]]*\(.*\)[[:space:]]*\$/\1:\2:\3/p" $file	1
\b.*([A-Za-z])\1.*\b	1
([A-Za-z])\1	1
(.)\1	1
^(\d+,)\1*$	2
^(?=.{0,10}$)[a-z0-9]+(?:([\s-])[a-z0-9]*(?:(?!\1)[\s-])?[a-z0-9]+)?$	1
%s/Test\([^[:space:]]\+\)/\1Test/g	1
"(\w)[\\1][\\1]"	1
(.+)(.+)\2\1	2
(\w+)(\w+)\2\1	2
echo $line | sed -E 's/(QA.)|(DEV.)(.*)/<!-- \1\2\3 -->/'	2
echo "$line" | sed -E 's/(QA.|DEV.)(.*)/<!-- \1\2 -->/'	2
^([a-z]+)\s*=\s*\1$	2
perl -pe 's/^([^%]*?)\. /\1.\n/g'	2
sed '/^[^.]*%/b;/%/!{s/\. /.\n/g;b};h;s/[^%]*%/%/;x;s/ *%.*//;s/\. /.\n/g;G;s/\n\([^\n]*\)$/ \1/'	1
\b(\d+)(?=.*?\b\1\b)\b	2
\b(\d+)(?=.*?\1\b)\b	2
(^\s*\}\s*)\1	2
\(js/plex.js?\) ---> is marked as \1	1
sed 's#\(js/plex.js?\)[^"]\+".*#\1#g'	1
\[\@if(not)?:([a-zA-Z0-9]+)(?:=(.*?))?\].*?\[\@endif:\2\]	2
KEY=(['\"])VAL\1	1
.*\b(\d+)\b.*\b\1\b	2
([1-7]{1}),(?:[1-7]{1},)*(?:\1|[^1-7,]|(?:[1-7]{2,}))	1
([1-7]{1})(?:[1-7,])*\1|[^1-7,]+	1
<\b(?<tag>b|strong)\b[^>]*>(?<content>.*)<\/\k<tag>>	2
((?!l10n))*?(['"])(.*?)\2[\s]*?\|[\s]*?l10n	2
(['"])([^'"]*)\1\s*\|\s*l10n	2
/^(\S+) (?=(?s:.)*\1.*).*	2
(\b\w+\b).+\1	2
perl -i.bak -pe "s#([0-9]+/[0-9]+.*?)#\n\1#g"  tmpFile	2
(.)\1	1
{([PF])}(.*?){/\1}	2
"^near\\[(.*?)\\]\\sfar\\[\\1\\]$"	1
"near[2015-12-1] far[2015-12-1]".matches("near\\[(.*)\\] far\\[\\1\\]")	1
near\[(.*)\] far\[\1\]	2
Pattern.matches("near\\[(.*)\\] far\\[\\1\\]", "near[2015-12-1] far[2015-12-1]")	1
sed -r 'h;s/$/\nabcd x 10.10.10.10/;ta;:a;s/(.+)(.*\n.*)\<\1\>/\2/;ta;/^\s*\n\s*$/d;x' file	2
sed -r ':a;$!N;s/[^\n]+/&/3;$!Ta;/\n[^\n]*Shipment bla bla [^\n]*$/!D;:b;/^[^\n]*(messageListenerContainer -[0-9]+ ).*\n[^\n]*\1[^\n]*$/P;s/^[^\n]*\n//;tb' file	2
echo $var | sed 's/^(.*)"$/\1/'	2
^(?=.*\d)(?=.*[^a-zA-Z0-9\s])(?=.*[a-z])(?=.*[A-Z])(?!.*([a-zA-Z0-9])\1\1).{6,20}$	2
(\d+)(,|\d| )*(\1)	2
sed 's/\([^ ]*\) \(.*\)/| \2 | \1 |/'	1
sed -E 's/([0-9]+)[[:blank:]]+(.*)/| \2 | \1 |/' file	2
^(?:([abcd])(?!.*\1)){1,4}$	2
([1-7]{1}),(?:[1-7]{1},)*(?:\1|[^1-7,]|(?:[1-7]{2,}))	1
/((a:[^,]+,?\s?)(((?!a:[^,]+).)+(,|$))+)/\2[TAG]\5/g	2
sed '/^.L.........\s\(.*\)\s->\s.*/!d; s//\1/'	1
sed -r 's~.*uid=([^[:space:]]+).*exe="/install/([^/]+).*~\1 \2~' file	2
sed '/^#/s/(\(.*\))/\1/' file	2
(\={1})(.*)\\1	2
^(?!000)(?!666)(?!9)\d{3}([- ]?)(?!00)\d{2}\1(?!0000)\d{4}$	1
sed 's/.*aa\(.*\)cc.*/\1/' monfic.txt	1
\v(^test \w+)(\_.*\1)@=	2
puppet cert --help | sed -n 's/^\* \(--.*\):$/\1/p'	1
(('|").*?[^\\\2]\2)	2
\s+|(('|")(?:[^\\]\\\2|.)*?\2)	2
(('|")(?:[^\\]\\\2|.)*?\2)	2
(\$\$.*?)<(.+?)>(.*?)<\/\2>.*?\$\$	2
sed -r 's/^[^a]*(a[^a]+)*aa([^c]*(c[^c]+)*)cc.*/\2/' file	2
alias lsurls='_(){ sed "s/http/\nhttp/g" "${1}" | sed -n "s/\(^http[s]*:[a-Z0-9/.=?_-]*\)\(.*\)/\1/p"; }; _'	1
sed "s/http/\nhttp/g" <(curl "http://www.cnn.com") | sed -n "s/\(^http[s]*:[a-Z0-9/.=?_-]*\)\(.*\)/\1/p"	1
([.])\1+	1
(.)\1+	1
:%s/"([0-9]+.[0-9]+)"/\1/	2
:%s/^(\w*):/"\1":/	2
sed -r 's/^\S+\s+(.*)$/other_cfg = \1\n+config=+testlength=+print_match=+print_cfg=+quit_count=/;:a;s/ (\+\S+=)\S+(.*\n.*)\1/\2/;ta;s/ \+[^=]*=/./g;s/\./ /;P;d' file	2
(["'])(?:(?=(\\?))\2.)*?\1	1
(["'])(?:(?=(\\?))\2.)*?\1(?!.count)	1
(["'])(?:(?=(\\?))\2.)*?\1\.count\(\)|((["'])(?:(?=(\\?))\5.)*?\4)	4
(\.)\1+	1
(..).*\1	1
Pattern.compile("\\b(\\w+)(\\b\\W+\\b\\1\\b)*", Pattern.MULTILINE+Pattern.CASE_INSENSITIVE);	3
([0-9])=\1	1
^\d{2}(-)?\d{2}\1\d{2}$	1
^\d{2}(-|)\d{2}\1\d{2}$	1
((q)?b\2)	1
^\d{2}(-?)\d{2}\1\d{2}$	1
^\d{2}(-)?\d{2}\1\d{2}$	1
(?:\b\w+(\w)\b[\W]*(?=\1))*\1\w+	3
(?:\w*(\w)\W+(?=\1))+\w+	3
sed -r 's/^.{3}(.{3}).{3}(.{6}).{5}(.{4}).*$/\1 \2 \3/g'	1
([\'"])((\\\1|.)*?)\1	3
(['"])(\\\1|.)*?\1	3
(["'])(?:(?=(\\?))\2.)*?\1	1
(['"])((\\\1|.)*?)\1	3
\d{2}([-/.])(\d{2}|[a-zA-Z]{3})\1\d{4}	1
^([0-9])(?!\1)$	1
^([0-9])(?!\1)$	1
echo "<p>this will def. fail. So. Sad.</p>" | sed -r -e "s/<p>(([^\.]*\. [^A-Z])*[^\.]*\.) [A-Z]/\1/g"	2
s/(kw1[^~]*)~([^#]*#)/\1qux\2/	2
sed -r 's/kw1/&\n/;T;:a;s/\n$//;t;s/\nbar/qux/;t;s/\n(.)/\1\n/;ta' file	1
"(['\"])((?:\\\\\\1|.)+?)\\1|([^\\s\"']+)"	2
"(?:(['\"]).*?\\1)|(?:[^\\s\"']+)"	1
(['"])((?:\\\1|.)*?)\1|([^\s"']+)	2
(\d)\1*	1
<([a-zA-Z0-9]+)>[\na-zA-Z0-9]*<\/\1+>	2
(["'])(\d+)\1	2
sed -r 'N;s/.* = (\S+).* = (\S+).*/\2\1/;s/..\B/&:/g' file	2
(\d*)((\d[a-z]*)-\d*)(\3)([a-z])?	2
([\d]*)([\d][a-z]*)-([\d]*)(\2)(.?)	2
print m/([a-zA-Z]+)=([0-9]+)/name: \1, value: \2\n/g	2
perl -n -e 'print m/([a-zA-Z]+)=([0-9]+)/name: \1, value: \2\n/g' test.txt	2
^(?:\d{4}$)(?:(.)(?!\1)|0?1?|1?2?|2?3?|3?4?|4?5?|5?6?|6?7?|7?8?|8?9?|9?8?|8?7?|7?6?|6?5?|5?4?|4?3?|3?2?|2?1?|1?0?)$	1
^(?=\d{4}$)(?:(.)\1*|0?1?2?3?4?5?6?7?8?9?|9?8?7?6?5?4?3?2?1?0?)$	1
(?!.*(?:(\d)\1|12|23|34|45|56|67|78|89|98|87|76|65|54|43|32|21))\d{4}	4
(?!.*(?:(\d)\1|01|12|23|34|45|56|67|78|89|98|87|76|65|54|43|32|21|10))\d{4}	4
sed -e 's/  / x /g; :a; s/\(\$[1-9][0-9]*\) /\1/; ta' | awk -F '[^0-9.]' -v p='[0-9]+\\.[0-9][0-9]' '$0 ~ p { gsub(/,/, ""); for (i=NF; i>0; i--) if ($i ~ "^" p "$") { print $i; next } }'	1
sed -e ':a; s/\(\$[1-9][0-9]*\) \([0-9][0-9][0-9][ .]\)/\1\2/; ta; :b; s/\([1-9][0-9]*\),\([0-9][0-9][0-9][,.]\)/\1\2/; tb;' | awk -F '[^0-9.]' '{ for (i=NF; i>0; i--) if ($i ~ /^[0-9]+\.[0-9][0-9]$/) { print $i; next } }'	1
sed -e ':a; s/\(\$[1-9][0-9]*\) \([0-9][0-9][0-9][ .]\)/\1\2/; ta; :b; s/\([1-9][0-9]*\),\([0-9][0-9][0-9][,.]\)/\1\2/; tb;' | awk -F '[^0-9.]' -v p='[0-9]+\\.[0-9][0-9]' '$0 ~ p { for (i=NF; i>0; i--) if ($i ~ "^" p "$") { print $i; next } }'	1
@"([a-z])\1.*?(?!(\1))\2"	4
@"([a-z])[\w-[\1]]"	1
@"([a-z])[^\1]"	1
@"^([a-z])(?!\1).$"	1
@"([a-z])(?!\1)."	1
@"^([a-z])\1.*((?!\1)[a-z])\2$"	4
([a-z])\1.*?(?!(\1))\2	4
printf '"%s"\n' * | sed 'p; s/\(..\)\(..\)"$/\2\1"/' | xargs -L 2 mv	1
printf '%s\n' * | sed 'p; s/\(..\)\(..\)$/\2\1/' | tr '\n' '\0' | xargs -0 -L 2 mv	1
s/\(..\)\(..\)"$/\2\1"/'	1
sed 'p; s/\(..\)\(..\)"$/\2\1"/'	1
printf '%s\n' * | sed 'p; s/\(..\)\(..\)$/\2\1/' | xargs -d '\n' -L 2 mv	1
sed -r '/\n/!s/([^0-9]*\b(([0-9])[ ,]([0-9]{3})|([0-9]+))(\.[0-9]{2})\b)+/\n\3\4\5\6\n/;/^[0-9]+\.[0-9]{2}\b/P;D' file	2
sed -r 's/N:(\w*) (\w*)/N:\2;\1;;;/g' file.txt	2
sed 'N;s:<Directory "/var/www/html">\(.*\)AllowOverride None\(.*\):  <Directory "/var/www/html">\1AllowOverride All\2:' /etc/httpd/conf/httpd.conf  > newHttpdConf.ini	1
^(?:[A-Z0-9]|([_!:])(?!.*\1))+$	3
([_!:])(?!.*\1)	2
sed -r 's/^([0-9]{21})([A-Z]{3,10})$/\1 \2/' filename	1
regexp_filter = (.*)(graphical|graphic|graph) => \1graphy	2
(.*)(graphical|graphic|graph) => \1graphy	2
([a-z][a-z])\1|([a-z])\2	1
(\w{2}).*?(\1)	1
regexp_filter = ([0-9]|10|11|12)( a|a)(.)?(m)(.)? =>\1am	1
(?:<(step|group)>\s+</\1>\s+)+	1
(?:<(\w+)>\s+</\1>\s+)+	2
sed -e 's|\(www[0-9]*\.\)[a-zA-Z0-9._]*\(\.domain\.com[a-zA-Z0-9._/]*\)|\1subtituted_text.\2|g' <large.xml >filtered.xml	1
sed -r 's#(www[0-9]*\.)[a-zA-Z0-9._]*(\.domain\.com[a-zA-Z0-9._/]*)#\1subtituted_text.\2#g'	2
"^('|\")(.*)\\1$"	2
^(?!([0-9])\1*$)[a-zA-Z0-9]+$	4
sed -r '/^indirger(ken|di)/{s/([0-9]+[.][0-9]+ )(indirge)/\1\n\2/g}' my_file	2
:%s/^<h2 id=\(\[.\]\+\)<a\([.]\)\+>\(.\)\+<\/a><\/h2>$/--->\3/	1
regexp_filter = (Left)(Right) => \2\1	1
regexp_filter = ((PatternWord1|PatternWord2)\W+(?:\w+\W+){1,6}?)(SearchTerm)\b => \1World	2
sed -E -e '/^r/ s/^ *([^ ]*) *= *(.*)[.](.*)$/\1 = \2 \3/'	2
regexp_filter = (HI)(\W+(?:\w+\W+){0,3}?(Manufacturing)\b) => upper_\1\2	2
regexp_filter = (HI)(\W+(?:\w+\W+){0,3}?(Manufacturing)\b) => upper_HI\2	2
regexp_filter = (?i)(HI)(\W+(?:\w+\W+){0,3}?(Manufacturing)\b) => upper_\1\2	2
('+)([\w/-]+)\1	2
sed -r "s/^(server1.*)([0-9]+[.][0-9]+[.][0-9]+.[0-9]+[ ]*)$/\1$NEWIP/" my_file	2
^([^@]{5,})[^@]{1,}\.\1@[^@]+$	1
(?=(.{2}).*\1)	4
^(.)\1+$	1
^(?!000|666)[0-9]{3}([ -]?)(?!00)[0-9]{2}\1(?!0000)[0-9]{4}$	1
strpat='^([a-z]*)\1$'	2
^([a-z]*)\1$	2
<(.*?=(['"]).*?\2)([\S].*)|(^/)>	2
(\s+[\w-]+(=(['"])[^"']*\3)?)*	3
<\w+(\s+[\w-]+(=(['"]?)[^"']*\3)?)*\s*/?>	3
(=(['"])[^"']*\3)?	2
"<([\\S ]+)>([\\S ]+)</\\1>"	2
(?=((\d)\d\2))	4
r'(\d)(?=(\d)\1)'	1
${SELECTION/([^,]+)(,.*)?/\2/}	2
doFunc('${SELECTION/([^,]+)(,.*)?/\1/}', ${SELECTION/([^,]+)(,.*)?/\2/});	2
sed -r 's/^.?([RD]).*$/\1/'	1
for i in $my_string; do echo $i | sed -r 's/^.?([RD]).*$/\1/'; done	1
sed -i.bak ':a;s/^\(\([^ ]*\).*[0-9]\) /\1\n\2 /;ta' yourfile.txt	1
^(?:(mode1|mode2|mode3)\|?)*(?!(?:mode1|mode2|mode3)\1)$	1
sed -ri 's/("[^_]*)_([^_]*")/\1 \2/g' test	2
^(([\%\/\\\&\?\,\'\;\:\!\-])\2?(?!\2))+$	3
^(19|20)\d\d(/)(0[1-9]|1[012])\2(0[1-9]|[12][0-9]|3[01])$	1
(?=(\s|\.|,|:|;|\?|\!|^))\1(American Tea)(?=\s|\.|,|:|;|\?|\!|$)	1
sed -r 's/string(.*)/\nlonger_string\1\n&/;ta;:a;s/\n(\S)(.*\n)./\1\n\2/;ta;s/\n.*\n(.*)/\1/' file	2
(\w)(.{2,5}\1){2}	1
(\w)(..\1..\1|...\1...\1|....\1....\1|.....\1.....1)	1
^(")?\d+(?:\.\d+)?\1$	1
%s/\v<(string|Search_string)>/\\new{\1}/g	1
^(.+?)::x=\1(?:&|$)	2
^([a-z])(\w)(\s)(\W)(\d)([A-Z])([a-zA-Z])([a,e,i,o,u,A,E,I,O,U])(\S)(\D)\1\2\3\4\5\6\7\8\9\10$	1
^([a-z]\w\s\W\d\D[A-Z][a-zA-Z][aeiouAEIOU]\S)\1$	1
^([a-z])(\w)(\s)(\W)(\d)(\D)([A-Z])([a-zA-Z])([aeiouAEIOU])(\S)\1\2\3\4\5\6\7\8\9\10$	1
(\d+?)\1+	2
sed 's/com.test.data -\(.*\)2016-01/\1/' debug.log > test.log	1
(["']|)(http.+)\1	2
sed -r -e 's/datasource="localderby"/datasource="localpostgres"/g' -e 's/datasource="localderby([a-z]+)"/datasource="localpost\1"/g' datasources.xml	2
/<([biu])>(.*?)<\/\1>/gi	2
(\1) += row["\1"];	4
Topic1</(.+?)>(.*?)<\\1>	2
^(?=.*[A-Z])(?=.*[aAeEiIoOuU])(?=.*\d)(?:([a-zA-Z\d])(?!\1))+$	3
^(?=.*[aeiouAEIOU])(?=.*[A-Z])(?=.*\d)(?!.*(.)\1)[a-zA-Z0-9]+$	2
:%s/\v^(\d{5})/The first 5 digits are \1/	1
([^a-zA-Z0-9])\\1+([a-zA-Z].*)	2
((\\W)\\2+)	2
(?s)(\\W)\\1+\\w.*	1
\([[:alpha:]]\+\)#\2,\1#' <<< 'xxx	1
sed -r 's#([[:alpha:]]+)/([[:alpha:]]+)#\2/\1#' <<< 'xxx/aaa'	2
echo xxx,aaa | sed 's/\([^,]*\),\([^,]*\)/\2,\1/'	1
echo xxx/aaa | sed 's%\([^/]*\)/\([^/]*\)%\2/\1%'	1
::(\w+)[^::]+::(?<content>.*?)::(?=\/\1)	2
\b\w*(\w)\1\1\w*	1
(var\h+)([^\h=]+)(.*)<%=\2%>	2
(.)\1\1	1
(\d)\1{2}	1
([0-9])\1\1	1
([0-9])\1{2}	1
sed -r 's/.*[?=]([^,]+),([^,]+),([^,]+),(.*)/[\1,\4],[\3,\4],[\3,\2],[\1,\2]/' file	2
sed 's/.*[?=]\([^,]\{1,\}\),\([^,]\{1,\}+\),\([^,]\{1,\}\),\(.*\)/[\1,\4],[\3,\4],[\3,\2],[\1,\2]/' file	1
sed -r 's/^.*\?[^-0-9]*([^,]*),([^,]*),([^,]*),([^,]*)/[\1,\4],[\3,\4],[\3,\2],[\1,\2]/' file	2
sed 's/^.*\?[^-0-9]*\([^,]*\),\([^,]*\),\([^,]*\),\([^,]*\)/[\1,\4],[\3,\4],[\3,\2],[\1,\2]/' file	1
(?<![.,\d])\d+(?:([.,])\d+(?:\1\d+)*)?(?!\1)[.,]\d+(?![,.\d])	1
res=$(echo $email | sed 's/\(.*\)@.*/\1/')	1
sed -i 's/\(insert into .* (\)\(.*) values (\)\(.*\)) /\1admin_id, \2\$admin_id, \3/' *.php	2
sed -i "s/\(insert into \w* select \$column from \$tableperiod\)/\1 where admin_id='\$admin_id'/" *.php	1
sed -i 's/\(insert into .* (\)\(.*) \)/\1admin_id, \2/' *.php	2
([ab])([ax])\1x\1	1
<(\w+)></\1>	2
(\w)\1{3,}	1
\b(?!\w*?(\w)\1{3})\w+	4
(?!\w*?(\w)\1{3})	4
sed -E ':a;s/((,|^)"[^",]*),/\1/;ta' file	2
sed -E ':a;/^([^"]|"[^"]*")*$/!{N;ba};:b;s/((,|^)"[^",]*),/\1/;tb' file	2
sed -E ':a;/^([^"]|"[^"]*(""[^"]*)*")*$/!{N;ba};:b;s/((,|^)"[^",]*(""[^",]*)*),/\1/;tb;' file	2
perl -pi~ -e '$/ = "";s|<a href="#">\n(\s*<img class="media object") src=(".*png")|<a class="fancybox" href="\2">\n\1 src=\2|ms' ch03.html	2
echo $a | sed -r 's/("key2"):"[^"]*"/\1:"replaced"/g'	1
((\s|\t)*\/{2,})(.*[-]+)(\r?\n)((\1(.*)\4?)+)\4\1\3\4?	3
find . -name "*concat.txt" | (read file && egrep 'Test path:[ \t]*path/to_tests/t1' $file | sed 's/^[ \t]*//' && grep 'FAIL' $file | sed 's/^[ \t]*//' | sed 's/[ \t]*;[ \t]*//' | sed 's/,\(FAIL\).*/ \1/')	1
echo ftp://trial.com/hist.pdf | sed 's/^\(.\+\):\/\/\([^\/]\+\)\/\?.*$/\1 \2/'	1
:%s/ \([[:upper:]]\+:\)/\r\1/g	1
:%s/\n\+/ /g | %s/ \([[:upper:]]\+:\)/\r\1/g | %!sort	1
:nnoremap <F5> :%s/\n\+/ /g \| %s/ \([[:upper:]]\+:\)/\r\1/g \| %sort! <CR>	1
([A-Z]+:)([A-Za-z\s\.]+)(?!\1)$	2
%s/\(f\w*\).*/\0 \1/	1
m(\p{Alpha})(\w+) = (((?i)\1)\2)	2
NOT REGEXP_LIKE(MOBILE_NO,'(.)\1{9,}')	4
(\d)\1{9}	1
^(itemA|itemB|itemC|itemD|item E|itemF) (?!\1)(itemA|itemB|itemC|itemD|item E|itemF) (?!\1)(?!\2)(itemA|itemB|itemC|itemD|item E|itemF)	4
perl -pe 's/title="(.*?)"\nartist="(.*?)"(?:\n|$)/\2 - \1/ig' list.txt	2
[a-z]*([a-z])([a-z])\2\1[a-z]*	1
\b(?![a-z]*([a-z])([a-z])\2\1[a-z]*\b)[a-z]+\b	4
replaceAll("([^a-zA-Z0-9])\\1+","_")	1
replaceAll("([\\s\\-\\!])\\1+","_")	1
(([01])\2*)	2
s/\(\-\?\d\+\.\d\+\),\(\-\?\d\+\.\d\+\),\(\-\?\d\+\.\d\+\)/\2,\1,\3/gc	1
:%s/\[\(.*\),\(.*\),\(.*\)\]/[\3,\1,\2]/	1
:%s/\(123\),\(456\)/\2,\1/	1
(`\w+`) AS \1	2
^((.)(?1)\2|.?)$	1
(abc|def)=\1 matches abc=abc or def=def, but not abc=def or def=abc.	1
sed 's/([^a-zA-Z0-9])bar([^a-zA-Z0-9])/\1test\2/g;s/^bar([^a-zA-Z0-9])/test\1/'	1
/((?<=.)[A-Z][a-zA-Z0-9]*)|((?<=[a-zA-Z])\d+)/\L-\1\2/g	2
s/\([^ |]\)\( \+[^ |]\)/\1\n\2/g	1
~$ cat somecsv.csv | sed "s/\(.*\),/\1/g"	1
~$ cat somecsv.csv | sed "s/\(.*\),/`SOMESCRIPT \1`/g"	1
~$ cat somecsv.csv | sed "s/\(.*\),/`SOMESCRIPT `\1/g"	1
sed 's/\(.*\)\(,.*\)/printf "%s\2\\n" $(SOMESCRIPT "\1")/e' file	4
/^@import\s(url\s?\((["'])(.*?)\2|(["']).*?\4);	2
(\w).*\1.*\1	1
sed 's/<a[^>]*href="sample.com"[^>]*>([^<]*)</a>/\1/'	2
(["'])(.*?)\1	2
<(li|ol|otherelement)[\s\S]+?<\/(\1)>	1
find . -exec sed -i -E -e "s/::[$]_([a-zA-Z]+)/::getVar('\1')/g" {} \;	2
sed -r 's/(:.*)(.*:)/\2\1/'	2
sed -r ':a;/[^:]*:[^:]*:/{s/([^:]*):([^:]*):(.*)/\2 \1:\3/;ba};/[^:]*:[^:]*$/s/([^:]*):([^:]*)$/\2 \1/;' file	2
:%s/:\(\w\+\)\s*=>\(\s*\)/\1:\2/g	1
:%s/\v:(\w+)\s*\=\>(\s*)/\1:\2/g	2
sed -r 's/$/:\n/;ta;:a;s/^([^ :]+)\s*:(.*\n)/\2 \1/;ta;s/\n //' file	2
(?<=(["'])).+?(?=\1)	1
(["']).+?\1	1
(["'])(.+?)\1	2
(\d+)v(\1)	2
myListeningPort="$(sed -nr 's/^\s*listen\s+([0-9]+)\s*.*;$/\1/p' $nginxconfig)"	4
sed -nr 's/^\s*listen\s+([0-9]+)\s*;$/\1/p' $nginxconfig	2
^(\'{0,2})(\w+)\1$	2
\d{4}([-/])(0[1-9]|1[012]|JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)\1(0[1-9]|1\d|2\d|3[01])	1
\d{4}([-/])(\d{2}|\w{3})\1\d{2}	1
:%s/\(\d\)\(\(\d\d\d\)\+\)/\1,\2/gc	1
Pattern.compile("^VAL([12]),VAL(?!\\1\\b)([12])$")	1
((hello)\2)	1
echo "/c/test/my0.txt~" | sed 's/.\.\([^.][^.]*\)$/.\1/'	1
echo "/c/test/my0.txt~" | sed -E 's/.\.([^.]+)$/.\1/'	2
echo "/c/test/my0.txt" | sed 's/.\(....\)$/\1/'	1
((\w)(\w)\3\2)	1
^((\w)(\w)(\3)(\2))	1
^((\w)(\w)(?!\3\2))	1
^((\w)(\w)(?!\3)(?!\2))	1
^((?!(\w)(\w)\3\2).)*$	4
sudo wbinfo --group-info GROUPNAME| sed -r -e s/'(?:DOMAIN\\(\w+),?)|(?:[^]+:)/\1/g'	2
sed -rn 's/.*abc([0-9]+)xyz.*/\1/gp'	2
/\zs\(\d\d\d\.\d\d\).*\1\ze	1
/\v^.*&%(.*(\d{3}\.\d{2}).*\1)@!.*	4
\v^%(.*(\d{3}\.\d{2}).*\1)@!.*	4
.*(\d\d\d\.\d\d).*(?=\d\d\d\.\d\d)(?!\1).*	1
/\v^((\d{3}\.\d{2})@!.)*(\d{3}\.\d{2})(.*\3)@!.*	2
^(.+)(.+)\2\1$	2
::(\S*(?:(?=(\s+))\2(?!:|$)\S*)*)	2
((0|1){4}(?!\2)(0|1))+	3
^(?![01]*([01])\1{4})[01]+$	4
(?![01]*([01])\1{4})	4
\b(?![01]*([01])\1{4})[01]+\b	4
:%s/\([A-Za-z_]*\)\t\([0-9A-Z-]*\)\t\([0-9]*\)\t[A-Z]*\[\(.\).\(.\)\][A-Z]*\t+\([a-z0-9]*\)\t/\1\t\2\t\3\t\4\t\5\t\6\t\7/g	1
\b(\w+)\b=(['"])(?:\\\\|\\\2|.(?!\2))*def(?:\\\\|\\\2|.(?!\2))*.?\2	3
\b(\w+)\b=(['"])(?:.(?!\2))*def(?:.(?!\2))*.?\2	3
^(\d+),.{\1}	2
(EP \d{5,7})(?:.*[\r\n]+){52}.*\1	1
(test)\1	1
sed -r 's/(.{30})  /\1/'	1
(.)\1+	1
^(.)\1+$	1
/(?s)<(\w+)[^>]*>(.*?)<\/\1>/	2
__\(([\"'])(.*?)\\1\)	2
__\(\s*([\"'])(.*?)\\1\s*\)	2
"(.)\1"	1
$string -replace '(.)\1+',("_"*'$&'.length)	1
sed -i -r 's/^([^\]]*).*/\1/' "$FILE.tmp"	2
^(.*)\r\n(\1.*?\r\n)	2
sed -r -e "s/(^[^\t]+\t)([^\t]+\t)(.*$)/\2/"	2
| sed -n 's#.*<string>\(.*\)</string>#\1#p'	1
tr -d "\n" < file| grep -o "<string>[^<]*</string>"|sed 's/<string>\(.*\)<\/string>/\1/'	1
^(?!.*(.).*\1)[BDILMOP]{5}$	4
(?!.*(.).*\1)	4
sed -r 's/.*(OU=[^,]*,OU=[^,]*),DC=.*/\1/' file	2
[_0-9a-z-‘!@#$%^*()!~`\22\42.]	1
(?m)((["'])(?:\\.|.)*?\2)|//.*?$|/\*[\s\S]*?\*/	4
(?=([1234])(?!\1)([1234])(?!\1|\2)([1234])(?!\1|\2|\3)([1234]))	4
href=(['"])([^'"]+\.docx?(\?[^'"]*)?)\1	2
([a-z])\1	1
var pattern = @"\bID(\d+).*?\bID\1\b";	2
sed -r 's/^(.*)(.{3})$/\1\U\2/' file	2
sed -e 's/^\(.*\)\(.\{3\}\)$/\1\U\2/' file	1
sed -e 'h;s/.\{3\}$//;x;s/.*\(.\{3\}\)/\1/;y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/;H;g;s/\n//;' file	1
(?=([0-9]+\s+ok\s+))\1(?![0-9]+\s+nok)	2
(?=(...))\1	1
egrep '(\w{2,}).*\1' file	1
echo "ABC foo ABC bar" | egrep '\b(\w{2,})\b.*\b\1\b'	1
echo "ABC foo ABCD bar" | egrep '\b(\w{2,})\b.*\b\1\b'	1
perl -pi -e 's/(<langSet xml.lang=....>)\s*<tig>(.*?)<\/tig>\s*<tig>/\1<tig>\2<\/tig>\1<tig>/g' iate.dsl	2
perl -p -i -e 's/(<langSet xml.lang=....>)\s*<tig>(.*?)<\/tig>\s*<tig>/\1<tig>\2<\/tig>\1<tig>/g while m/(<langSet xml.lang=....>)\s*<tig>(.*?)<\/tig>\s*<tig>/gi' iate.dsl	2
sed -e 's/^\([^,]*\),.*/\1/' test.txt	1
sed -e "s#\(.\)/\(.\)#\1+\2#g"	1
sed -r ':a;s|(.)/(.)|\1+\2|g;ta' file	1
(.)~\1+\2~g; s~(.)	1
sed -r 's=(.)/\b=\1+=g;' file	1
sed 's/\([^\/]\)\/\([^\/]\)/\1+\2/g;s/\([^\/]\)\/\([^\/]\)/\1+\2/g' file	1
sed -r ':a;s#([^/])/([^/])#\1+\2#g;ta' file	1
sed ':a;s/\([^\/]\)\/\([^\/]\)/\1+\2/g;ta' file	1
(\.\.\. (?<ID>(\d+)))(?<!(?s)tag (\k<ID>).*?)	2
\.\.\. (?<ID>\d+)(?<!(?s)tag \k<ID>.*?)	2
pkg_info -a | awk -F'[[:space:]]*' '{print $1}' | sed 's/\(.*\)\(-.*\)/\1/g'	1
^(?!(\\d)(\\1){8})\\d{9}$	4
sed  's/ ([a-z]*) ([0-9]*)/\2 \1/g'> $file_output	2
s/\([a-z]*\) \([0-9]*\)/\2 \1/g'	1
sed  's/\(.*\) \(.*\)/\2 \1/'	1
^[pP]{2}[^a-m](?!.*(.).*\1)\d{5}$	4
:%s/\(title: \)\(.*\n\)\(text: \D*\)\(\d*\)/\1q\4_\2\3\4/	1
<([^]*?)>(?:([^]*)<\/\1>)?	2
/<([a-z0-9-]+)>([^]*?)(?:(<\/\1>)|$|(?=(?:<[a-zA-Z0-9\-]+>)))/gi	2
((['"]).+?\2|.+?(?=["']|$))	2
@"(?:([A-Za-z0-9\-])\1{2}){3}"	1
@"(?:([A-Za-z0-9\-])\1{3}){3}"	1
(^|\s+)(\S+)(($|\s+)\2)+	3
rspirep ^Location:\ https:\/\/uaa.devtest3.io\/login;jsessionid=([0-9A-Z]*)   Location:\ https:\/\/myexample.com\/uaa\/login;jsessionid=\1	2
sed 's/ +§/§/;s/ \([^ ]*§\)/,\1/' sourcefile	1
sed 's/ \([^ ]*§\)/,\1/' sourcefile	1
(["'])(?:(?=(\\?))\2.)*?\1	1
^.*((["'])(?:(?=(\\?))\3.)*?\2).*	2
:%s/\v(\w+)\((\w+),(\w+)\)/\1(\2) = \3/g	2
(.+?)(.+?)\2\1	2
VALUE=$(echo "${INPUT}" | sed -e 's/.*:start:\(.*\)\/end.*/\1/')	1
(["']).*?\1|\b(?:(\d{1,2}:\d{2})(?::\d{2})?)\b	1
egrep "^(\w+) .*\1$" testw.txt	2
"^(\w+) .*\1.?$"	2
sed 's/^\([^|]*|[^|]*\)\(\(|[^|]*\)\{4\}\)$/\1|\2/'	1
(['"])[^'"]*\1	1
(['"]).*?\1	1
sed 's/style="\(transform: [^"]*"\)/style="-webkit-\1;\1/g' file.html	1
sed 's/style="\(transform: [^"]*"\)/style="-webkit-\1;\1/g' file.html	1
sed -E 's/([0-9]{8}),(http.+?[0-9]{4})(.+?,)/\2,/g'	2
sed 's/[()]*//g; s/^[^,]*,//; s~\(/[0-9]\{4\}\)[^,]*~\1~g' file	1
(dog|test).*\1	1
((dog)|test)(?:(?!\1).)*?(?(2)test|dog)	1
^(?!.*?(test|dog).*?\1).*(test|dog).*	4
echo str | grep -o -E "eeee.(.)00.{\1}"	1
sed -r 's/^.(.{6}).*$/\1/g;' file	1
sed -r -n '/^.{7}/ {s/^.(.{6}).*$/\1/g;p}' file	1
(\d)x[\1-9]	1
sed -E -n 's/([Ss][Cc][-_]*[0-9][0-9]*).*(\.[a-zA-Z0-9]{3})/\1\2/p' infile	2
sed -E -n 's/.*([Ss][Cc][-_]*[0-9][0-9]*).*(\.[a-zA-Z0-9]{3})/\1\2/p'	2
BRANCH_NAME=$(egrep \\"${project}\\" localFile.xml | sed -n 's_.*changeset=\"\([^\"]\+\).*_\1_p')`	1
BRANCH_NAME=$(egrep \\"${project}\\" localFile.xml | sed -n 's_.*changeset=\"\([^\"]\+\).*_\1_p')	1
grepl(x, pattern = "((.+)/).*(/\\2(/|$))", perl=T)	2
doFunc(${SELECTION/^([^,]+)(?:,\s*(.*))?/'\1', (?{2}(\2):'null')/});	4
(?<!^)(?<!n)((n)\2{2,})(?!$)(?!n)	1
"SET (\\w*) (\"?)(.*)\\2"	2
SET (\w*) ("?)(.*)\2	2
(TAG|CORE)START B(.+?)(\1END B)	2
(TAG|CORE)START(?: B)?(.+?)(\1END(?: B)?)	2
(?!(?<ch>.)\k<ch>\k<ch>)	1
^((?!(?<ch>.)\k<ch>\k<ch>)(?!012|123|234|345|456|567|678|789|890)[0-9]){8,}$	1
sed -E 's/^.*([Ss][Cc][-_]?[0-9]{4}).*(\.[a-Z]{3})$/\1\2/' infile	1
sed 's/^\(@server_ip=\).*/\1127.0.0.1/' file	1
(?:[^a-z]*([a-z])(?=.*(\1[^a-z]*\2?+)$))+[^a-z]*[a-z]?[^a-z]*\2	4
sed -n 's/.*[cf]=\("[^"][^"]*\.js"\).*/\1/p;s/.*[cf]=\("[^"][^"]*\.html"\).*/\1/p' infile	1
sed -rn 's/.*[cf]=("[^"]+\.(js|html)").*/\1/p' infile	2
^(?!.*,$|.*\d{2,})(?:([\d*#]),?(?!.*\1))+$	3
sed 's/.*name: \("[^"]\+"\).*/\1/' INPUT	1
.*value1=\'(\d*)\'.*value2=\'\1\'.*	2
(['"]?)(\w+)=(?:(['"])((?:(?!\3).)*)\3|(\S+))\1	2
^(\d+)\s*\R+(?!\1)	2
^((\d+).*\R+)(?!\2|-{5}|\z)	2
sed -r "s/gettext\(([^()]*)\)(\.c_str\(\))?/boost::locale::gettext(\1).c_str()/g"	2
(\d)\1{3}$	1
(^|\d)((?!\1)\d)\2{3}$	4
(AA|BB)(.*?)\1	2
^.*?(\b\w+\b)(.*?\1).*?$	2
^.*?(\b\w+\b)[.,]\s*(\w+)\s*\1.*?$	2
changes\s*=(?=(\s*))\1[^A].*	2
sed -r 's/(^# *)([^ ]*)/\1\U\2/'	2
\b([aeiou])[a-z]+\1\b	1
s:\([^a-z]\)\\:\1/:g	1
:\1\\:g;t' -e 's:\([^a-z]\)\\:\1	1
s:\([^a-z]\)/:\1\\:g	1
%s/^\(\s\{3\}\)\w\+/\1  /g	1
[^\w\s]|(.)\1	1
[^\w\s]|(.)\1	1
[^\w\s]|(.)(?=\1)	1
[^\w\s]|(.)\1	1
^([aeiou]).*\1$	1
sed -e 's/\$\([^\$]\{1,\}\)\$/{% math %}\1{% endmath %}/g' filename	1
sed -e ' /\$\$/{s/\$\$/{% math %}/;:a;N;/\$\$/!ba;s/\$\$/{% endmath %}/};s/^\(\$\)\(.*\)\(\$\)$/{% math %}\2{% endmath %}/' sourcefile	1
(?:cstm1|cstm2)=(['"]?)\d+\1|(\b\d+\b)	2
MINISTÉRIO\sDO\sTRABALHO\sE\sEMPREGO(?:[^P]*(?:P(?!ÁG\s:\s\d+\/\d+)[^P]*)*)PÁG\s:\s\d+\/(\d+)\b(?:\D*(?:(?!\1\/\1)\d\D*)*)\1\/\1(?:[^Z]*(?:Z(?!6:\s\d+)[^Z]*)*)Z6:\s\d+	2
sed -r 's/^.*Product (.+) \(Shop ID: (.+)\)"$/&;\"\1\";\"\2\"/g' shop.csv	2
sed -r -n '/^[-+0-9() ]+$/ {s/[^0-9]//g; s/([0-9])/\1, /g; p;}' file	1
std::regex var_ree(([\\d]+)\\n\\1", std::regex::icase);	4
std::regex var_ree("([\\d]+)\r\n\\1", std::regex::icase);	2
"(.)\1{4}"	1
"((.)\1{3})"	4
"(.)\\1{3}"	1
(.)\1{3}	1
([^,]+(?:,[^,]+){2})\v+(?:(?:[^,]+,){3}\1(?:\v+|$)){3,}	2
(.)\1+	1
$ sed -r -i 's/^((\w+\*){3})\w*(.*)/\1abc123\3/g' file.txt	2
/(["'])[^"']+that\.dude\.js\/v1\/\1/g	1
(['"])([^"'\s]*that\.dude\.js\/v1[^"'\s]*)\1	2
^(?:(cat|dog|rat),(?!.*\1))*(cat|dog|rat)$	3
^(?:([abc]),(?!.*\1))*([abc])$	3
s/(.*)\n/\1/	2
sed -r 'h;s/[^#]*//1;x;s/#.*//;(substitution command);G;s/(.*)\n/\1/' file.txt	2
sed -r 'h;s/[^#]*//1;x;s/#.*//;s/test/TEST/g;G;s/(.*)\n/\1/' file.txt	2
sed -E 's/(TCP_IN *= *")[^"]+/\1MyNewVal/g'	2
sed 's:\(^\s\+make.\+ CC=\"\):\1your_command_here :g' file.log > outfile.log	1
sed -ir 's:(^\s+make.+ CC=\"):\1your_command_here :g' file.log	2
sed -r 's:(^\s+make.+ CC=\"):\1your_command_here :g'	2
sed -r 's:(^\s+make.+ CC=\"):\1your_command_here :g' file.log >outfile.log	2
%s/\"\(\w+\)\"/:\1/g	1
:%s/\"\(\w\+\)\"/:\1/g	1
:%s/\"\([^"]*\)\"/:\1/g	1
(?=(\S{4}).*,.*\1)	4
(?=([a-zA-Z]{4})[a-zA-Z]*, *[a-zA-Z]*\1)	4
\w*([a-zA-z]{4})\w*, \w*\1\w*	1
r([\/|:!`.])(.*?)(?<![^\\]\\)\1x?m?i?g?a?s?	2
r([\/|:!`.])(.*?)(?<![^\\]\\)\1([xmigas]+)	2
^(?:([xmigas])(?!.*\1))*$	3
/^r([\/|:!`.])(.*?)\1(?:([xmigas])(?!.*\3))*$/	3
(?:([xmigas])(?!.*\1.*))*	3
regexp_replace("aaeebb", "(.)\\1{1,}", "\\1")	1
(?=([a-zA-Z_][a-zA-Z0-9_]*))\2	2
sqlContext.sql("""SELECT regexp_replace('aaeebb', '(.)\\1+', '$1')""")	1
SELECT regexp_replace('aaeebb', '(.)\\1+', '$1');	1
df.select(regexp_replace(lit("aaeebb"), "(.)\\1+", "$1"))	1
__\s*(['"])([^']+)\1	2
__\s*(['"])((?:(?!\1)[\s\S])*)\1	2
([A-Z])([A-Z])([A-Z])\3	1
^(?!.*([A-Za-z])\1{2}|([-'])(?!\2))[-'A-Za-z]{3,50}$	4
^(?!.*([A-Za-z])\1{2})[-'A-Za-z]{3,50}$	4
(?!.*([A-Za-z])\1{2})	4
^(?!.*([A-Za-z])\1{2})(?=(?:[^a-zA-Z]*[a-zA-Z]){3,})(?!.{51})[-']?[A-Za-z]+(?:[-'][A-Za-z]+)*[-']?$	4
(?<=(.))(?!\\1)	1
^(?<indent>\s*)(?<mod1>\w+)\s(?<mod2>\w+)?\s*(?<mod3>\w+)?\s*(?<return>\b\w+)\s(?<name>\w+)\((?<arg>.*?)\)\s*\{(?<body>.+?)^\k<indent>\}	2
sed -nr 's/^[a-g]*(a?b?c?d?e?f?g?)[a-g]*$/\1/gp' test.txt	1
sed 's/\.\([^,]*\),/,\1/g' input.csv >output.csv	1
\([a-z]\).*\1	1
sed -r 'h;s/ //g;/(.).*\1/d;s/.*/&\nzyxwvutsrqponmlkjihgfedcba/;:a;ta;/^\n/!s/^(.)(.*\n.*)\1.*/\2/;ta;/^.+\n/d;x'	2
s/(.*)#(.*) (.*)/\1#\2_\3/	2
echo 'AB111-1-13' | sed 's/\(AB111\)-\([0-9]*\)-\([0-9]*\)/echo \1-\2-$(echo \3*$RANDOM | bc )/ge'	4
echo '<http://name/link#AB111-1-13>' | sed 's/\(AB111\)-\([0-9]*\)-\([0-9]*\)/echo \1-\2-$(echo \3*$RANDOM | bc )/ge'	4
--(\w+)=(?:('|")(.*?)(?<!\\)\2|(\S+))	2
ls -1 | sed s/\(.*\)/"\1"/	1
sed: 1: "s/(.*)/\1/": \1 not defined in the RE	2
ls -1 | sed 's/\(.*\)/"\1"/'	1
^(.*)(\r?\n\1)+$	3
(?s)(.*)[\r\n]+\1[\r\n]+	2
(?s)^(.*)(\r?\n\1)+$	3
\s+where(?:\s+([a-z]\w*\.?\w*)\s*=\s*(?!\1)\'?\w*\'?(?:\s*and)?)+\s*(?:order\s+by|limit|$)	2
\b(?:([abcd])(?!\w*?\1)){4}\b	2
grep -Px '[abcd]{4}' | grep -vP '(.).*\1'	1
\(?(\d)\1\1\)?[- ]?\1{3}-?\1{4}	1
%s/\(192.168.210.[0-9]\+\)/\"ssh\ myuser@\1\ -i\ \/Documents\/my_key\"/g	1
%s/\(192.168.210.[0-9]\+\)/\"ssh\ myuser@\1\ -i\ ~\/Documents\/my_key\"/g	1
^(\d*\s*([^,]*),.*)\2(,|$)	2
s/\([A-Za-z0-9]\+\)_\([0-9a-z]\)/\1\U\2/gc	1
sed -nr '/START/{:a;N;/STOP/!ba;/(TAG1).*\1/!b;/([^\n]*TAG[^\n]*\n){4,}/!b;p;q}' file	2
sed -E 's:.*<strong>([0-9.]+).*:\1:g'	2
sed '\([^,]*\),\([^,]*\)\.\([^,]*\),,\([^,]*\),\([^,]*\),\([^,]*\),\([^,]*\),\([^,]*\),\([^,]*\),\([^,]*\),\([^,]*\),\([^,]*\),/\1,\2,\3,\4,\5,\6,\7,\8,\9,\10,\11,\12,'	1
([^aeiou]|[^AEIOU]|[^0-9])\1	1
([^0-9])\1	1
([^aeiou]|[^AEIOU])\1	1
([^aeiou^0-9]|[^AEIOU^0-9])\1	1
(?<=(.)\1).	4
(.)\1	1
(.)\1	1
^>>(?:([ab+])(?!.*\1))*$	3
^>>(?:([ab+])(?!.*\1))*\+c$	3
^>>(?:([ab])\+(?!.*\1))*c$	3
^>>(?:([ab+])(?!.*\1)).*\+c$	2
^>>(?:([ab])\+(?!\1)).\+c$	1
^\s*<(title|price)[^>]*>(.*)<\/\1>	2
sed -r -e ':loop' -e 's/([^ ]+)<>/(\1)/' -e 't loop' -e 's/(.* )(.*)/(\1 (\2))/'	2
sed -r -e ':loop' -e 's/([^ ]+)<>/(\1)/' -e 't loop' -e 's/(.* )(.*)/(\1 (\2))/'	2
sed -r 's/(\w+) (\w+:stem)<>(\w+:suffix)/(\1 ((\2)\3))/'	2
(MLS®[0-9]*) (\$[0-9,]+) - <p> \1  &nbsp;&nbsp; \2 </p>	2
(?si)<([^\s<]*password[^\s<]*)>.*?</\1>	2
^[\w]+\s([\d]+)\/\1$	2
.*(.).*\1+.*	1
^visite(?=(\d+))\1(?![a-z])	2
sed -r 's/([^_]*)_([^_]*)/1st: \1\n2nd: \2/' <<< 'foo_bar'	2
sed -r '/[^ ]* Abc/!{/[^ ]* MOVE/! s/([^ ]* )([^_]*)_([^_]*)_(.*)/\1\3_\2_\4/}' file	2
sed -r -e 's/([a-zA-Z0-9]+)_(MOVE)/\2_\1/g; s/(MOVE)_(Abc)/\2_\1/g'	2
require\(('|")(?:assert|fs|path|child_process)\2\),?	1
^(?:var|const)\s*([a-z$_]+\s*=\s*require\(('|")(?:assert|fs|path|child_process)\2\),?[\n\r\t\s]*)*;$	3
("|')(assert|fs|http)\1	1
sed --in-place 's|\(^n[0-9]*\)\(_[0-9]*\.[a-zA-Z]*\)\(.*\)|\1/\1\2 \1|' *	1
(\w+)(?=.*)\1	2
(\b\w+\b)(?=.*\b\1\b)	2
var passwordRegex = @"(?si)<([^\s<]*password[^\s<]*)>.*?</\1>";	2
sed -r 's/([0-9]+)/\1.0/g'	2
sed 's/(.*?)__P\((.*?)\);/\1\2;/gs' file.c	2
perl -0777 -p -i -e 's/(.*?) __P\((.*?)\);/\1\2;/gs' file.c	2
sed '/^(\d+\s+,)\S+\s*,\s*$/\1true,false/gm' file.txt	2
sed '/^(\d+\s+,)\s*,\S+\s*$/\1false,true/gm' file.txt	2
sed '/^(\d+\s+,)\s*,\s*$/\1false,false/gm' file.txt	2
sed '/^(\d+\s+,)\S+\s*,\S+\s*$/\1true,true/gm' file.txt	2
sed 's/|/ /7g;s/.\(|2016\)/|\1/'	1
<img[^>]*?id=(['"])(.+?)\1	2
sed -r ':start s/(column7.)([^\|]*?)\|(.*?.2016)/\1\2 \3/; t start' file	2
sed -e ':b' -e 's/\(|column7|\)\(.*\)|\(.*|2016|\)/\1\2 \3/' -e 'tb' inputfile	1
sed ':a;N;$!ba;s:\/\([[:digit:]]\S*\)\n:\1 :g'	1
sed ':a;N;$!ba;s:\([[:digit:]]\S*\)\n:\1 :g'	1
(?!.*([-_ ’])\1)	4
^(?=.{2})(?:[a-zA-Z]+|([ _’'-])(?!\1))+$	3
sed 's/|/&\n/7;:a;ta;s/\n\(|2016|\)/\1/;s/\n|/ \n/;ta;s/\n\(.\)/\1\n/;ta' file	1
s/^([A-Za-z]{3})[A-Za-z]*(.*)$/\1\2/g.	2
\\([^\\]+)\\\1(?:\.[^.\\]+)?$	2
\\([^\\]+)\\\1\.[^.\\]*$	2
uniq -c -s20 | sed -E 's/^ *([0-9]+) (.*)/\2 --- \1/g'	2
sed "s/\([0-9]\)-\([0-9]\)/\1\2/g" file	1
sed "s/\([0-9]\)-\([0-9]\)/\1\2/g" file	1
^(?!(.)\1{2})(?!012|123|234|345|456|567|678|789|987|876|765|654|543|432|321|210)[0-9]{3,}$	4
(.).*(\\1)	1
(.)(.*?\\1)	2
^(?!.*?(.).*?\1)(?!.*?(?:012|123|234|345|456|567|678|789|987|876|765|654|543|432|321|210))[0-9]{3,}$	4
^(?!.*?(.).*?\1)(?!012|123|234|345|456|567|678|789|987|876|765|654|543|432|321|210)[0-9]{3,}$	4
([A-Za-z_]\w+)\s*\+?=\s*(\1\s*)?(\+?\s*(([A-Za-z_]\w+)|"?.*?"?))*;	2
(.)\1{9,}	1
^(?!.*(?:(\d).*\1|012|123|234|345|456|567|678|789|987|876|765|654|543|432|321|210))(\d{3,})$	4
(")?([\w]+)(\1)?	2
<([\w_]+?)\b[^>]*>(.*?)</\1>	2
^(\w+)\s((?!\1).)*$	3
([b-z])\1	1
([a-z])\1	1
(11)\1+	1
sed -r 's/.*[<]+tr+[>]+[<]+td+[>](\S+).* <\/td><td>(\S+).*/\1 \2/'	2
sed 's/.*\([0-9]\{8\}\) <\/td><td>\([^<]*\) .*/\1 \2/'	1
'([0-9]) *\1{1}'	1
'([0-9]) ?\1{8}'	1
grep -E '([0-9]) *\1{8}'	1
grep -E '([0-9]) ?\1{8}'	1
sed 'N; s/\(.*\):::::\(.*\)/{ "values" : [{"title":"\1","message":"\2"}]},/'	1
(.+)\1	2
sed 's/^(      )([^ ]+)$/\1  \2/g' -i main.js	2
sed 's/^\([[:blank:]]\+\)/\1  /'  main.js	1
sed 's/^\(      \)\([^ ]\+\)$/\1  \2/g' -i main.js	1
\b\w*(\w)\1\w*	1
\b\w*(\w)\1{2}\w*	1
([0-9])\1\1\.\1\1\1\.\1\1\1-\1\1\1	1
"([0-9])\\1\\1\\.\\1\\1\\1\\.\\1\\1\\1-\\1\\1\\1"	1
Company Name: \1\nRole (designation): \2\nDate: \3 to \4	1
uname -r | sed 's/^.*\.el\([0-9]*\)\..*$/\1/'	1
$ uname -r | sed 's/.*el\([0-9]\).*/\1/g'	1
$ uname -r | sed -r 's/.*el([0-9]).*/\1/g'	1
((line\d+)\s*:.*\n)\2	2
sed -r 's/[0-9]+,\([0-9]+\),[0-9]+,\([0-9]+\),[0-9]+,\([0-9]+\).*/A:\1\/B:\2\/C:\3/'	1
sed -E 's#(.*?)(.)\2(.*)#\2\2 \1\2\2\3#g'	2
(.*?)((\w)\3)(.*)	2
\(.*\)\(.\)\4	1
sed 's#\(.*\)\(.\)\2\(.*\)\(.\)\4#\2\2 &#'	1
sed -r 's/.*(.)\1.*/echo "\1\1 $(echo \0|rev)"/ge' <(rev file)	1
(['"])([A-Za-z]+)\1	2
(['"])\1\1(.*?)\1{3}	2
echo "XYZ abc 123" | sed -E 's/([a-zA-Z0-9]+)/\1.com/g'	2
cat temp | tr '\n' ';' | sed -r 's/(your\s+name\?)(;A1-[^-]*-My\s+Last\s+name\s+is\s+)(\w+)/\1 \3\2\3/g' | tr ';' '\n'	2
(?=((a)\2))	4
^(?!.*[-:](\b(?:city|type2?|price):).*\1)filter:(?:city|type2?|price):[a-z0-9]+(?:-(?:city|type2?|price):[a-z0-9]+)*$	4
^(?!.*[-:](\b(?:city|type2?|price):).*\1)filter:(city|type2?|price):([a-z0-9]+)(?:-(?2):(?3))*\s*$	4
^(?!.*[-:](\b(?:city|type2?|price):).*\1)filter:((city:([a-z0-9]+))((-type:([a-z0-9]+))|(-type2:([a-z0-9]+))|(-price:([0-9]+)))*)\s*$	4
(?!.*[-:](\b(?:city|type2?|price):).*\1)	4
\b(\w+)\b.*\b\1\b	2
(\b\w+\b).*\b\1\b	2
(\b[A-Za-z]+\b)(?=.*\b\1\b)	2
\b([A-Za-z]+)\b[\s\S]*\b\1\b	2
\b(\w)?(\w)\w?\2\1	1
\b(\w)?(\w)\w?\2(?(1)\1)	1
(?(1)\1)	4
([a-zA-Z]) => \1(\.\w)?\w* = (\d+|true|false|'[^']*')	2
(?=([a-z]){2,})(?=[0-9])(?=[A-Z])(?=(\W)\1)	1
^(?=.*[a-z]{2})(?=.*[0-9])(?=.*[A-Z])(?=.*(\pP)\1)	2
-e 's/^.*([0-9]{4}-[0-9]{2}-[0-9]{2}).*\(([0-9]{8})\).*$/\1 \2/'	1
-e 's/^.*\(([0-9]{8})\).*([0-9]{4}-[0-9]{2}-[0-9]{2}).*$/\2 \1/'	1
sed -r 's/.*\(([0-9]{8})\).*([0-9]{4}-[0-9]{2}-[0-9]{2}).*/\2 \1/;s/.*([0-9]{4}-[0-9]{2}-[0-9]{2}).*\(([0-9]{8})\).*/\1 \2/' infile	1
echo 'class Foo(Baz, Bar, Jazz):' | sed -r 's/(class .*\(.*)([, ]*Bar[, ]*)/\1/'	2
find /source_path -name \*.data  | while read -r filename; do cp "${filename}" "$(printf "%s\n" "${filename}" | sed "s/^.*[/]\(category[^/]*\)[/]\(.*[.]data\)$/\/target_path\/\1_\2/")"; done	1
$ find /source_path -name \*.data  | while read -r filename; do printf "print version: cp %s %s\n" "${filename}" "$(printf "%s\n" "${filename}" | sed "s/^.*[/]\(category[^/]*\)[/]\(.*[.]data\)$/\/target_path\/\1_\2/")"; done	1
s/([^0-9.])\.([^0-9])/\1. \2/g	1
s/([^.]) ([A-Z][a-z])/\1. \2/g	1
s/([^.])$/\1./g	1
\b(\w)(?!.*\b\1)	2
(?:(da|en-gb|en|\*))(?!.*\1)	2
(?:(da|en-gb|en|\*))(?!.*\1)(;q=(1|0(\.\d+)?))?(,(da|en-gb|en|\*)(;q=(1|0(\.\d+)?))?)*	2
(en-gb|en-us|da)(?!\1)(en-gb|en-us|da)	1
\b(\w+)::(?!\b\1\b)\w+\b	2
\b(\w{2,})::(?!\b\1\b)\w{2,}\b	1
\b(\w[\w\d_]+)::(?!\1)\w[\w\d_]+	2
first_name = (['"])((?:(?!\1)[^\\])*(?:\\.(?:(?!\1)[^\\])*)*)\1	2
sed -i '' 's/\(OldUtility.getList(\)\(.*\))/\2.getList()/g'	2
[l|(ab)(?!\1)]{4}	1
[l|(ab)(?!\1)]	1
(.)\\1	1
".*(.)\\1.*"	1
(.)\\1	1
.*(.)\\1.*	1
$ sed -e 's/ \([^ ][^ ]*\)$/,\1/' /etc/hosts	1
sed -n 's/Found \([0-9]*\) modems:/\1/p' <<< "${var}"	1
nums=$(echo 821312010476 | sed -r 's/([^\D0])/\1\n/g; s/0/''/g')	1
"(.)\\1+"	1
for branch in `git branch -a | grep remotes | grep -v master | sed 's/^.*old\/\(.*\)/\1/g'`; do git branch --track $branch remotes/old/$branch; done	1
[A-Z]{2}([+*])(?:\d+(?:\.\d+)?)(?!\1)[+*](?:\d+(?:\.\d+)?),[A-Z]{2}	2
(?:[A-Z]{2}([+*])(?:\d+(?:\.\d+)?)(?!\1)[+*](?:\d+(?:\.\d+)?),)+[A-Z]{2}	2
^(?:[A-Z]{2}([+*])?\d*\.?\d*(?!\1)[+*]?\d*\.?\d*,?)*?(?:[A-Z]{2}([+*])?\d*\.?\d*(?!\2)[+*]?\d*\.?\d*?)$	4
^(?:[A-Z]{2}([+*])?\d*\.?\d*(?!\1)[+*]?\d*\.?\d*,?)*$	2
(?=([AIOUYaiouy]))(\\1+)|([Ee]+)(?<![Ee]$)	2
sed -r 's/^(bind\s+)([^.]+)\.([^.]+)\.([^.]+)\.([^.:]+)(:80(\s+.*)?)$/\1x.\3.f.\5\6/g' haproxy-sample.cfg	2
sed -i 's/\(bind \).*\(:35357\)/\1x.y.z.a\2/'	1
(34)5\1	1
([A-Za-z])\1+	1
^(19|20)\d\d([- /.])(0[1-9]|1[012])\2(0[1-9]|[12][0-9]|3[01])$	1
$ sed -i 's/{ (.*), (.*) }/\[\1\] = \2/g' file_name	2
sed -i -r 's/\{ (.*), (.*) \}/\[\1\] = \2/g' file_name	2
sed -i 's/{ \(.*\), \(.*\) }/\[\1\] = \2/g' file_name	1
s/:\([a-z_]*\)/${\1}$/g	1
(\w{3,})\1	1
\|====([^=]*)====>([^<]*(?:<(?!====\1====\|)[^<]*)*)<====\1====\|	2
\|====([^=]*)====>([\s\S]*?)<====\1====\|	2
sed -e 's/\([0-9],[0-9]\)/[\1]/g' -e 's/^\(.*\)$/[\1,]/' -e 's/[[][[]/[\n  [/' -e 's/[]],/],\n  /g' -e 's/  []]/]/g'	1
sed -e 's/\([0-9],[0-9]\)/[\1]/g' -e 's/^\(.*\)$/[\1,]/' -e 's/[[][[]/[\n  [/' -e 's/[]],/],\n  /g' -e 's/  []]/]/g'	1
(\b\w+)\s+\1	2
^\d{3}(-?)\d{2}\1\d{3}[a-z]?$	1
(<img[^>]*?) alt=(['"]).*?\2([^>]*?>)	2
^\(?([0-9])\1{2}\)?\1{3}-?\1{4}$	1
([A-Z0-9.,-])\1	1
(.)\1+	1
$new_value=value | sed -r 's/.*_([0-9]*)\..*/\1/g'	2
value=$(sed "s/^Branches executed:\([0-9][.0-9]*[0-9]*\)%.*$/\1/" afile)	1
<input type=\"hidden\"\s*name=\"itemId\"\s*value=\"([\w\-]+)\"[^<]*>.*?<SCRIPT LANGUAGE=\'JavaScript\'[^<]*>.*?(\1Matrix\s*\=.*?<\/SCRIPT>)';	2
^(\d{2})[\s\S]*\1$	1
^(\d{2})\1$	1
((.)\2*)	2
^(?!.*([0-9])\1{2})(?=.*[0-9])(?=.*[A-Z])(?=.*[a-z])[0-9a-zA-Z]*$	4
s/"¿">([a-z])/"\1">/g	1
sed -E 's/"¿">([a-z])/"\1">/g' <<< "$s"	1
^(.*?(\|50200\|).*?)\2	2
href=(["'])(.*?)\1	2
"/^\(.\{5\}\).*$/\1/	1
(\d)\1*+\d+|\d	1
(\d)\1*+\d+	1
(\d)(?:\1*+\d+)?	1
block (\d).*?attrib b=b(\1)	1
find xml/ -type f -name "*.201604*.xml" | head -5 | sed "s/.*\.\(2016[0-9]\{4\}\)\(.*\)/\1/g" | sort | uniq -c	1
val (\w+) =(?=.*\n.*val \1 = )	2
(.)\1{4}	1
([A-Z])([A-Z])\2\2\1	1
^(\d)(?:\1+)?$	1
([0-9]? ?)?(([0-9]{3})|(\([0-9]{3}\)))( |\-)?\2\5?\2[0-9]	1
\b(\w+)\s+\1\b	2
(\b.+?\b)\1\b	2
gsub("(?s)(\\b.+?\\b)\\1\\b", "\\1", s, perl=T)	2
(\b.+\b)\1\b	2
(\b.+?\b)\1\b	2
gsub("(?s)(\\b.+\\b)\\1\\b", "\\1", s, perl=T)	2
pattern="(\d{2}).*?\1"	1
\\b(\\w+)\\b(\\s+\\1\\b)+	3
([...])\1+	1
sed -r 's|.*/(.*)|\1|'	2
\bBegin(\d+)\b([\S\s]*)\bEnd\1\b	2
\nBegin(\d+)\s*\nMatch \b(\w+)\b keyword and \b(\w+)\b\s*\nEnd\1\n	2
(")(?:(?=(\\?))\2.)*?\1	1
sed 's/.*Fingerprint=\([^"]*\)".*/\1/' file1.txt	1
([AB])foo(?!\1)([AB])	1
(A|B)foo(?!\1)(A|B)	1
^(a|b)(?!\1$).*(?<!c)$	1
(\*\*)(?:(?=(\\?))\2.)*?\1	1
(?i)^(?!.*(w|x|y|z).*(?!\1)(?1)).*(?1)	2
(?!.*(w|x|y|z).*(?!\1)(?1))	4
(?m)^(?=.*([wxyz]))[^wxyz\r\n]*(?:\1[^wxyz\r\n]*)+$	2
^(?=.*([wxyz]))[^wxyz]*(?:\1[^wxyz]*)+$	2
^(\d*)(\d)\d*,\1(??{"[^\D${2}-9]"})\d*$	2
^(\d*)(\d)\d*,\1[^\D\2-9]\d*$	2
^(?=\d{4},\d{4}$)(\d*)(1\d*,\1[0]|2\d*,\1[0-1]|3\d*,\1[0-2]|4\d*,\1[0-3]|5\d*,\1[0-4]|6\d*,\1[0-5]|7\d*,\1[0-6]|8\d*,\1[0-7]|9\d*,\1[0-8])\d*$	2
s/\(v[a-Z]*[.]*\) \([0-9]*\)/\1 \\textbf{\2}/	1
sed -r "s/([vV][a-zA-Z]*[.]*) ([0-9]*)/\1 \\\textbf{\2}/"	2
/<\/(zweiterknoten)>\s*<\1>/g	1
/<\/(\w+)>\s*<\1>/g	2
grep -i -r -I (["'])(?:(?=(\\?))\2.)*?\1 * > out.txt	1
"\<([^/>]+)\>((?!\</\1\>)*)\</\1\>"	3
sed 's/\([^"]\),/\1",/'	1
#([\da-f])\1([\da-f])\2([\da-f])\3	1
#([\da-f])\1{5}	1
#([\da-f])\1([\da-f])\2([\da-f])\3	1
\#(.)\1(.)\2(.)\3	1
(\w{3})|(\d{3})\1	1
grep -E '(.)\1\1' < file	1
sed -E 's/([^,]*),([^ ]*) ([^,]*),([^.]*)\./\4, \2 \3, \1/'	2
(PO (\d{10})[^\r\n]+\R(.*\2\R)*+)([^\r\n]+)(\R)	3
sed -E 's/([^ ]*) ([^ ]*) ([^,]*), *([^,]*), *([^,]*), *([^.]*), *([^,]*) *([^,]), ([^ ]*) *([^,]) *([^,])/\2, \1, \3, ``\4," \\emph{\5} \\textbf{\8},{\9} (\6)  /'	2
sed -E 's/([^ ]*) ([^ ]*) ([^,]*), ([^,]), ([^.]), ([^,]), *([^,]) ([^,]), ([^ ]) ([^,]) ([^.]). ([^ ]*)./\2, \1, \3, ``\4," \5 \6, \7 \5 \9/'	2
\bPhone:\s*\(?(?:[0-9]{2})\)?([ .-]?)([0-9]{3})\2([0-9]{4})	1
(?<!`)(?<backticks>`+)(?<inline>(?!.*\k<backticks>).*)\k<backticks>(?!`)	2
(?<!`)(?<backticks>`+)(?<inline>.+?)\k<backticks>(?!`)	2
(?<!`)(?<backticks>`+)(?<inline>(?:(?!\k<backticks>).)+)\k<backticks>(?!`)	2
"(<img\\b|(?!^)\\G)[^>]*?\\b(src|width|height)=([\"']?)([^>]*?)\\3"	2
aArray=($(sed -n "s/^\w*\s*=\(\w*\)\s*.*/\1/p" /path/filename))	1
(?<!["".])+?\b(AND|OR)\b\)?\s?(?=\1+|\1?$)\1?(?![.""])	2
(").*\1	1
(?:([\"\'])|(\()|(\[)).+?(?(1)\1|(?(2)\)|\]))	1
sed -r 's/ ([^= ]*=)/ |\1/g' file	2
(\S{2,}?)\1+	1
(_[\S]{2,}?)\1+	1
(?=\w*(\w)\1)	4
\b(?=\w*(\w)\1)\w+\b	4
\b(?=\w*([a-zA-Z])\1)\w+\b	4
\b\w*(\w)\1\w*\b	1
^[a-z]*([a-z])\1{1}[a-z]*$	1
^[a-z]*([a-z])\1[a-z]*$	1
^([^ _.-]+[ _.-]+([^ _.-]++)?)(.*?\R)(\1.*?\R)+	3
sed -i 'N;s/\(-LEN\(.\|\n\)*,\)/\1\n<\/value>/g;P;D' fields.txt && sed -i 's/^\(.*-LEN\)/<value>\n\1/g' fields.txt	1
sed -i 'N;s/\(-LEN\(.\|\n\)*,\)/\1\n<\/value>/g;P;D' fields.txt && sed -i 's/^\(.*-LEN\)/<value>\n\1/g' fields.txt	1
TRegEx.Replace(Str, '(?<=<img\s+[^>]*?src=(?<q>[""]))(?<url>.+?)(?=\k<q>)', 'Nova string');	2
rnm -rs '/\w+\s*-\s*(\d)x(\d+).*$/S0\1E\2.srt/' *.srt	2
rnm --regex basic -rs '/\(.*\)~20[0-9]\{6\}-[0-9]\{6\}\(.*\)/\1\2/' -fo -dp -1 *	1
rnm -rs '/(.*)~20[0-9]{6}-[0-9]{6}(.*)/\1\2/' -fo -dp -1 *	2
(\b\w*?)(\w)\2{2,}(\w*)	2
"(\\b\\w*?)(\\w)\\2{2,}(\\w*)"	2
^(?!(\d)\1{9})(?!0123456789|1234567890|0987654321|9876543210)\d{10}$	4
(\w)\1+	1
((\w)\2+)	2
\b(?=Ja\w*a\b)\w*?((\w)\2+)\w*\b	4
echo "p45-322-16.jpg" | sed 's/\(.*\)-.*/\1/'	1
echo "p45-322-16.jpg" | sed 's/\([^-]*\).*/\1/'	1
sed 's/\(.*\)sktrim\(_[0-9]*\)\(.*\)\.fq/\1sktrim\3\2.fg/'	1
find . -name '*.fq' -exec sh -c 'mv "$0" "$(echo "$0" |sed "s/^\(.*\)\(_[0-9]\)\(.*\)\.fq$/\1\3\2.fq/")"' {} \;	4
rnm -rs '/^(.*)(_\d)(.*)\.fq$/\1\3\2.fq/' *.fq	2
rnm --regex basic -rs '/^\(.*\)\(_[0-9]\)\(.*\)\.fq$/\1\3\2.fq/' *.fq	1
sed "s/^\(.*\)\(_[0-9]\)\(.*\)\.fq$/\1\3\2.fq/"	1
sed 's/^\(.*\)\.\(.*=.*\)$/\1_\2/g' file	1
sed 's/^\([^=]*\)\./\1_/'	1
(a-zA-Z).*?(?!\1)	1
\b(?:(?:([a-z])(?=[a-z]*\1))+(?!\1))?([a-z])(?![a-z]*\2)	4
sed -r 's#^([^=]+=)[^/]+/([^,]+,)[^/]+/(.*)#\1\2\3#'	2
\b(\d+)\b.*\b\1\b	2
(?(2)\1\2|0\1)/(?(4)\3\4|0\3)	4
([a-z])\1(?!\1)	1
([a-z])\2	1
([a-z])\1{2,}	1
\{\{(if)\}\}(((?!\{\{\/?\1\}\})[\s\S])*(\{\{\1\}\}(?2)*\{\{\/\1\}\})*((?!\{\{\/?\1\}\})[\s\S])*)\{\{\/\1\}\}	3
^(?!.*([0-9])\1{2,})	4
(^(?!.*([0-9])\1{2,}))	4
^(?!.*([0-9])\2{2,})	2
<(\w+)[^>]+>\n*([\s\S]*)<\/\1>	2
echo "$TEST" | sed -re "s!(--extra-vars\s)([a-zA-Z0-9\=]*\s)([a-zA-Z0-9\=]*)!\1\"\2\3\"!g"	2
sed -lE "s/rem\((.*)\)/\1/g" test.css	2
sed -lE "s/rem\(([^()]*)\)/\1/g" test.css	2
(?=(a)b.)a(b)\1	1
sed 's/\(:[0-9][0-9]\)\.[0-9]\{2\}/\1/g'	1
sed 's/\(:[0-9][0-9]\)\.[0-9]\{3\}/\1/g'	1
sed -E 's/(:[0-9]+)\.[0-9]+/\1/g'	2
's/\(:[0-9][0-9]\)\.[0-9]\{1,3\}/\1/'	1
sed -re 's/(\s*(\S+\s+){7})([^.]+)\.\S+([^.]+)\.\S+/\1\3\4/g'	2
's/^\(string *=\).*$/\1'"$replace_val"/	1
's/^\(string *=\).*$/\1'\""$replace_val"\"/	1
^define\(\s*(['"])((?:\\\1|(?:(?!\1).))*)\1\s*,\s*(['"])((?:\\\3|(?:(?!\3).))*)\3\s*\);	4
^(?=.*[a-z])(?=.*\d)(?!.*(.)\1{3}).*$	2
(["'])(\\\1|[^\1]*?)\1	2
key.*?=(["']).*?\1	1
^["+letter+"](?!(.)\1).{2}.*	4
^(.)(?!\1{2})	1
(?=[Aa])(?!.*(.)\\1\\1)	2
$("form").find("input[type=text]").attr("pattern", "(?=[Aa])(?!.*(.)\\1\\1).*");	2
((.)\2*)	2
(.)\1	1
((.)\2*)	2
'^((~)?(#))?([^#]+)#([^#]+)\3$'	2
^((~(#))|(#?))([^#]+)#([^#]+)(\3|\4)$	2
abc([^\n]+)\n[^\n]*\nabc(\1)	2
<\s*tagA\s+class\s*=\s*(["'])a\1\s*>((?:.|[\r\n])*?)<\s*/\s*tagA\s*>	2
sed s/\(\.[0-9]\),\([0-9]\.\)/\1.\2/g data.csv	1
s/\([0-9]\),\([0-9]\)/\1.\2/g	1
(?<html_tag>(?<open>\<(?<tag>\w+)\>))(?<content>(\g<html_tag>)|.*)(?<close>\<\/\k<tag>\>)	2
(?:^| )(_(?:[\w ]+?)_|([*~])(?:[\w ]+?)\2)(?= |$)	2
((A-.-.)(?!.*\2).*?),	2
/[(\w)\1+]/ or /[(\w)(?!\1)]/	1
sed -r 's/^([^,]*,[^,]*):/\1 /g' file.csv	2
test 3: (S3) aababcaa DOES NOT match (R1) (?^:^((a*)b|e?(a*)b)*c\2$)	2
echo "String= Hello World" | sed 's#\([^=]\+\)=\(.*\)#<\1>\2</\1>#'	1
echo "String= Hllo World" | sed 's#\([^=]\+\)=\(\s*B[0-9]*.*\)#<\1>\2</\1>#'	1
^(?=\d{9})(?:(\d{1,8})\1*|(\d\d)\2*\d|((\d)+\g{-1}{2}){3})$	2
^(?![\w\/]*\/(\w+)\/([\w-]+)\/([\d.]+)\/\2-\3(-\w+)?\.(\w+)).*$	2
find . -type f ! -regex '.*/\([^/]*\)/\([^/]*\)/\1-\2[^/]*'	1
find . -type f ! -regex '.*/\([^/]*\)/\([^/]*\)/\1-\2[^/]*' -delete	1
egrep -v '^.*/([^/]*)/([^/]*)/\1-\2[^/]*$'	2
[^\w ]|([\w])\1{3}	1
[^\w ]|\S*([\w])\1{3}\S*	1
s/(-?[0-9]*\.?[0-9]*) (-?[0-9]*\.?[0-9]*) l/lineto(\1,\2);/g	2
s/^(\w{4}).(\w{4})/\10%\1/	1
^([A-Z])([a-z]+)\n\l\1\2	2
(\w)(\w)\2\1	1
(?!(\w)(\w)\2\1)	4
(?!\w*(\w)(\w)\2\1)	4
sed 's/\([[:alpha:]]\)\([[:digit:]]\)/\1, \2/g' testfile	1
((.)(?:(?!\2).)*)\2+	2
(\S*)([a-z])(\S*)(\2)(\S*)	2
^([a-z]{2}).*(\1)$	1
^.*?([a-z]{2}).*?(\1).*$	1
^(?=.*[0-9].*)(?=.*[A-Za-z].*)([0-9A-Za-z]\1{3}){8,15}$	2
^(?=.{8,15}$)(?!.*?(.)\1{3})[A-Za-z0-9]+$	2
^(?=.{8,15}$)(?=.*[A-Za-z])(?=.*\d)(?!.*?(.)\1{3})[A-Za-z0-9]+$	2
^(?=.{8,15}$)(?!.*?(.)\1{3})[\p{L}\p{N}]+$	2
(?=(\s+))\1(?!$)	2
sed 's/\($ABOUT\)\([[:space:]]\)/"About"\2/g'	1
sed 's/\($ABOUT\)\([[:space:]$]\)/"About"\2/g'	1
sed -E 's/($ABOUT)([[:space:]]|$)/About\2/g'	1
^(.{25,})(.*)$\R\1.*	2
sed -r 's/([0-9]{4})-([0-9]{2})-([0-9]{2})/\1:\2:\3/g' myfile.txt	1
sed 's/.*There is\/are \([0-9]\+\) thread.*/\1/' file	1
sed -nr 's/.*are ([0-9]+) thread.*/\1/p' file	2
((\b(?:[a-z]|[^\x00-\x7F]){1,}\b).*?)((?<=\s|^)\2(?=\s|$))(.*)$	2
(?<=\s|^)\2(?=\s|$)	1
((\b[a-z]{1,}\b).*?)(\b\2\b)(.*)$	2
(\b([^\s]+)\b.*?)\b\2\b	2
(.+)~.*[\(\1\)].*	2
(.+)~[^\(]*\(\1\).*	2
(\d\d)(\d+?)(?=\1)	2
^(?:([0]{1,}|[1]{1,}|[2]{1,}|[3]{1,}|[4]{1,}|[5]{1,}|[6]{1,}|[7]{1,}|[8]{1,}|[9]{1,}|[0]{1,})(?!.*\\1)){3}$<p>	2
\.(?=(\d+)\1+(.*))(\d+?)\3+\2$ # immediately after the dot	4
(?=(\d+)\1+(.*))(\d+?)(?=\3+\2$)	4
(?=(\d+)\1+(.*))(?=(\d+?)\3+\2$)	4
(\d+?)\3+	2
\..*?(?=(\d+)\1+(.*))(\d+?)\3+\2$ # the first after the dot	4
(?=(\d+)\1+(.*))(\d+?)\3+\2$	4
^(\d)\1*+(?!.*\1)(\d)\2*+(\d)\3*+$	4
(\d)\2*+	1
(\d)\3*+	1
^(\d)\1*(?!.*\1)(\d)\2*(?!.*\2)(\d)\3*+$	4
echo '120100_0019_0_X0434147_script_name.sql' | sed -r 's/_//g; s/(^[0-9]{11}).*/\1/'	1
(?!.*{([\w-]+)}.*{\1})	4
[^\w\s]|(.)(?=\1)	1
([a-zA-Z])\1+	1
([\D])(?=\1)	1
([a-zA-Z])(?=\1)	1
([\w])(?=\1)	1
echo "$MYVAR" | perl -pe 's/([\w^]+^[\w^]+)/\/\(\1\)\//g'	2
\G(\Copy of )( (?=\1 ))?	1
^(.+?)\1+	2
^(.+?\b)\1+	2
^(.+?\s)\1+	2
([\"'])[^\1]*\1	1
(["'])(?:[^"'\\]+|\\.)*\1	1
(["'])((?!\1).)*\1	3
(?<!\\)(["'])(?:[^"'\\]+|\\.)*\1	1
sed -e 's/"\([^"]*\)"/“\1”/g'	1
:g/\<\([a-zA-Z]\+\) \1\>	1
:g/\([a-zA-Z]\+\) \1	1
:g/\(\<[a-zA-Z]\+\>\) \1	1
:g/\(\<[a-zA-Z]\+\>\) \<\1\>	1
sed 's/\(ENSG\d*\) *| *\(ENST\d*\) */\2 | \1/'	1
(?:src|href)=("|').*?([\w.]+\.(?:js|css))\1	2
sed 's/\(ENSG[0-9]\+\).*\(ENST[0-9]\+\)\(.*\)/NASCENT_\2 | \1\3/g'	1
(\s*)For[^\r\n]*[\r\n]+(\s+([\r\n]+)|(\1    (?!For)[^\r\n]*[\r\n]+))+(\1    For)	3
\[(.*?)\]((?:.\s*)*?)\[\/\1\]	2
\[(.*?)\]([\s\S]*?)\[\/\1\]	2
\[(.+?)\](.+?)\[\/\1\]	2
(?:((?:[AB](?=0[2-9]|1[0-5])))[0-9]{2}(?:(?=,\s*\1),|))*	2
(?<!(?<!//.*)\1[\s]*\=[\s]*.*;[^\*]*[^/]*)(\$\b(?:[^\_])[a-zA-Z-_\d]+\b)(?![\s]*[\=]{1}[^\=])	4
String regex = "^(\\/|\\\\|\\|){2}(projects|depot|perforce_[0-9a-zA-Z]+)(\\1)q(uality|a)(\\1)$";	2
sed 's/\(.*\):\([0-9]\+\).*/\1 \2/p'	1
sed -r 's/([^:]*):([0-9]*):.*/\1 \2/'	2
echo W4Malx83nQ | sed -n 's/\([a-z]\)/\1%/; p'	1
'~(<(?!a\b)(\w+)\b(?>(?:(?!</?\2\b).)+(?1)?)*</\2>)(*SKIP)(*F)|<a\b.*?</a>\s*~si'	3
(\d)\1{14}	1
"(\\d)\\1{14}"	1
(\\d)\\1{14}	1
(\d)\1{14}	1
:\s*(\d+)\w*(?:\s+\1\w*)+;	2
(?:[^\w-])width\s*(=\s*(["'])[^"']+\2\s*|:\s*[^;]+;)	2
^;([\w\s]*;).*\n(?:[\w\s_\.]*);(?:(?!(\1))(\K[\w\s]*;))	2
^;([^;]+);.*?\n[^;]+;(?!\1;)([^;]+)	2
img.*?src=("|')(.*?)\1	2
((1.+)\1)	4
(1.+)\1	2
((1.+)\2)	2
(MINISTÉRIO)[\s\S]*?(?=,\1)	1
(MINISTÉRIO)[\s\S]*?(^(?=\1))	1
(^MINISTÉRIO)[\s\S]*?(?=\1)	1
(MINISTÉRIO)[\s\S]*?(^(?=\1))	1
(^MINISTÉRIO)[\s\S]*?(?=\1)	1
sed 's/[dD][bB][vV][aA][rR][nN][aA][mM][eE]="[^"]*"\([^,]\)/\1/g'	1
\b(\w)\1+	1
sudo sed -i '/(\s*#?)server \s*{(?:[\s\S]+)\1}/ d' /opt/nginx/conf/nginx.conf	2
'/(\s*#?)server\s*\{/,/\1\}/d'	2
([A-Za-z])\1+	1
^((.)(?!\2))+$	3
sed s'/^http\.add\.user\.success \([0-9]\+.[0-9]\).*$/\1/' test.txt	1
sed -r 's/(^|[^"])@/\1","/g'	1
s#{\([A-Z]*\)}#'"$\1"'#g	1
(?<=url\((['"]))(?!http)(?=.*?\1)	2
-(a|b)(.*?)\1-	2
boost::regex  re("-(a|b)(.*?)\\1-");	2
((?:\s?\d+\s?)+)((?:[a-zA-Z](?![^a-zA-Z]+\1))+)	3
^(?=([^o_]*))\1(?=((?:o(?!ra)[^o_]*|_(?!view)[^o_]*)*))\2_view.*	2
^(\\d+?){2,100}\\1$	2
(\d{2,100})\1	1
^(?:([+\-\/*UD])(?!.*\1))+$	3
([0-9]{2,})\1+	1
sed -r 's/,/\n/g;:a;s/\n(.*(=.*))/\2,\1/;ta' file	2
echo "<duration>89</duration>" | sed -E 's/<([^\/])/\\n<\1/g'	1
<(?:(?:img)(?=[\s>\/])(?:[^>=]|=(?:'[^']*'|"[^"]*"|[^'"\s>]*))*\s?\/?>|(a|span|pre|code|strong|b|em|i)(?=[\s>\\])(?:[^>=]|=(?:'[^']*'|"[^"]*"|[^'"\s>]*))*\s?\/?>.*?<\/\1>)|(?:"[^"]*"|[^"<]*)*	1
sed -e 's/<\([^/]\)/\n<\1/g' file	1
((['"]{3}).*?\2)	2
(?:0[1-9]|1[012])([-.\/])(?:0[1-9]|[1-2][0-9]|3[01])\1(?:[0-9]{4})	1
^(?=.*[A-Za-z].*[A-Za-z].*)(?!.*(,|'|\-|\.)\1.*)[A-Za-z,'\-][A-Za-z,'\-\.]*	2
dpkg-query -W --showformat='${Version}\n' libboost-dev | sed -E 's/^([^.]+)\.([^.]+)\..*/\1\2/'	2
(?!.*(.)\1.*)	4
^(?=.*[A-Za-z].*[A-Za-z].*)(?!.*(.)\1.*)[A-Za-z,'\-][A-Za-z,'\-\.]*	2
(?:([a-zA-Z,'.-])(?!.*?\1))+	3
^(?!\.)(?=(?:.*?[A-Za-z]){2})(?:([a-zA-Z,'.-])(?!.*?\1))+$	3
^(.)\1{4,}$	1
(.)\1	1
echo abcd 123 | sed 's/\([a-z]*\).*/\1/'	1
/\<((div|span)|(img|link)).*?(?(3)\/?>|.*?\<\/\\2>)/	2
^(?!.*?(?:0(?:12|98)|123|234|3(?:45|21)|4(?:56|32)|5(?:67|43)|6(?:78|54)|7(?:89|65)|876|987))(?!.*?(.)\1{2})[0-9]{4}	2
-r 's/\b(\w+) \1/\1/gi'	2
s/\v<(\w+) \1/\1/gi	2
s/\b(\w+) \1/$1/gi	2
sed 's/\([a-z].*\)-\([a-z].*[0-9].*\)/\2 \1 \n/g'	1
\b([5-9])((?!\1)(?:[5-9]))((?!\1|\2)(?:[5-9]))\b	4
^[A-Za-z] (?=.*\d) (?=.*[a-z])(?!.*(.)\1\1)(?=.*[A-Z]).{6,12}$	2
^(?=^[A-Za-z])(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?!.*(.)\1\1).{6,12}$	2
(?!.*(.)\1\1)	4
@"^(19|20)[0-9]{2}([ -]?)(0[1-9]|1[012])\2(0[1-9]|[12][0-9]|3[01])$";	1
ma_(100|[1-9][0-9]?)_\1_\1\b	1
^ma_(\d+)_\1_\1$	2
^\s*[\w\s]+\(.*\)\s*\K({((?>"(?:[^"\\]*+|\\.)*"|'(?:[^'\\]*+|\\.)*'|//.*$|/\*[\s\S]*?\*/|#.*$|<<<\s*["']?(\w+)["']?[^;]+\3;$|[^{}<'"/#]++|[^{}]++|(?1))*)})	4
(ab).*\2	1
sed  's,^\($(obj)/$(timeconst-file): kernel/time/timeconst.bc FORCE\),#\1,'	1
(?!.*([.,-])\1)	4
([.,-])\1	1
^([a-zA-Z0-9\s\n]|(([\.,-])(?!\3)))*$	3
([\'"])(.*?)\1	2
(Huey|Dewey|Louie) and \1	1
sed -e 's/\(- \(- \)*\)\([^o]\|$\|o\([^g]\|$\)\)/\3/g'	1
cat file1 | sed 's/^\([^|]*\)[|]/\1 |/' | sort > file1-delimited	1
sed -r 's/(- (og|eller))|- /\1/g' file	1
([^\s]*querySelector\w*\()(\'.*\')\2	2
select regexp_replace(regexp_replace(textcat('d->d->a->d->c->a->a->c->c', '->'), '(\w\-\>)\1+', '\1', 'g'), '\-\>$', '');	1
select regexp_replace('d->d->a->d->c->a->a->c', '(\w\-\>)\1+', '\1', 'g');	1
sed 's/.*Dserver.port=\([^ ]\+\).*/\1/'  <<< "-OtherJVM1=value1 -OtherJVM2=value2 -Dserver.port=9034 -Dajp.port=8534"	1
~(<span[^>]+>([^<]*+<(?!/)(?:([a-zA-Z0-9]++)[^>]*>[^<]*</\3>|(?2)))*[^<]*</span>|(?'single'</[^>]+>|<[^>]+>))~	3
m(.)(.+?)\1	2
sed -r 's/\./\n/g; s/(Mr|tel|nr|U|S)\n/\1./g; s/\n */\n/g'	1
sed 's/\./\n/g; s/\(Mr\|tel\|nr\|U\|S\)\n/\1./g; s/\n */\n/g'	1
/(&amp;)|(&[^; ]+;)|(&)|(\b\w)|(%)|(\W)/(?1And:)(?2:)(?3And:)(?4\u\4:)(?5Percent:)(?6:)/g	2
(.)(\1)(.)(.)	1
(.)(.)(\2)(.)	1
sed -E $'s/\./\.\\\n/g; s/(ca|Ca|Mr|Ms|etc|[0-9])\\n/\\1./g;' test.txt	1
^(?!(mr|ms|miss|dr|mr-mrs|(.)\2*)$)([a-z][a-z'-]{1,})$	4
^(.)\1*$	1
^(?!^mr$|^mrs$|^ms$|^miss$|^dr$|^mr-mrs$|^(.)\1*$)([a-z][a-z'-]{1,})$	4
grep("(.)\\1{2,}", v1)	1
PREEXEC /bin/echo '$p2' | /bin/sed -r 's/^(Board.(Port.)*).*/\1/g'	2
sed '/:/{s/\([0-9]\)[^0-9].*:/\1/;q};s/\([0-9]\)[^0-9].*/\1/'	1
sed -r 's/^(Board.(Port.)*).*/\1/g' File	2
string.Format(@"(^.{{{0}}})|(godness\w+)(?<=\2(\d+).*?\2)(\d+)", i)	2
/(forum.domain.com(\/\w+)*\/\d+)\/\d+(?=\s|$)/\1	2
([A-Z])1 \\12 \\13 \\14"	1
^((.+?)(?:.*?))\1+\2?$	2
^((.+)(?:.*))\1+\2?$	2
^(.+)\1+	2
(.+)\1+	2
\b(\w*)(\w+\1)\2+\b	4
^(.+)(.*)(\1\2)+\1?$	3
(^|[^A-Z])(A+)\2BB	2
(A+)\1BB	2
/(t\/.*\/\d+)(\/\d+)/\1	2
\b(\w*)(\w+\1)\2+\b	4
(?<=(.))(?=((\w*)(\w*(?!\1)\w\3)\4+))	4
(\w*)(\w*...\w\3)\4+	2
((.)\2{2})\2*	1
s#(<name>).*?(</name)#\1xxxxxxxxxxx\2#g;	1
sed -i 's/Add(\([0-9]*\),\([0-9]*\))/Add({num1 : \1, num2 : \2})/' file	4
^(.*)(\r?\n\1)+$	3
^(\S++).*\K(?:\R\1(?:\h.*|$))+	2
/^(([()/.+ -])\1?(?!\2)|\d)*$/	4
(\b(?:food|walk|rest|exercise)\b)(?!.*\1)	2
(\b(?!food|walk|rest|exercise)\w+\b)(?!.*\1)	2
^((post|put|delete|get)(?!.*\2))( (?1))*$	2
\<td\s+((valign=([",'])top\3\s+width=([",'])100%\4)|(width=([",'])100%\6\s+valign=([",'])top\7))\s*>\gm	2
^\d{1,4}([/-])\d{1,2}\1\d{1,4}\s(\d{1,2}:){2}\d{1,2}$	1
\(?([0-9]{3})\)?([ .-]?)([0-9]{3})\2([0-9]{4})	1
s/(\w)"?,"?(\w)/\1","\2/g	1
^(\s*)([^!\s].*?\r\n(\1\!.*?\r\n)*)\s*\!	3
^(\d+)\b(?=(?:(?!^(?!\1\b)).)*word-to-find)(?:(?!^(?!\1\b)).)*	2
^(\d+).*(\n\1.*)*	3
r'\b[a-f0-9]{2}(?:([:-]?)[a-f0-9]{2}(?:\1[a-f0-9]{2}){4}|(?:\.?[a-f0-9]{2}){5})\b'	1
([:-]?)[a-f0-9]{2}(?:\1[a-f0-9]{2}){4}	1
((.)\2*)	2
(.)\2*	1
(?s)(?=((CAN|NUL|E(?:TX|NQ|SC)|S(?:OH|UB))(?:(?!\2).)*))	4
(?s)(CAN|NUL|E(?:TX|NQ|SC)|S(?:OH|UB))(?:(?!\1).)*	1
(\btotal\b)(?!.*\b\1\b)	2
((['"])(?:(?!\2|\\).|\\.)*\2)|\/\/[^\n]*|\/\*(?:[^*]|\*(?!\/))*\*\/	2
(^SA21 abcdef$)(?!\1)	1
echo -e 'fileref=old\n./executable $fileref' | sed 's/\([^$]\|^\)fileref.*/\1fileref=replaced/g'	1
(\[|\]).*?\1	1
.*?<!-- CONTACT FORM START \[CONTACT_FORM_(\d)\] -->.*?<!-- CONTACT FORM END \1 -->	1
([\(\)\-\+\s])\1{1,}	1
([()\\-+ ])\\1	2
perl -i.bak -0777 -pe "s/^(function.*?\n)!/\1\t!/gm" a.txt	2
(<span>)(\n?)([\[\w\s\.\]]+)(\2)	2
sed -nE 's/^[[:blank:]]+psk=(.*)/\1/p' file.txt	2
sed -i 's/^\(PeopleCount=\).*/\1'"$var"'/' lines.txt	1
(..+?)\\1+	2
.?|(..+?)\\1+	2
(ns\d\d?:OutputData>)\b(.*)(\/\1)	2
(ns\d\d?:OutputData>)\b(.*?)(\/\1)	2
(?<=(ns\d:OutputData)>)(.*?)(?=<\/\1)	2
(?<=(ns\d{0,2}:OutputData)>)(.*?)(?=<\/\1)	2
input.replaceAll("([ \\w]+)\\1", "$1");	2
^(#?[^\r\n]+$)[\s\S]*(^\1[^\r\n]*$)+	3
set req.http.xrul=regsub(req.http.xrul,"(\d+)","\1"); or any other method	4
sed -r -e ":loop" -e 's|(http://.+)/.*|\1|' -e "t loop"	2
(\w+$)(?=[\s\S]+\1 ?#)	2
(a)\\1*	1
(a)\\1+	1
:%s/{\([^,]*\),\([^,]*\)}/{\2,\1}/	1
'(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[01])-(?:20)?(?:[1-2][0-9]|30))|(?:(?:0[1-9]|[1-2][0-9]|3[[01]])(\.?)(?:0[1-9]|1[0-2])(\1)20(?:[1-2][0-9]|30))'	1
ls -l | sed -r 's/^(\S+\s+){5}(\S+\s+){3}/\1/' | sed 's/^\(.*\) \(.*\)$/\2\ \1/g'	2
ls -l | sed -r 's/^(\S+\s+){5}(\S+\s+){3}/\1/' | sed 's/^\(.*\) \(.*\)$/\2\ \1/g'	1
sed 's|<a .*example\.com.*>\(.*\)<\/a>|\1|Ig' file.html	1
sed 's|<a .*example\.com[^>]*>\(.*\)<\/a>|\1|Ig' file.html	1
sed 's|<a [^>]*example\.com[^>]*>\([^>]*\)</a>|\1|Ig' file.html	1
(\w{5,}).*#.*\1	1
sed -er "/s/^(\>[\w\d]+\=[\d]+)_.+\]_([\d])$/\1\2/" test.fa	2
sed 's/Foo("\([^"]*\)");/Foo(\U\1);/'	2
sed -r 's/(^>.*=[0-9]+)_.+\]_/\1/' test.fa	2
^(.+)[\r\n]+\1	2
ls | perl -pe 's|(.+?)\.mp4\.mp3$|\1\.mp3|'	2
a+b+(([Cc])\2*)?	2
(?-i:([a-z])(?=[A-Z]))(?i:\1)	1
sed 's/\(.\)/\1 /g'	1
^(\d+)(,\1){n}	2
(\d)(,?\1){n}	1
((?=(\w*))\2(?:(?:(?:<del\b[^>]*>(?:(?!<\/del>).)*<\/del>)|(?:<ins\b[^>]*>\w+<\/ins>)|(?:\w+<\/ins>)|(?:<ins\b[^>]*>\w+))(?:\w+|))+)	2
^r(?:([aeip])(?!.*\1.*\2)){4}(r$)	4
([e])(?!.*\2.*\2.*\3)	4
^r(?:([aeip])(?!.*\1)){4}r$	2
([ap])(?!.*\1.*\3)	2
^r(?:([ap])(?!.*\1.*\3)|([e])(?!.*\2.*\2.*\3)){4}(r$)	4
MINISTÉRIO(?:[^P]*(?:P(?!ÁG\s:\s\d+\/\d+)[^P]*)(?:[\s\S]*?))PÁG\s:\s+\d+\/(\d+)\b(?:\D*(?:(?!\1\/\1)\d\D*)*)\1\/\1(?:[^Z]*(?:Z(?!6:\s\d+)[^Z]*)(?:[\s\S]*?))Z6:\s+\d+	2
([aeiou])\1	1
sed -r 's/([0-9]{4}-[0-9]{2}-[0-9]{2})T([0-9]{2}:[0-9]{2}:[0-9]{2})Z/\1,\2,UTC/g'	1
sed -r 's/(.+)T(.+)Z/\1,\2,UTC/g'	2
sed -r 's/(....-..-..)T(..:..:..)Z/\1,\2,UTC/g'	1
((.+)ab)\1\2	2
(.+)\1(?=<\/p>)	2
(.+)\1	2
:%s/\(^\n\)\s\+$/\1/e	1
([a-zA-Zа-яА-Я]+)(?= (\1))	2
sed 's/^\(.\{11,12\}=\)\(false\)\(.*$\)/\1true\3/' file	1
sed 's/^\(.\{11,12\}=\)\(.*$\)/\1true/' file	1
sed -E 's/^(-?config\.test=).*/\1true/' file	1
^[a-zA-Z](?=.*[A-Z])(?=.*[0-9].*[0-9])(?=.*[a-z].*[a-z].*[a-z])(?=.*[!@#$%^&*~].*[!@#$%^&~*])(?!.*(.)\1\1)[a-zA-Z0-9!@#$%^&*]{8,12}$	2
echo '[a](!)' | sed 's/\(\[a\]\)(!)/\1/'	1
echo '[a](!)' | sed -E 's/(\[a\])\(!\)/\1/'	1
:%s/{\(\S.*\S\)}/{ \1 }/g	1
(?i)\b(.)[a-z]*\1\b	1
(?i)\b([a-z])[a-z]*\1\b	1
^.*(.).*\1.*$	1
(?!(?!(.)\1)).	4
\s*delimiter\s+(?<d>[^\s]+)\s*;?\s*(?<qstr>(((?!--|\g{d}).)+|--[^\R]*\R)*)\g{d}\s*;?	2
\s*delimiter\s+(?<d>[^\s]+)\s*;?\s*(?<qstr>(((?!--|\g{d})[^'])+|'([^']|'')*'|--[^\R]*\R)*)\g{d}\s*;?	2
(.*).*(\1.*)	2
(?i)\\b(\\w+)\\s+\\1\\b	2
sed -e ':a' -e 's/^\([^|]*|[^|]*\)NIS/\1NIX/;ta' infile	1
sed ':a;s/^\([^|]*|[^|]*\)NIS/\1NIX/;ta' infile	1
My name is ([^\n]+)\.(.*?)End \1	2
My name is ([^\n]+)\.(.*)End \1	2
(\p{L})(\d)\g{-2}	1
sed -r  's/^[^0-9]*([0-9]+).*/\1/' /tmp/tmp	2
([^0-9]).*?\1	1
([^0-9])\1+	1
(.)\1+	1
(?:(?:^STD_S_)(?P<important>.+?)$)|(?:^(?P=important)(?:_S_STD)$)	2
^(?:(.)(?!(.)(.)\3?\2\1))*$	4
^(.)\1*(..)	1
sed 's#.*\(/.*xml\):1:1.*#\1#'	1
perl -pe 's#.*(/.*xml):1:1.*#\1#'	2
Query replace regexp (default \([A-Z]\{3,\} ?[A-Z]+\) -> `\1`)	4
> gsub("(\\w)\\1{2,}", "\\1", x)	1
(?>expression)   =>    (?=(expression))\1	1
:%s/{\\o \(.\)}/\1/g|%s/\S+/{\\o &}/g	1
((?:\d,?)+)(.*)\1(.*)	2
((?:\d,)+)(.*?)\1+|((?:\d,)+)	2
((?:\d,)+?)\1+$|((?:\d,)+)((?:\d,)*?)\2+|((?:\d,)+)	2
sed -n 's#^\(/Users/admin/projects-FB[0-9]\+\)/.*$#\1#p'	1
(ANSI|AAMVA) (\d{6})(\d{2})(\d{2})(\d{0,2})((?:DL)|(?:ID))+(.*?)\g{-2}+([^"]+)	2
/('|")<my-tag>.*?<\/my-tag>\1/g	1
echo "Johny-Smith" | sed 's/^.*\([A-Z]\)[^A-Z]*$/\1/g'	1
\b(\w+)(\b\W+\1\b)*	3
sed -i.bak -E '/"/!s/= +(.*[[:alpha:]_].*),/= "\1",/' file	2
(.*<begin>)|(<end>.*)|([a-z])\3	2
sed 's/\([0-9].\+\)-$/-\1/g' file.txt > file1.txt	1
sed 's/\([0-9.]\+\)-/-\1/g' file.txt > file1.txt	1
sed 's/\([0-9][0-9,.]\+\)-\($\|[^0-9]\)/-\1\2/g'	1
sed -e 's/ \([0-9]*,[0-9][0-9]*\)- *$/-\1/' <file.txt >file1.txt	1
sed 's/\([0-9,]\+\)-/-\1/g' file.txt > file1.txt	1
sed -r 's/([0-9]+,[0-9]+)-$/-\1/g'	2
sed 's/\([0-9]\+,[0-9]\+\)-$/-\1/g'	1
sed 's/\([0-9,]\+\)-$/-\1/g'	1
(?:<img[^>]+src\s*=\s*(["'])(((?!alkatreszkepek).)*?))\1[^>]*>	2
<\w+\s+(:?[\w-]+=(:?"|')(.|[\r\n])*?\2\s*?)>?	2
<\w+\s+[\w-]+=("|')(?:.|[\r\n])*?\1\s+.*?>	1
([\w-]+=("|')(?:.|[\r\n])*?\2)	2
sed -ne 's/Found \(.*\) modems:/\1/p' -e 's:.*Modem/\([^ ]*\) .*:\1:p' FILENAME	1
sed -ne 's/Found \(.*\) modems:/\1/p' -e 's:.*Modem/\([^ ]*\) .*:\1:p' FILENAME	1
"(^|[\\W_])(?:(?!\\1)|(?=^))(\\*|_)(?=\\S)((?:(?!\\2).)*?\\S)\\2(?!\\2)(?=[\\W_]|$)"	4
([\@])\1+|(\@)	1
w\{(\d*),\1\}	2
(\s)\1+	1
([ \n\t])\1+	1
<img.+?src=([\'"])([^\'"]+)\1	2
^@([^:]+):[~\s]*(['\"]?)([^;]*)\\2;?$	2
\(*\)(1,:) = *; -> \1(k,:) = \1(1,:);	1
\(.*\)\((1,:)\) = .*; -> \1(ind,:) = \1\2;	1
sed -nE 's/.* callee_num:<<"(\+[[:digit:]]+)".*/\1/p' file.txt	1
sed -n 's/.*callee_num:<<"\([+0-9]*\)">.*/\1/p' file	1
(:[A-z]\w+)(?!.*\1)	2
(:[a-z]\w+)(?![\s\S]*\1)	2
<\([^ >]\+\)[ >].*<\/\1>	1
<\([^ >]\+\)\>.*<\/\1>	1
%s,<\([^ >]\+\).*<\/\1>,,gn	1
%s,<\([^ >]\+\)\>.*</\1>,,gn	1
%s,<\([^ >]\+\).*<\/\1>,,gn	1
(<pronouns><\/pronouns>)\1{1}	1
^(?=.{9,}$)(?=[^0-9]*[0-9])(?:([\d\s\+\(\)\-])\1?(?!\1{5}))+?$	3
(?:<(pronouns)>.*?<\/\1>){2}	1
([tT])\1\w+	1
[[:alnum:]]*([[:alnum:]])\1{3}[[:alnum:]]*	1
(?:[[:alnum:]]*([[:alnum:]])\1{3}[[:alnum:]]*|[0-9]+)	1
\s*\b(?:[[:alpha:]]|[[:alnum:]]*([[:alnum:]])\1{3}[[:alnum:]]*|[0-9]+)\b	1
*\b(?=[a-zA-Z]\b|\d+\b|[a-zA-Z\d]*([a-zA-Z\d])\1{3})[a-zA-Z\d]+	4
\s*\b(?=[a-zA-Z\d]*([a-zA-Z\d])\1{3}|\d+\b)[a-zA-Z\d]+	4
(?=[a-zA-Z\d]*([a-zA-Z\d])\1{3}|\d+\b)	4
^(?=[1-n]{n}$)(?!.*(.).*\1).*$	2
^(?=[^A-Z]*[A-Z])(?=(?:[^a-z]*[a-z]){3})(?=(?:[^0-9]*[0-9]){2})(?=(?:[^!?@*#&$]*[!?@*#&$]){2})(?!.*(.)\1{2})[A-Za-z].{7,11}$	2
#([0-Fa-f][0-Fa-f])(\1{2}|\1{5})\b	1
\w+(?P<kv_delim>[:;|])\d+(?P<g_delim>(?!(?P=kv_delim))[:;|])\w(?P=kv_delim)\d(?P=g_delim)?	4
(<(\w+).+</\2>)	2
(?=^.{0,15}(.*$))(?|((?:(?:(?!\1$|br).)*br(?:(?!\1$|br).)*){1,2})|(.{0,15})(?=\1$))	2
(.{0,15})(?=\1$)	1
(["'])(.*?[^\\])\1	2
(.+)\1+	2
SELECT REGEXP_REPLACE('(QL)(M)(QL)(M)(QL)', '(\(.*\))(.*?)\1', '\1') FROM DUAL;	2
(?<=([01]))(?:(?!\1)[01]){1,2}(?=\1)	1
sed 's/\([^"]\),"/\1","/'	1
^(\d)(?!\1{7}$)\d{7}$	1
(?=^[A-Za-z0-9]+$)(.)+.*\1.*	2
(\w)\1	1
^.*?([A-Za-z0-9])\1.*?$	1
^.*?(\w)\1.*?$	1
(?=^[a-z0-9]+$)(.)+?.*\1	2
(.).*?\1	1
.*?(.).*?\1.*	1
^(?:(\d\d?)([-\/.])(\d\d?)\2(\d{4})|(\d\d?)-(\w+)-(\d{4}))$	2
sed -i~ 's/\([0-9]\)-,/\1,/g;s/-$//' input.csv	1
sed -r 's/-(,|$)/\1/g' file	1
(0*? (?<arg>[01]+) (?&add) 0+ | 0+ (?&add) 0*? (?<arg>[01]+)) (?&eq) 0* \k<arg>	2
(?<remaining>\d+)\k<r> (?&eq) \k<remaining>\k<f>\b	2
sed 's|.*"\([0-9_A-Z]\+\)".*|\1|' input.txt | head	1
(v[0-9]{1,2}\.[0-9]{1,2}\.[0-9]{1,2})(-[0-9]{1,2})?(?:(?!\S)|(-(schema|dev)(?:-(?!\4)(schema|dev))?))	4
^(?<A>(?:a|s|d))\k<A>$	1
| sed -E -e 's/(0A)+([^$])/20\2/g' \	1
IF \w+\(['"][^#]*(#\w+)['"]\) IS NOT NULL DROP TABLE \1;	2
sed -i '' "s/^\([[:blank:]]*\)$s/\1$r/" $file	1
sed -i ' ' -E 's/^([[:blank:]]*)CAT/\1DOG/' file	2
sed 's/^\([[:blank:]]*\)CAT/\1DOG/'	1
<(.*)>(.*)</\\1>	2
(K\(.+,(.+)\)|<?=>)|\w+\1	2
^([^\n]*:)(.*?)\t(?![^\n]*?\n\t) → \1\2\1[ ]	2
s|.*/(.*)>|\1|	2
s.replaceAll("([Urgent])\\1+", "$1");	1
(.)(b)(?=\1)	1
(SOME WAY OF DECIDING BETWEEN AAA|BBB|XYZ depending on \1!)\1\2	4
(?=(?<!\w|[!?.])('|\")(?!\s)(?P<content>(?:.(?!(?<=(?=\1).)(?!\w)))*)\1(?!\w))	4
(')((?:.(?!\1))*.)	3
(?!(.)\1{2,})^([a-zA-Z0-9''\.\-\,]+\s?)*$	4
(?!.*(.)\1{2,})^([a-zA-Z0-9'".\-,]+\s?)*$	4
\b([aeiou])[a-z]+\1\b	1
(([?!.])\2{1,})(*SKIP)(*FAIL)|[?!.]+	2
sed -r 's|^([^.]+).*$|\1|; s|^[^0-9]*([0-9]+).*$|\1|'	2
s|^([^.]+).*$|\1|	2
sed -r "s/^.* ([0-9]+) .*/\1/"	2
$ sed "s/\(\( \([0-9]*\) .*\)*.\)*/\3/g" <<< " 54 foo 43 "	1
$ sed -r "s/ ([0-9]+) .*|./\1/g" <<< " 54 foo 43 "	2
(.+)(.+)\\2\\1	2
"(\)){num\1}"	1
\w=(["'])((?:(?!\1).)*)\1	2
sed -r ':a;s/^(([^$]*\$[^$.]*\$)*[^$]*\$[^$.]*)\./\1\n/;ta;s/(\$[^$]*)\$/`r v\1`/g;y/\n/$/' file	2
(.)(.*\1){2}	2
(.).*\1	1
\<ABC(\w+)\>[^\<]+\<\/ABC(\1)\>	2
(\d)\1{3,}	1
^\d*(\d)\1{3}\d*$	1
sed "s/\(\(\(EXPRESSION\).*\)*.\)*/\3/"	1
$ sed "s/\(\(\([0-9]\{1,\}\).*\)*.\)*/\3/" <<< "foo 12 bar 34"	1
$ sed "s/\([^:/]\/\).*/\1/g; s/\(\(http:.*\)*.\)*/\1/" <<< "http://www.suepearson.co.uk/product/174/71/3816/"	1
$ sed "s/\(end\).*/\1/; s/\(\(start.*\)*.\)*/\1/g"	1
sed -r "s/(EXPRESSION).*|./\1/g" # Global `g` modifier should be on	1
$ sed -r "s/([0-9]+).*|./\1/g" <<< "foo 12 bar 34"	2
%s/\(^+.*\)X$/\1Y/g	1
"(?<id>\d+?\.\d+?)","Form1","your-email","([^"]*)","1",NULL\r?\n"\k<id>","Form1","your-subject","([^"]*)","2",NULL	2
^\((\d)(?!\1{2})\d{2}\)(?!\1{3})\d{3}-(?!\1{4})\d{4}$	1
^\((\d)(?!\1{2}\)\1{3}-\1{4}$)\d{2}\)\d{3}-\d{4}$	1
(?!\1{2}\)\1{3}-\1{4}$)	4
xml.replaceAll("<(\\w+)></\\1>", ""));	2
xml.replaceAll("\n?\\s*<(\\w+)></\\1>", "")	2
xml.replaceAll("<(\\w+)></\\1>\n\\s+", ""));	2
xml.replaceAll("\n\\s+<(\\w+)></\\1>", "")	2
xml.replaceAll("\n\t<(\\w+)></\\1>", "");	2
^(?=(0{0,5}))\1\d{0,2}\s?\d{10}$	1
(?P<letter>.)(?!.*(?P=letter))	2
(.)(?!.*\1)	2
<a\b[^>]*\shref=(?P<QUOTE>["'])(?P<URL>.*?)(?P=QUOTE)	2
<a\b[^>]*\shref=(?P<QUOTE>["'])(?P<URL>.*?)(?P=QUOTE)[^>]*>(?P<NAME>.*?)</a>	2
<a\b[^>]*\shref=(["'])(.*?)(\1)	2
\A(?![A-Z0-9])(?:[[:alnum:]_]|[^\0-\177])+\z	1
sed -r -e 's/#(\s*)key(\s*)=(\s*).*/key\2=\31/g' /tmp/test.txt	2
s/\s*([+\-=*^%()?:<>+\/.,])\s*/\1/g	2
^\d*(\d)(\d*) ; \d*\1\2$	2
^\d*(\d)(\d{2}) ; \d*\1\g<2>$	1
^\d*(\d)(?:(\d(?:(\s*;\s*\d*\1)|\g<2>)\d)|\g<3>)$	2
^((.)\2?(?!\2\2\2))+$	3
^((.)\2?(?!\2\2\2\2))+$	3
^((.)\2?(?!\2\2))+$	3
^((.)(?!\2\2))*$	3
perl -i -p -e 's/#DEV\n#(.*)/#DEV\n\1/g;' test.properties	2
(?<letter>.)(?!.*?\k<letter>)(?<!\k<letter>.+?)	2
sed -r ':a;s/(^|,)No Data(,|$)/\1NA\2/g;s/(^|,)Off(,|$)/\10\2/g;s/(^|,)On(,|$)/\11\2/g;ta' file	1
^(?:(?!value).|value=(?(1)\1(?!\S)|(\S++)))++$	3
^(?:[^v\v]+(?!value).|value=(?(1)\1(?!\S)|(\S++)))++$	3
^(?:[^v]|v(?!a)|va(?!l)|val(?!u)|valu(?!e)|value(?!=))*value=(\S+)((?:[^v]|v(?!a)|va(?!l)|val(?!u)|valu(?!e)|value(?!=))*value=(\1))*(?:[^v]|v(?!a)|va(?!l)|val(?!u)|valu(?!e)|value(?!=))*$	3
((\d)\2{10})	1
(\d)\1{10}	1
(?{1}|)(?{2}\2)(?{3}  \3  )(?{4}||)(?{5}|)(?{6}|)	4
(\d)\1\1	1
((.+)\s*\1)	4
(.+)\s*\1	2
((.+)\s*\2)	2
((.+)\s*\g{-1})	2
([^\w.])\1+	1
(["']|)[\s\S]*?\2	1
perl -pe 's|^.*?,[ ]?(.*)|\1|' rev.txt	2
$ sed 's/\<[ABEXY][[:alpha:]]*\([[:alpha:]]\>\)/\U\1/g' file1	1
$ sed '/\<[ABEXY][[:alpha:]]*\([[:alpha:]]\>\)/ y/\1abcdefghijklmnopqrstuvwxyz/\1ABCDEFGHIJKLMNOPQRSTUVWXYZ/' file1	1
sed 's/\<\([ABEXY][[:alpha:]]*\)\([[:alpha:]]\>\)/\1\U\2/g' file1	1
(([A-Za-z_])(\2|_)+|_+[A-Za-z]_*)+	3
(([A-Za-z])(\2|_)+)+	3
r'(([a-z])\1*)+$'	4
(([a-z])\2*)+$	3
(([a-z])\2*)	2
sed -r 's/,([^,]*),([^,]*),([^,]*)$/\t\1\t\2\t\3/'	2
<(.*)([^<]*)>([^<]*)los gatos([^<]*)<\/\1>	2
^[a-z]{3}([_.-])[0-9]{3}\1[0-9]{3}\1[0-9]{3}	1
\b([a-zA-Z]\W+)\1+	2
^(?:[1-9][0-9]{0,2}(?:(,?)[0-9]{3})?(?:\1[0-9]{3})*(?:\.[0-9]*[1-9])?|0\.[0-9]*[1-9])[kbmt]?$	1
sed -r 's/0*([0-9]*).*/\1/' file	2
(\w)\1+	1
(\(*)([\w][\w\d.]*)\s*([<>!=]{1,2}|like|not like|is null|is not null|in\s*\()?\s*(?!and|or)(?:(?:(between )(['"]?)(.*?)(\5)( and )(['"]?)(.*?)(\9))|(?:(['"]?)(.*?)(\12)))\s*(\)*)\s+(?!'|")\s*(and|or)?\s*	2
(?:(?:(between )(['"]?)(.*?)(\2)( and )(['"]?)(.*?)(\6)))	2
(\(*)(\w[\w.]*)\s*([<>!=]{1,2}|like|not like|is null|is not null|in\s*\()?\s*(?!and|or)(?:(?:(between )(?:(['"])(.*?)(\5)|(\S+))( and )(?:(['"])(.*?)(\10)|(\S+)))|(?:(['"])(.*?)(\14)|(\S+)))\s*(\)*)\s*(?!'|")\s*(and|or)?\s*	2
(?:(?:(between )(['"]?)(.*?)(\2)( and )(['"]?)(.*?)(\6)))	2
sed -i 's/assertEquals([[:blank:]]*\(.\+\),[[:blank:]]*\(["].\+["]\+\))[[:blank:]]*;/Assertions.assertThat(\1).isEqualTo(\2);/g'	4
sed -i ':a;N;$!ba;s/[[:blank:]]*assertEquals(\([^;]\+\),\(\n[[:blank:]]*\([^;]\+\(\n\)*\)\))[[:blank:]]*;/    Assertions.assertThat(\1).isEqualTo(\2);/g' '{}' \;	4
^(?!.*(\d)\1{6}\b)^[0-9]{0,15}$	4
^(?!(.)\1+$)^(|[0-9]{7,15})$	4
^(?!(\d)\1+$|\d*(\d)\2{6}$)(?:\d{7,15})?$	4
(?!(\d)\1+$|\d*(\d)\2{6}$)	4
(\d)\1+$	1
\d*(\d)\2{6}$	1
(.)\1	1
(.)\1*	1
([a-z])\1	1
([a-z])([a-z])\2\1	1
((?<chrs>[a-z])\k<chrs>)+	3
((?<chrs>[a-z])\k<chrs>+)	2
([a-z])\1+	1
echo $line | sed 's/.*protocol="\([^"]*\)".*state="\([^"]*\)".*name="\([^"]*\)".*/\1 \2 \3/' | { read port state name; echo $port $state $name; }	1
reqirep ^([^\ ]*)\ /my/service/api/v6/myOffers/myItemSearch?itemId=(.*)&itemType=(.*)$ \1\ /new/v1/contextPath/offers/\3/\2	2
where regexp_like(ssn, '([0-9])(\1){4}')	1
reqirep ^([^\ ]*)\ /my/service/api/v6/myOffers/myItemSearch\?itemId\=(.*)(.&)itemType\=([^\s]+)(.*)$ \1\ /new/v1/contextPath/offers/\4/\2\5	2
:s/\(inv_question*.vox\),\(inv_question*.vox\)/\1,end.vox/g	1
<.+(class)=("|').+?\2.+?\1.+>	1
<[^>]+(class)=["'][^>]+?\2[^>]+?\1[^>]+>	1
(\d)\1{9}	1
-([^-]+)-\1-lll$	2
(?!.*(.)\1)	4
(\w+)\.(\w+\.)*\1	2
sed -i "s/^\( *'password' => '\)[^\,]*/\1"new-pass"'/" $SETTINGS	1
((WHERE|OR)[ ]+[\(]*[ ]*([\(]*[0-9]+[\)]*)[ ]*=[ ]*[\)]*[ ]*\3)|AND[ ]+[\(]*[ ]*([\(]*1[0-9]+|[2-9][0-9]*[\)]*)[ ]*[\(]*[ ]*=[ ]*[\)]*[ ]*\4	1
| sed -n '/<TD>/,/<\/TD>/H; /<TD>/h; /\/TD/{x;s/<TD>\(.*[^\n]\)\n*<\/TD>/\1/p;}' | tail -n 1	1
response=`/usr/bin/curl -s http://$host:$port/invoke/CustomService?aliasName=jms_aliasName | sed -n '/<TD>/,/<\/TD>/H; /<TD>/h; /\/TD/{x;s/<TD>\(.*[^\n]\)\n*<\/TD>/\1/p;}' | tail -n 1`	1
^\(([0-9])\1{2}\)\s\1{3}\-\1{4}$	1
^([0-9])\1{2}\.\1{3}\.\1{4}$	1
^([0-9])\1{2}\-\1{3}\-\1{4}$	1
(\d)\1*	1
^(?!.*(\W)\1)(\D*)\s(\d*min|lightning)$	4
data=$(echo $data | sed 's/^.\+\(.*\)/\1/')	1
echo 'CSC 101 Intro to Computing  A  R' | sed -n 's/^\(\w\{3\}\s[[:digit:]]\{3\}\).*\?\(\w\)\s\+\w$/\1 \2/p'	1
~~cellfun(@numel, regexp(strings, '^(.).*\1$'))	1
r"[+-](\d+)[ACTG]{\1}"	2
:%s/\(\S\)[ ]\?\n/\1  \n/g	1
^([A-Z])\1\1[a-z]([A-Z])\2\2$	1
^([A-Z])\1{2}[a-z]([A-Z])\2{2}$	1
([A-Z])\1{2}[a-z]([A-Z])\2{2}	1
sed 's/^[0-9]/\n&/' file | sed -n '/ ERROR/,/^$/{s/^[0-9].* ERROR \(.*\)/\1/;/^$/d;p}'	1
sed -r ":a;s/^([^']*('[^ ']*')*[^']*'[^' ]*) /\1_/;ta;y/ /|/" file	2
(?=(\b.{1,17}\b))\1	1
(?=\b|^)(?!d*([d])\1\1\w*)d+(?:\b|$)	2
sed 's/^.*{\(.*\)}$/\1/ foo.txt	1
:%s/^.*{\(.*\)}$/\1/	1
(?=\b|^)(?!d*([d])\1\1\w*)d+(?:\b|$)	2
id=(["'])(.*?)\1	2
sed -E 's/^[^#]*(#[^[:blank:]]*).*/\1/'	2
perl -pi -e "s/(q\((abc\S+)\[)/\$1_str\1/" file	2
s/\(\l\)\(\u\)/\1_\2/g	1
([0-9])\1+	1
(?=((ctrl|alt|shift|,|\.|\/)+?\s*[+\-/]\s*(((numpad\s*[\w/\*\-\+\.]+)|(ctrl|alt|shift|,|\.|\/|[a-z]+)+?,?)\s*(?=((([a-z],)\s*[a-z])\s*,?\s*)?)\1(?=([a-z])?)\1)))\1	4
:%s/(.+)\1+/\1/	2
(.+)\1+	2
(?>expr) => (?=(expr))\1	1
(?=([^"'“.!?]*))\1(?:"(?=([^"*]))\2"[^"'“.!?]*|'(?=([^']*))\3'[^"'“.!?]*|“(?=([^”]*))\4”[^"'“.!?]*)*[.!?]	2
r"(.{6,}?)\1{2,}"	1
(\w+?)\1+	2
(\w+)\1	2
(?=(\w+)\1)	4
(?>[^A-Z]*+([A-Z]{3}))(?=(?:[^A-Z]*+[A-Z]{3})*?\1)|(?>[^A-Z]*+[A-Z]{3})	2
(.)(?=.*?\1)	2
reqrep ^([^\ :]*)\ /hotels/(.*)     \1\ /?d=\2	2
reqrep ^([^\ :]*)\ /hotels/([^/]+)/?\??(.*)     \1\ /?d=\2&\3	2
reqrep ^([^\ :]*)\ /hotels/([^/]+)/?\??(.*)     \1\ /?d=\2&\3	2
(?:a()|b()|c()){3}\1\2\3	1
echo 'com.io.$(asdfasdf)'|sed -e 's/.*(\(.*\))/\1/g'	2
echo 'com.io.$(asdfasdf).$(ddddd)'|sed -e 's/.*((.*)).$((.*))/\1 \2/g'	2
(.)\1{2}	1
(?!.*([._-])\\1+)	4
\[((=*)\[(.|\n)*?)\]\2\]	2
--\[(=*)\[(.|\n)*?\]\1\]	2
sed "s/^\(.*\)=\(.*\)$/\U\1=\E\2/" application.properties	1
:a s/^\([^=]*\)\./\1_/g; ta	1
sed 's/^[^=]*/\U&/;:a;s/^\([^=]*\)[.-]/\1_/;ta'	1
\b([a-z])\1{0,}\b	1
\b([\w])\1*\b	1
(?i)ii+|\b((?i)[a-hj-z])\1*\b	1
\b([a-zA-Z])\1*\b	1
^((\d)(?= \d*\s(\3{0,2}n(?=.*\2)|\3{0,2})))+	4
\b(((\d)(?=[\d\s]*(\4{0,10}(n(?=.*n\3)|nn(?=.*1\3)|n{3}(?=.*2\3)|n{4}(?=.*3\3)|n{5}(?=.*4\3)|n{6}(?=.*5\3)|n{7}(?=.*6\3)|n{8}(?=.*7\3)|n{9}(?=.*8\3))?)))+)(?![\d\s]*(n(?=\4))++(..?1|(...*)\8+1))	4
^((\d)(?= \d*\s(\3{0,2}n(?=.*\2)|\3{0,2})))+\s(n(?=\3))*+\K(..?1|(..+?)\6+1)	4
\b(((\d)(?=[\d\s]*(\4{0,2}n(?=.*\3)|\4{0,2})))+)(?![\d\s]*(n(?=\4))++(..?1|(...*)\7+1))	4
sed 's/\(^C.*\)WRIT11/\1REPL11/g' your_file	1
^([1-9]|10)(?!.*\b\1\b)(;([1-9]|10)(?!.*\b\3\b)){0,3}$	4
sed 'h;s/.*\(\.[^.]*\)/\1/;x;s/\.[^.]*$//;s/\./ /g;G;s/\n//'	1
\s(?!(['"`]).*?\1)	4
(['"`]).*?\1	1
(.|)ing?(\1|\.)$	1
abc=$(sed -n -E "s/([0-9]*)(^[a-zA-Z])($j)/\1/g" file)	2
sed -nr "s/ *([0-9]+) +([^a-zA-Z])($j)/\1/p" file	2
abc=$(sed -n "s/^ *\([0-9]*\) *Y-[OH]2*.*/\1/p" file)	1
<(td|th|tr)>(.*?)<\/\1>	2
<(td)>(.*?)<\/\1>	2
(<\s*[0-9]+\>)(.*?[^<]*?)(<\s*[0-9]+\>)\1	2
<\s*(\d+)\s*>((.|\n)*?)<\s*\1\s*>	2
^\d{4}(\.?)\d{2}\1\d{4}$	1
(?:(\.(?:pdf|gif|jpe?g))\1*|\.|([^.]))$	1
(?:(\.\w+)\1*|\.|([^.]))$	2
(\.\w+)\1*	2
sed 's/.*NAME="\([^"]*\).*/\1/' /etc/os-release	1
sed -n '/^\s*$/d;$!{ 1{x;d}; H}; ${ H;x;s|\n\([^\/biz]\)| \1|g;p}'	1
^(?P<block>(?P<subject>[A-Z]{2,12})(?:(?P<operation>\*|\+)(?P<value>\d+(?:.?\d{1,2})?))?)(?:,(?P=block))*$	2
^(\w{2}\+\d{1,2}\.\d{2}),((\w)\3\*\d),((\w)\5),(\w+)$	2
grep -P '([1-9][0-9]*(?:\.[0-9]*[1-9])?)(\.?0*) ([A-Z]{3}) 0*(?!\1).* \3' filename	2
grep -v -P '\s+0*(\d+(?:\.\d*[1-9])?)[.0]*\s+0*\1[.0]*\b' filename	2
(?!www)(\w)\1{2,}	1
sed "s/\(^.*\)\t/\1\n/g"	1
((\d)(?:[()]*\2*[()]*)*)	2
grep $device_manufacturer myfile.txt | sed 's_.*/devices/\([^/]*\)/.*_\1_'	1
echo "http://server/service/local/repositories/domain/content/name/1.0.0-SNAPSHOT/name2-1.0.0-20161114.174435-142.pom"|sed 's/^.*\/\([^/]*\)$/\1/'	1
sed 's/<?\([[:space:]]\)/<?php\1/g' file	1
\b((?!CR|cr)[A-Za-z]{2}\d{5,6})\b(?![\s\S]*\b\1\b)	2
/(['"])(https?:\/\/[^\1]+)\1/	2
/url:.?(['"])(https?:\/\/.+)\1/	2
/url:.?(['"])(https?:\/\/.*?)\1/	2
sed -E 's/(github.com) (github-secondary)/\2 \1/g' ~/.ssh/config	1
cat outputfile.txt | sed 's/.*code type: \(.*\)\./\1/'	1
echo `sed -n -e 's/.*[^-]\(-\{2\}[^-].*\)"\(.*\)/\1/p' file`	1
echo `sed -n -e 's/.*[^-]\(-\{2\}[^-].*\)"\(.*\)/\1/p' file` | sed -n -e ':start { s/\(--[^\ ]*\) -/\1 1 -/p; b start }' | sed -n -e 's/\(--.*[^\ ]\)/\1 1/p'	1
echo `sed -n -e 's/.*[^-]\(-\{2\}[^-].*\)"\(.*\)/\1/p' file` | sed -n -e ':start { s/\(--[^\ ]*\) -/\1 1 -/p; b start }' | sed -n -e 's/\(--.*[^\ ]\)/\1 1/p'	1
echo `sed -n -e 's/.*[^-]\(-\{2\}[^-].*\)"\(.*\)/\1/p' file` | sed -n -e ':start { s/\(--[^\ ]*\) -/\1 1 -/p; b start }' | sed -n -e 's/\(--.*[^\ ]\)/\1 1/p'	1
sed -n -e 's/.*[^-]\(-\{2\}[^-].*\)"\(.*\)/\1/p' file	1
sed -n -e 's/.*[^-]\(-\{2\}[^-].*\)"\(.*\)/\1 1/p' file | tr '\n' ' '	1
adb logcat -d ActivityManager:I *:S | sed -n 's/ContentBrowseActivity:\s+\+\([0-9].*\)ms/\1/p'	1
adb logcat -d ActivityManager:I *:S | sed -n 's/ContentBrowseActivity:\s+\+\([0-9].*\)ms/\1/p' | grep -Po [0-9]+	1
^(?!.*([A-Z]).*\1)(?:[AB][1-3]|L[1-4]){3}$	4
(?!.*([A-Z]).*\1)	4
"([a-c]).*\\1"	1
^(?:([abc])(?!.*\1))+$	3
^(?:(.)(?!.*\1))+$	3
(.{2,}?)\1+	1
ansible localhost -m debug -a "msg= {{ 'devserver01' | regex_replace('^(.+)([0-9]{1})$','\\1') }}"	4
^([SEC])(?:,(?!\1|\2)([SEC])){0,2}$	4
^(?!.*([SCE]).*\1)[SCE](?:,[SCE]){0,2}$	4
^(?!.*([SCE]).*\1)	4
\w*(\w)[\s:;'",.?!]*\1\w*	1
(?i)\b(?:[a-z]*([a-z])[^a-z]+(?=\1))+[a-z]*	3
\A(?=.)(?:(.)(?=.*?(\1\2?)\z))*?.?\2\z	3
\A(?:(.)(?=.*?(\1\2?)\z))*?.?\2\z	4
regex="\*(.+?)\1"	2
REGEX (["'])(?:(?=(\\?))\2.)*?\1	1
svn log -q | sed -e '/^[^r]/d; s/^\(r[0-9]\+\).*/\1/'	1
(\d)(?=\1{2})	1
\d{1,2}([-./])\d{1,2}\1\d{2}	1
sed 's/\([^,]*,[^,]*\),/\1\n/g'1)	1
sed 's/\([^,]*,[^,]*\),/\1\n/g'	1
"(\\D+)\\D*\\1"	2
(.)(\1*)	2
echo 'foo (a) bar' | sed 's/\((\)\([a-zA-Z]*\)\()\)/\1something_else\3/'	2
sed '/<id>(.*)<\/id>/ {s/<sorttitle>(.*)<\/sorttitle>/<sorttitle>\1 - \2<\/sorttitle>/}' movie.nfo	2
sed -r 's/^([0-9]{6}).*([0-9]{6}).*/\1 \2/g' inputfile	1
perl -0777pne 's/STDOUT_LOG\((.*?)\)(.*?)<<(.*?);/STDOUT_LOG\(\1\,\2\3\);/gs' sensor.cpp	2
echo "P_200:E2:0.0200" | sed 's/^\(.\+\?\):\(.\+\?\):\(.\+\?\)$/\1                        \2\t\3/g'	1
sed '/todo/s/^\([1-9]\+:\)[ \t]*/\1/' file.html	1
$str =~ s/\b(\S+)\b(\s+\1\b)+/[\1]/g;	3
cat test.txt | sed -n 's:.*">C\(.*\)</a>.*:\1:p'	1
sed -r -i -e "s/^([ \t]*)(protected void setUp())/\1@Before()\n\1\2/g" File	2
... | sed '/^.*\([[:digit:]]\{2\}\):[[:digit:]]\{2\}.*/{s//\1/;q};d'	1
9{4}([0-8]\1{2})([0-9]\1{3})[0-9]	4
9{4}([0-8]\1{2})([0-9]\1{3})[0-9]	4
([0-8])\1	1
9{4}([0-8])\1([0-9])\2{2}[0-9]	1
([0-9])\2{2}	1
([a-z]) \1 \1	1
([a-z])( \1){2}	1
sed -nE 's/^([\d.]+)(?=\.)/\1/' version	2
sed -Ee 's/^([[:digit:].]+)[.][^.]*$/\1/' version	2
\\d{3}([- ])\\d{3}\\1\\d{3}	1
'(?:\\d{3}([- ])\\d{3}\\1\\d{3}|\\d{9})'	1
^(?:\\d{3}([- ])\\d{3}\\1\\d{3}|\\d{9})$	1
const re = /<([\w\s]+)>(.+?)<\/\1>/g	2
[\s](\\?")(.*?)\1[\s|\n|\t|\b|,|.]	2
(["'])(?:(?=(\\?))\2.)*?\1	1
perl -pi -e 's/^(?!.*€)(.*)/\1€/g' inputFile	2
sed -n -e 's|^.*server_name \(.*\);$|\1|p' <file_name>	1
sed -re 's/^(...).*$/\1/'	1
echo JiggySauce_20161208_21325005_Meat.txt | sed -r "s/.*_([0-9]*)_.*/\1/g"	2
echo JiggySauce_Mustard_Mayo_20161208_21325005_Meat.txt | sed -r "s/.*_([0-9]*)_.*/\1/g"	2
sed -r 's/[^0-9]*([0-9]{8}).*/\1/'	1
echo JiggySauce_20161208_21325005_Meat.txt | sed -r 's/^[^_]*_([^_]*).*/\1/'	2
(.)(.)\2\1	1
(.)[^\1][^\1][\1]	1
(.)([^\1])\2\1	4
r'(.)((?!\1).)\2\1'	4
:s/\([a-zA-Z]\) \([a-zA-Z]\)/\1\2/g	1
:s/\([a-zA-Z]\) \([a-zA-Z]\)\@=/\1/g	1
sed -n -e '/^ts=/{h;b^J}' -e "/de ad be ef/,//{H;g;s/ts=\([^ ]*\).*\n*de ad be ef \(..\) \(..\).*\n\(..\) \(..\).*/\1,\2\3\4\4/p;}" data.log	1
(\d)([A-Z])\2\1{2}\2{2}\1{3}	1
([A-Z])\2 => \2	1
[ ]\S*(\S\S)\S*\1\S*[ ]	1
^(?:(.)\1{2,})+$	1
^(?:(.)\1{2})+$	1
^(?:(\w)\1{2,})+$	1
grep -oP '\S*(\S\S)\S*\1\S*'	1
(.)(?=.*\1)	2
(.)-(\d+)-(.{\2})	2
^((  )+)\1	2
sed -i -e 's/(<username><!\[CDATA\[).*(\]\]><\/username>)/\1TEST\2/g' path/to/file.xml	1
^(?:(([\d]),)(?!.*\2)){0,9}\d$	2
sed 's/$/ /;s/[[:alpha:]]\([[:blank:][:punct:]]\)/\1/g;s/ $//' YourFile	1
sed -e "s/\b\(.\)/\U\3/g"	1
sed -e "s/\b\(.\)/\U\1/g"	1
sed -e "s/\b\(.\)/\U\3/g"	1
([a-zA-Z])..\1..\1	1
sed -e 's/\([0-9]\{2\}\)-\([0-9]\{2\}\)/\1\/\2/g'	1
echo '09-36 32-43 54-65' | sed -E 's|[[:<:]]([0-9]{2})-([0-9]{2})[[:>:]]|\1/\2|g'	1
perl -C -npe 's/(?<!\d)(\d\d)-(\d\d)(?!\d)/\1\/\2/g' file	1
<img([^>]*?)(?!\sdata-src=([\'\"])[\S\h\v]*?\2)\ssrc=([\'\"])([\S\h\v]*?)\3	4
<img (?!data-src=['"])[^>]*?src=(['"])(.*?)\1	2
echo $$result | sed "s/.*\([a-zA-Z0-9._]*\).*/\1/p";	1
$ sed -E 's/ERR: ([^ ]*).*/\1/g'	2
echo $$result | sed -E "s/.*([a-zA-Z0-9._]*).*/\1/p";	2
sed ':s;N;/^\([^ ]*\) [^\n]*\n\1/{s/\n.*//;bs};P;D'	1
:%s/^\([a-zA-Z ]\+\)\([^a-zA-Z ]\+\) \([a-zA-Z ]\+\)\([^a-zA-Z ]\+\)$/\1\2\r\3\4/g	1
's/\(^\|\(['\''" ]\)\)bar=[^ ]*/\2/g; s/[ ][ ]\+/ /g; s/[ ]*\(['\''"]\+\)[ ]*/\1/g'	1
echo 'bar=start "bar=second CONFIG="$CONFIG bar=s buz=zar bar=g bar=ggg bar=f bar=foo bar=zoo really?=yes bar=z bar=yes bar=y bar=one bar=o que=idn"' | sed -e 's/^\|\([ "]\)bar=[^ ]*[ ]*/\1/g'	1
<([a-zA-Z][a-zA-Z0-9]*)\b[^>]*>(.*?)<\/\1>	2
{{.*?(['"])(.*?)\1.*?}}	2
sed -r 's/([A-Z]+):(.*)/\1:\U\2/;s/([A-Z][a-z]+):([a-z])/\1:\U\2\L/' file	2
s/([A-Z]+):(.*)/\1:\U\2/	2
s/([A-Z][a-z]+):([a-z])/\1:\U\2\L/	2
<(?<tag>\w*)>(?<text>.*)</\k<tag>>	2
sed -r '/^([^:]*):\1$/Is//\1:\1/' file	2
([gtc])\1*(a+)(\1+\2*)+	3
(?P<first>[gtc])(?P=first)?a(?:a|(?P=first))*	1
(.),\1	1
[A-Z]{2}(\+|\*)[1-9]{1,}(?:(?(?=\1)(\+|\\*))[1-9]{1,})?	1
[A-Z]{2}(\+|\*)\d+(?!\1)((\+|\*)\d+)?	1
^(?><(.+?)>.+?<\/\1>|.){0,150}	4
^(?:(.)\1*(?:(?!\1).)\1*|(.)(?:(?!\2)(.))\3*$)$	4
s/([^\t]+)\t/\1 |/g	2
sed -E -i -r 's!(http|ftp|https)://([0-9a-zA-Z\.]+)([0-9a-zA-Z\/\.?#=_&%~+-]+)!\2!g' sample.json	2
sed -i -r 's/(.*:\/\/?[^\/]+\/?)[^\"]*(.*)/\1\2/' sample.json	2
perl -pi -e 's/\"AcqDateTime\": (.*),/\"AcqDateTime\": \"\1\",/g' t.json	2
perl -pi -e 's/\"AcqDateTime\": (|(?<!\")[^\"].*|.*[^\"](?!\")),/\"AcqDateTime\": \"\1\",/g' t.json	2
"( \(\d{4}\))\1+"	1
sed -n -e 's/#include[ \t]*[<"]\(([^ \/<"]*\/)*[^ \/]*\)\.h[">]/\1\.h/p'	2
sed -n -e 's/#include[ \t]*[<"]\([^ \/<"]*\/[^ \/]*\)\.h[">]/\1\.h/p'	1
sed -n -e 's/#include[ \t]*[<"]\(([^ \/<"]*\/)+[^ \/]*\)\.h[">]/\1\.h/p'	2
sed -nr 's/#include\s+[<"]([^>"]+)[>"].*/\1/p'	2
-?([_a-z]|[\240-\377]|([0-9a-f]{1,6}(\r\n|[ \t\r\n\f])?|[^\r\n\f0-9a-f]))([_a-z0-9-]|[\240-\377]|([0-9a-f]{1,6}(\r\n|[ \t\r\n\f])?|[^\r\n\f0-9a-f]))*	3
:s/\(\w\)\+/#\1#/	1
/(?<=\[\[(section_\w{3})\]\])(.+)(?>\[\[\/\1\]\])/s	2
(?:[^<](?=[^<]*((?=(\1?))\2<BckSp>)))+\1	4
(?:[^<](?=[^<]*(\1?+<BckSp>)))+\1	4
sed 's/\([0-9]\)T\([0-9]\)/\1 \2/' file	1
(\s?\d\s?)(\s?\1){2,}	1
sed 's/\([0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}\) /\1T/g' file > file.new	1
sed -i 's/\([0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}\) /\1T/g' file	1
sed -i -r 's/([0-9]{4}-[0-9]{2}-[0-9]{2}) ([0-9]{2}:[0-9]{2}:[0-9]{2})/\1T\2/g' myfiles	1
\b(\w+)\b([\w\W]*)\b\1\b	2
(?sm)(^DECLARE\s+(@\w+\b).*?)^DECLARE\s+\2	2
echo https://bitbucket.com/user/repo.git | sed -e 's/^.\*\\/\\(.\*\\).git$/\1/g'	1
<(\w*)>([\S\s]*?)<\/\1>	2
perl -0777 -ne 'while(m/((\s|\t)+)Recent\n\1Comments\n\1Tags/g){print "$&\n";}' /path/to/file	4
(style=([\"']))([^\2]+)(\2)	2
(style=([\"']))([^\2]+)	2
(style=([\"']))((?!\2).+)(\2)	2
^(Mission|Task)\b.*(?:\r?\n(?!End \1).*)*\r?\nEnd \1$	1
^(Mission|Task)\b[\s\S]*?^End \1$	1
\([^\([^ ]\+\)[ ]\+\1]\)	1
sed -n 's/\b\([^ ]\+\)[ ]\+\1/\1/p' file	1
(.+)\1{2,}	2
comp_arg=`echo $element | sed -nr 's/.*-c([a-zA-Z0-9_-+]*)<\/text>.*/\1/p'`;	2
sed -nr 's/.*-c([a-zA-Z0-9_+-]*)<\/text>.*/\1/p'	2
"\\b(\\w+)(\\W+\\1\\b)+"	3
"(?i)\\b(\\w+)(\\W+\\1\\b)+"	3
([+-])\s*\d+[.]\d+(?:\s*\1\s*\d+[.]\d+)*	2
([+-])\s*\d+[.]\d+\s*\1\s*\d+[.]\d+	2
pattern="^1(?:([2-9])(?!\1))+$"	3
(?!.*(\d).*\1)	4
^(?!.*(\d).*\1)1\d{3}$	4
(["'])(?:(?=(\\?))\2.)*?\1	1
(([unio]|[selct]|[from])\2?(?!\2)){3,}+	1
(([unio])\2?(?!\2)){3,}.*(([selct])\4?(?!\4)){3,}.*(([from])\6?(?!\6)){3,}.*	4
foo(bar) foo\1	1
sed -i 's/\(.*\),/\1\t/' $INPUT	1
sed 's/\(.*\),/\1\t/' $INPUT > $OUTPUT	1
^([a-zA-Z])(?!\1)[a-zA-Z]\1$	1
([a-zA-Z])(?!\1)[a-zA-Z]\1	1
\b(([A-Za-z])((?!\2)[A-Za-z])((?!\2|\3)[A-Za-z]))\b	4
sed -nre 's/^.*([A-Za-z]{3}\s+[A-Za-z]{3}\s+[0-9]+\s+[0-9]+:[0-9]+:[0-9]+\s+[0-9]{4}).*$/\1/p' filename	2
\(^|[ ]\+\)\([^ ]\+\)\([ ]\+\)\2\([ ]\+|$\)	1
egrep "(^|[ ]+)([^ ]+)([ ]+)\2([ ]+|$)" $1	2
(^|[ ]+)([^ ]+)([ ]+)\2([ ]+|$)	2
(.)\1{2}(.)\2{1}	1
(.)\1+(?!\1)(.)\2+	4
\b(\w+)\b.*?__SEP__.*?\b\1\b	2
\{(\w+)\}(.*?){/\1}((?:(?!\{\w+\}).)*)	2
((?:(?!\{\w+\}).)*)\{(\w+)\}(.*?){/\2}((?:(?!\{\w+\}).)*)	2
sed -r '/\n/!s/"(")?/\1/g;/\n/!s/;/\t/;s/^((\S*\t)[^\v]*)\v/\1\n\2/;/\t$/!P;D' file	2
sed -r 's/^((\S*\t)\S*)\v/\1\n\2/;P;D' file	2
s/(((.)\3)*)./\1/g;	4
:a;s/(.)\1*(.+)\1+/\1\1\2/;ta;	2
perl -pe's/(.)(?!.*\1)//g;while(s/(.)(.*)\1+/\1\2/g){}'	4
s/.(.)/\1/g	1
sed -E ':a;s/(.)\1*(.+)\1+/\1\1\2/;ta;s/(((.)\3)*)./\1/g;s/.(.)/\1/g;'	4
^(\w+)\s+\1$	2
sed -n -e '/.*:\([^:]*\)$/ s//\1/p' /etc/passwd	1
\1isset(\2)?\2:'';	4
:b" -e '/^\(.\)\(.*\)\1\(.*\n.*\)/s//\1\2\3\1/;tb	1
echo "remove duplicate letters from string" | sed -e ':a' -e 's/\(\(.\).*\2.*\)\2/\1/;ta' -e "G;:b" -e '/^\(.\)\(.*\)\1\(.*\n.*\)/s//\1\2\3\1/;tb' -e 's/.//;/^\n/b e' -e 'b b' -e ':e' -e 's/.//'	1
echo "remove duplicate letters from string" | sed -e ':a' -e 's/\(\(.\).*\2.*\)\2/\1/;ta' -e "G;:b" -e '/^\(.\)\(.*\)\1\(.*\n.*\)/s//\1\2\3\1/;tb' -e 's/.//;/^\n/b e' -e 'b b' -e ':e' -e 's/.//'	1
':a' -e 's/\(\(.\).*\2.*\)\2/\1/;ta'	1
sed -r ':a;s/\n*(([^\n]).*)\2/\n\1/;ta;s/\n(.)[^\n]*/\1/g' file	2
(?=.*(([2-9TJQKA])[SHDC]).*\2[SHDC].*\2[SHDC])(?=.*(?!\2)(([2-9TJQKA])[SHDC]).*\4[SHDC].*\4[SHDC]).*	4
(?=.*([2-9TJQKA])[SHDC].*\1[SHDC].*\1[SHDC])(?=.*((?!\1)[2-9TJQKA])[SHDC].*\2[SHDC])	4
echo __HOME__/properties/common/file.properties | sed -e 's/\(__\)\([A-Z]*\)\(__\)/\2/g'	1
\[(S\d+)\]+(.*?)\[\/\1\]	2
sed -r 's|([^/]*//[^/]*/).*|\1|' file	2
(.)(.)(.)(.)(.)(.)(.)(.)(.)(.)\10	1
blkid | awk '/LABEL="Usb3Ext"/{i=gensub(/.* UUID="(.*)".*/, "\\1", "g");print i}'	4
blkid | sed '/LABEL="WINRE_DRV"/!d;s/.* UUID="\(.*\)".*/\1/'	1
(?!.*(.)\1)	4
pcregrep -M '(\b[a-zA-Z]+)\s+\1\b' *	2
([*_])((?1))?(.+?)\2?\1	2
([*_])(.+?)\1	2
sed -e "s/\(\S\)\([[:upper:]]\)/\1_\2/g"	1
echo "AaAaAa AAA AAA" | sed -e ':x;s/\([^[:space:]_]\)\([[:upper:]]\)/\1_\2/g;tx'	1
1(?!.*(.)\1{4,}$).*$	4
(?:(.)(?:(?:(?!\1).){1,4})|^(.)\2{0,3})$	4
(.)(?:(?:(?!\1).){1,4})	1
^(.)\2{0,3}	1
B (\d)+ (z{\1})	1
(<img(?!.*?alt=(['"]).*?\2)[^>]*)(>)	4
sed -rn 's/([A-Za-z\-]+)\-(.*)/\1/p' packages.txt	2
str_replace(a,"(\\d{3})(\\d{3})(\\d{4})$","\\1-\\2-\\3")	4
:%s/\_^\(\d*\) \(\d*\)\_$\_.*\_^\1 \(\d*\)/\1 \2 \3/	1
^(\d+) (\d+)$[.\s]+?^\1 (\d+)	2
sed 'h;/^.*"profileId"[[:space:]]*:[[:space:]]*"\([^"]*\)".*/!d;s//\1/;x;/^.*"ownerId"[[:space:]]*:[[:space:]]*"\([^"]*\)".*/!d;s//\1/;G;s/\n/ : /' file.bsonish	1
echo "8" | sed -nf <(sed 's#\(.*\)=\(.*\)#/\2/ s/.*/Found at \1/p#' file)	1
sed 's#\(.*\)=\(.*\)#/\2/ s/.*/Found at \1/p#' file	1
^(.).\1$	1
^(.)[^\1]\1$	1
^(.)(?!\1).\1$	1
^(.)(?!\1).\1$	1
perl -pi -e 's{this(.*)\s}{\n\1\n}i && s{.*\n}{}' sample_file	2
http-response replace-value X-Application-Context ^(.*?(\barg1\b)[^$]*)$ \1banana\2	2
http-response replace-value X-Application-Context (.*)(\barg1\b)(.*)$ \1banana\3	2
([01])\1*	1
sed -nE 's/^date:\s*(\S*)$/\1/p' myfile.md	2
sed -nE 's/^date:\s*(\S{10})/\1/p' myfile.md	1
sed -nE 's/^date:\s*(\S*)/\1/p' myfile.md	2
sed -E 's/^([^[:blank:]]+)[[:blank:]]+([[:alpha:]]+)?.*[[:blank:]]([^[:blank:]]+)$/\1 \2 \3/; s/  / /'	2
sed -E 's/^([^[:blank:]]+)[[:blank:]]+([[:alpha:]]+)?.*[[:blank:]]([^[:blank:]]+)$/\1 \2 \3/'	2
(?:animal)(?:=)(\w+)(,)\1\2	2
echo 'foo_bar_BAR_space' | sed 's/_\([[:lower:]]\)/.\1/g'	1
:%s/^[^ ]* \([^ ]* issue\)/d \1/g	1
^#(([A-Fa-f\d]){3}|\2{6})$	1
(.)\1+	1
\$\{([^\}]+)\}(?![\S\s]\$\{\1\})	2
\$\{([^\}]+)\}(?![\S\s]*\$\{\1\})	2
String pattern = "\\b(\\w+)(\\b\\W+\\b\\1\\b)*";	3
\b([abc])(?!\1)[abc]\b	1
^("?)(.+?)\1;?$	2
sed -i.bak -E 's~^[[:blank:]]*\\iftoggle{[[:alnum:]_]+}{\\input{([[:alnum:]_\/]+)}}{}~\\input{\1}~' file.txt	2
(\w+)\}\}\{\}|\input\{\2	2
From\s*:\s*((["|']?)[\w|\s]+\2)?\s*(\<?)[\w]([\w\-\.\+\'\/]*)@([\w\-\.]*)(\.[a-zA-Z]{2,22}(\.[a-zA-Z]{2}){0,2})(\>?)	2
sed 's/.* to=<\(.*\)>.*/\1/' file	1
sed -E 's/.* to=<(.*)>.*/\1/' file	2
sed -E 's/.* to=<([^>]*).*/\1/' file	2
sed 's/\(com\.enterprise\.project\.AERO_CARRIERS\s*\=\s*.+\)/\1\|JJ\|PZ/g' config.properties	1
(\[(.*?)\])(.*?)(\[/\2\])	2
(?&prefix) R " (?<delimiter>[^ ()\\\t\x0B\r\n]*) \( (?s:.*?) \) \k<delimiter> "	2
(([ijku]=)(?!.*\\2)number(?:\\s(?=\\w)|$)){4}	2
sed -E 's/(^|[^e]|^e|[^r]e|^re|[^p]re)word/\1preword/g'	1
^(\<((\D+)( [a-z]*=\"[\S]*|[ ]\.{0,1}[\S]*\")*)\>).*<(iframe)( [a-z]*=\"[\S]*|[ ]\.{0,1}[\S]*\")+\><\/\5>\<\/\3\>|(\<\D+\/\>)$	2
String eqPattern = "(.*)=\\1";	2
String eqPattern = "(.*)=\\1";	2
^(?!.*([agoid]).*\1)(?!(.*m){3})[magoid]*$	4
(["'])(?:(?!\1).)*APP_NAME.*?\1	1
grep -E "([A-Z])[a-z]{2}\1[a-z]"	1
([A-Z])[a-z]{2}(?-i)(?!\1)(?i)\1[a-z]	1
cat input.json | perl -p -e 's/(\d{4}-\d{2}-\d{2}) (\d{2}:\d{2}:\d{2}.\d{3})\d{3}/\1T\2Z/g'	1
sed 's/\([0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}\) \([0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}\.[0-9]\{3\}\)[0-9]\{3\}/\1T\2Z/g' input.json	1
(?i)(\b\w+\b)(\s+\1\b)+	3
s/(.*)\n(.*)\$[^$]*\$(.*)/\2\1\3/	2
s/.*(\$[^$]*\$).*/\1/	2
:%s/&\(\w*\)/C_LOC(\1)/g	4
^([0-9])\1{5,}$	1
^((\d)(?!\2)(\d)(?!\2|\3)(\d)(?!\2|\3|\4)(\d)(?!\2|\3|\4|\5)(\d)(?!\2|\3|\4|\5|\6)(\d)(?!\2|\3|\4|\5|\6|\7)(\d)(?!\2|\3|\4|\5|\6|\7|\8)(\d)(?!\2|\3|\4|\5|\6|\7|\8|\9)(\d))(?:,(?1))*$	4
^.*?-([YRPS])-(?!\1)([YRPS])-(?!\1)(?!\2)([YRPS])$	4
^[^-]+-([YRPS])(?:-(?!\1)([YRPS])(?!.*\2))+$	4
$ sed -r 's/"([0-9]+\.?[0-9]*)"/\1/' file	2
$re = '~<((?!iframe|canvas)\w+)[^>]*>(?>[\p{Z}\p{C}]|<br\b[^>]*>|&(?:(?:nb|thin|zwnb|e[nm])sp|zwnj|#xfeff|#xa0|#160|#65279);|(?R))*</\1>~iu';	2
(\d)\1+	1
sed -i "s/\(param1='\([0-9]\+\)'\)/\1\nparam2=\2/g"	1
s/(.*?),(.*?)/\1-\2/	2
cat test | sed 's/\([:lower:]\)\!\([:lower:]\)/\1\2/g'	1
cat test | sed 's/\([a-z]\)\!\([a-z]\)/\1\2/g'	1
cat test |  sed 's/\([[:lower:]]\)\!\([[:lower:]]\)/\1\2/g'	1
'^(?!.*([.+_-])\\1)((?:[a-zA-Z0-9]+[a-zA-Z0-9.+_-]*)*[a-zA-Z0-9])+@((?:[a-zA-Z0-9]+[a-zA-Z0-9-]*)*[a-zA-Z0-9])(?:\\.(?:[a-zA-Z][a-zA-Z0-9]*){2,63})+$'	4
'^(?!.*([.+_-])\\1)[a-zA-Z0-9][a-zA-Z0-9.+_-]*[a-zA-Z0-9]@[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9](?:\\.[a-zA-Z][a-zA-Z0-9]*)+$'	4
(\d{3,})\1	1
sed -i -r "s/\?([\?:\+'])/\1/g" input_file.txt	1
(.+?)\1+	2
(?s)(?<!class \1.*)Logger.getLogger\((\w+)\.class	2
^\d{2}([ .-]?)\d{2}(?:\1\d{2}){3}$	1
(.)\1*	1
sed -i 's/\x02\{1,\}\(.\)/\1/g' foo.txt	1
(rs\w+)(?!.*\1)	2
SELECT  REPLACE_REGEXPR('(.)\1+' IN '11223331' WITH '\1' OCCURRENCE ALL)  FROM DUMMY;	1
sed 's/\(A[^Z]*\)this\([^Z]*Z\)/\1that\2/'	1
echo "A this matches Z this does not" | sed -r 's/(A[^Z]*)\bthis\b([^Z]*Z)/\1that\2/g'	2
SELECT  REPLACE_REGEXPR('(.)(?=.*\1)' IN '11223331' WITH '' OCCURRENCE ALL)  FROM DUMMY	2
(.).*\K\1	1
<(\w+).*?>.*?(somethin).*?<\/\1>	2
<(\w+).*?>(somethin)<\/\1>	2
(<(h[1-4]>))(.*)(<\/\2)	2
<(.*?)(\h*).*?>(.*?)<\/\1>	2
a(?!(.)\1)	4
/<(\w+)>[^<>]+<\/\\1>/	2
's/^\( *\)[^:[:space:]]\{1,\}:/\1:/'	1
echo ",ghjgc b: Int)" | sed -E 's/((^|[^,]) +)[^:[:space:]]+:/\1:/g'	2
's/\([^,] \{1,\}\)[^:[:space:]]\{1,\}:/\1:/g'	1
echo ",ghjgc b: Int)" | sed 's/\(\(^\|[^,]\) \{1,\}\)[^:[:space:]]\{1,\}:/\1:/g'	1
(<([^> ]+)[^>]*>)(?![^<>]*<\/\2>)	2
sed  's/"\|..$//g;s/;/\t/;:r;s/^\([^\t]*\)\t\(.*\)\\v/\1\t\2\n\1\t/;t r;s/\\t/\t/g;'  YourFile	1
sed 's/\([a-zA-Z0-9]+\)-\([a-zA-Z0-9]+\)/\1 @-@ \2/g' test.txt > test2.txt	1
sed -E 's/([^-[:blank:]]+)-([^-[:blank:]]+)/\1 @-@ \2/g' <<< "$s"	2
(["'])(?:(?!\1)[^\\]|\\.)*\1?	1
sed 's/\([a-zA-Z0-9]\{1,\}\)-\([a-zA-Z0-9]\{1,\}\)/\1 @-@ \2/g' test.txt > test2.txt	1
sed -rn 's/^.*\/([^/]+\.jpg)$/\1/gp' input.txt	2
sed '/\$/!s/^\(host=\).*/\1zzzz/' file	1
(?!(\\d)\\1+$|(?:0(?=1)|1(?=2)|2(?=3)|3(?=4)|4(?=5)|5(?=6)|6(?=7)|7(?=8)|8(?=9)|9(?=0)){5}\\d$|(?:0(?=9)|1(?=0)|2(?=1)|3(?=2)|4(?=3)|5(?=4)|6(?=5)|7(?=6)|8(?=7)|9(?=8)){5}\\d$)\\d{6}$	4
s/\v^([^|]+\|){9}\zs(\d{4})-(\d{2}-\d{2})/\3-\2/	2
s/\v^(([^|]+\|){9})(\d{4})-(\d{2}-\d{2})/\1\4-\3/	2
(\d)\1{5,}	1
(\d)\1{5}	1
(\d)\1{12}	1
sed -r 's/.{14}(.{19}):/\1:/g'	1
([0-9]{2,6})\1	1
grepl("(_)\\1", my.string)	1
(\d)\1{5}	1
^(pattern)\1+$	1
^(123)\1+$	1
^(\d)\1{12}$	1
%s/\(.*\|\)\(\d\{4\}\)-\(\d\{2\}\)-\(\d\{2\}\)/\1\3-\4-\2/g	1
grep "\(r\)\1" file	1
echo '"IPAddress": "173.14.0.3",' | sed -n -r -e 's/"IPAddress": "(.*)"/\1/p'	2
echo '"IPAddress": "173.14.0.3",' | sed -n -r -e 's/"IPAddress": "([0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3})"/\1/p'	1
myvar | tr ',' '\n' | sed 's/.*"\(.*\)".*\(".*"\).*/\1=\2/'	1
myregexpr <- "(\\w+),(\\w+)?\\2_\\1"	2
s/\([^a-zA-Z]*\)=\(.*\)/\1=\2/g	1
From\s*:\s*((["|']?)[\w|\s]+\2)?\s*(\<?)([\w]([\w\-\.\+\'\/]*)@([\w\-\.]*)(\.[a-zA-Z]{2,22}(\.[a-zA-Z]{2}){0,2}))(\>?)	2
^\s*(['|"])(.*?)\1\s?:	2
cat \(.*\) wall -> dog \1 bridge	1
\bfilename\s*=\s*(?<quote>['"]?)(?<value>.*?)\k<quote>;?$	2
${TM_FILENAME/(^|-|\.)(?!ts)(.?)|/\U\2\E/g}	1
:%s,.*\(\d\d\d\).*\(\d\d\d\).*\(\d\d\d\d\).*,\1 \2 \3,	1
:%s/\v.*(\d{3}).*(\d{3}).*(\d{4}).*/\1 \2 \3/g	1
{(?<key>[a-zA-Z]{1,4}):(?<name>[a-zA-Z_]\w*\b)(?!.*\1\b)}	2
(?ms)^(\*\*New[ ]Session\*\*)((?:(?!^\1).)*)	2
/<seg_(\d+)\sstatus=(\d+)>(.*?)<\/seg_\1>/g	2
:%s/\v(\a)\s(\a)/\1_\2/g	1
<(label|title)>([^<]*)</(\1)>	2
sed -i.bak -E '/^param=/{/=bb$/d; s/,bb(,|$)/\1/; s/=bb,/=/;}' file	1
sed -E '/^param=/{/=bb$/d; s/,bb(,|$)/\1/; s/=bb,/=/;}' file	1
(Function|Method|Macro)[\s\S]*?End \1	1
(Function|Method|Macro) (\w+)\((.*)\)((?:(?R)|[\s\S]*?)+)End \1	2
(Function|Method|Macro) (\w+)\((.*)\)(?=(?:(?R)|[\s\S]*?)+End \1)	2
^(?:4\d{3}|5[1-5]\d{2}|6011|3[47]\d{2})([- ]?)\d{4}\1\d{4}\1\d{4}$	1
^(?:4\d{3}|5[1-5]\d{2}|6011|3[47]\d{2})([-\s]?)\d{4}\1\d{4}\1\d{3,4}$	1
<!--\s*(\S+)\s*-->((?:\n|.)*)<!--\s*###\1\s*-->	2
d?([/|@#]).+?\1.*?\1[gi]?[gi]?\1?d?\d?\d?	1
^s?([/|@#])((?!\1).)+\1((?!\1).)*\1((gi?|ig)(\1\d\d?)?|i)?$	3
^s?([\/|@#])(?:(?!\1).)+\1(?:(?!\1).)*\1(?:i|(?:gi?|ig)(\1\d{1,2})?)?$	1
^(?:(.*)\1+)*$	2
^(?:(\w+)\1+)+$	2
(?:(.+?)\1+)+	2
$ echo "$txt" | sed 's/^[ ]*\([0-9]*\).*/\1/'	1
s/^\s*(\w)\w*\W+(\w+)/\1. \2/	2
sed -e ':a;s/\(<h3[^>]*id="[^"> ]*\) \(.*\)/\1-\2/;ta;' < foo.html > bar.html	1
sed -e 's/{\(.*\)}/<div class="id">\1<\/div>/'	1
sed -ri 's/\{(.+)\}/<div class="id">\1<\/div>/g' testfile	2
(.*).*\1	2
(.+?),\1	2
sed -r 's/[^ ]+[ ]+([^ ]+[ ]+[^ ]+[ ]+[^ ]+).*/\1/'	2
sed -r 's/([^ ]+[ ]+[^ ]+[ ]+[^ ]+).*/\1/' file	2
sed -r 's/([^ ]+([ ]+[^ ]+){2}).*/\1/' file	2
number=$(echo " siva:x:503:505::/home/abc:/bin/bash " | sed -rn 's/[^0-9]*([0-9]+).*/\1/gp')	2
( a )((?:(?!\1|interior).)*) interior	2
(?=([.,]+))\1(?! )	2
sed -E 's/(\s)([0-9]{2})\/([0-9]{2})\/([0-9]{4})\s([0-9]{2}:[0-9]{2}:[0-9]{2})(\s+)(.*)/\4-\3-\2_\5;\7;931;2/g' file.txt > output.csv	2
(.)\1+	1
r'\b([1-9])[1-9]\1\b'	1
r'\A([1-9])[1-9]\1\Z'	1
r'([1-9])[1-9]\1'	1
sed -r 's/^.(..).(..).(....).(........)\s*(\S*).*/\3-\2-\1_\4;\5;931;2/' file	2
([a-Z1-9])\1\1\1	1
^(\w+)\s+\1$	2
(\b\S+\b)(($|\s+)\1)+	3
match=$(echo $str1 | sed -r 's/.*([0-9]{8}[A-Z]){2}.*/\1/')	1
match=$(echo $str2 | sed -r 's/.*([0-9]{8}[A-Z]){2}.*/\1/')	1
match=$(echo $str1 | sed -r 's/.*([0-9]{8}[A-Z]){1}.*/\1/')	1
cat myfile.txt | sed -E "s|(..*)\.png|/full/path/\1|g" | ack /full/path	2
(?:^|(.)(?!\1))(\d)\2(?!\2)	4
^s?([/|@#])(?:(?!\1).)+\1(?:(?!\1).)*\1(?:(?:gi?|ig)?(?:\1\d\d?)?|i)?$	1
<(\w+).*>\s*(.*)\s*<\/\1>	2
(.)((?!\\1).)	1
\bBella und Chris kaufen(?:(?: (ein Stück Käse|eine Packung Butter|ein Brot)(?=,| und|$)(?!.*?\1)(?: und|,?)))+\b	2
^Chapter\h+(\d+).*\R(\1-\d.*\R)*+\K(?!\1-\d)\d+	3
(.)\1+	1
sed -e 's/^.*"path":"\([^"]*\)".*$/\1/	1
s/^.*"path":"[^"]*\/\([^"]*\)".*$/\1/	1
sed -e 's/City\(.*\)\/P/\1/'	1
sed -e 's/<H2>City<\/H2>\n<P>\(.*\)<\/P>/\1/'	1
sed -n '/PrivateIpAddress/N;s/.*"\([^"]*\)"\n.*"\(.*\)",.*/\1\t\2/p'	1
-e 's/\.\([^\.]\)/. \1/g'	1
echo "${T// }" | sed -r 's/\.{3,}/.../g;s/(\.+)/\1 /g'	2
sed -E -e 's/\.{4,}/.../g' -e 's/(\.)(\w)/\1 \2/g' -e 's/(\w) (\.)/\1\2/g' file	1
sed -E -e 's/\.{4,}/.../g' -e 's/(\.)(\w)/\1 \2/g' -e 's/(\w) (\.)/\1\2/g' file	1
s/(\a)\s{1}/\1/g	1
%s/\(\S\)\n\(\S\)/\1 \2/	1
(0+)(?!.*\1)	2
([0-9])\1*	1
echo "hub.docker.corp.net/suite/content-install:latest"|sed -r 's#.*/([^:]+).*#\1#'	2
(a)\18	1
sed -En 's/^([-0-9.: ]+)INFO.*?(KPI.+ms).*/\1\2/p' file.log	2
(\2)\3-\4	1
(\1)\2-\3	4
sed -i -r 's/(.*)(\[)([0-9]+)(\])(\[)([0-9]+)(\])(.*)(\{)(0.0)(\})(.*)/echo "\1\2\3"/ge'	2
sed -i -r 's/(.*\[[0-9]+\]\[[0-9]+\].*)(\{0.0\})(.*)/\1{\2}\3/'	2
^(.*)(?i:\\1)$	2
:%s#\(\n\s\+\|\t\+\)\(/\)\(\*\+\)\n#\1\2\**********\r#g<CR>	1
sed 's/\([0-9]\)  */\1XYZ/g'	1
sed 's/\([0-9]\) /\1XYZ/g'	1
sed 's/\([0-9]\) \+/\1XYZ/g'	1
sudo perl -0777 -p -i -e 's/(<Directory \"\/var\/www\/html\">.*?AllowOverride) (None)/\1 All/s' httpd.conf	2
sudo perl -p  -i -e 's/(<Directory "\/var\/www\/html">.*AllowOverride )(None)/\1 All/' httpd.conf	2
cat address.txt | sed  's/\(.+\),\(.+\),\(.+\)/\3/g'	1
cat address.txt | sed  's/[^,]*,[^,]*,\([^,]*\)/\1/'	1
sed -r 's/.+,(.+)/\1/' address.txt	2
([a-zA-Z])\1	1
sed ':a;N;s/^\([0-9][0-9]*\)\(.*\) *\n\1,/\1\2 /;ta;P;D;' file	1
([\"\'])(.*?(?<!\\))\1	2
\[\[([^|]+)\|"?\1([^\]\["]*)"?\]\]	2
(\1) (\2) (\3)	4
(?:\G(?!^)|^(Something:.*)\R(?=\1$)Something:\h*)\S*\K\h+	2
(?:\G(?!^)|^(Something:.*)\R(?=\1$)Something:\h*)	2
header\(('|")([^\1]+?)\1\)	2
sed 's@^(.*?)master_repo(.*?)@\1"${SOME_REPO_NAME}"\2@g' <<< ${FULL_TGT_DIRS[${i}]}	2
<title>([^<]*)</title>\s*<h1\b[^>]*>(?!\1)[^>]*>	2
sed -e 's/\([a-z]\),\([a-z]\)/\1\2/g'	1
regexp_filter=(\w+)\'s=>\1	2
\A\s*(?>[^\s:]+:(?(1)\1|(\S+))\s*)+\z	4
sed -r ':a s/(mypattern:[k,]*)[0-9]/\1k/; t a' yourfile	2
sed -i -E '/mysqli_query/s/\b(select|from|where|limit|and)\b/\U\1/g' /master/dashboard.php	1
$echo MDalarm_20170320_084514.mkv | sed -E "s/^MDalarm_([[:digit:]]{4})([[:digit:]]{2})([[:digit:]]{2})_.*$/\/\1\/\2\/\3/"	1
perl -pe"s/(?:(Dr\.|Mr\.) )?(?:(\w+)(?: (\w+(?: \w+)*))? )?(?:(\w+) (Jr\.|I+))|(?:(Dr\.|Mr\.) )?(?:(\w+)(?: (\w+(?: \w+)*))? )?(\w+)/pre\1\6 give\2\7 middle\3\8 fam\4\9 post\5/"	2
\b(?:([a-z])(?!\1))+(?=([a-z])\2)	4
(?!.*(.)\\1$)	4
sed 's/\(<a name="redis\)/\n\1/g' index.html | grep '^<a name="redis\/[0-9.]\+"' | sed -e 's/^<a name="redis\///g' -e 's/".*//g'	1
([\'\"]).*?\1(*SKIP)(*FAIL)|[\'\"]	2
^(?=.*(.)(?!$|.*\1))(?=.*(?!\1)(.)(?!$|.*\2))[0-9]+$	4
(\d)\d*?((?!\1)\d)\d*?(?!\1|\2)\d+$	4
public static String g(StringBuilder s){return new StringBuilder(s.reverse().toString().replaceAll("(?s)(.)(?=.*\\1)", "")).reverse().toString();}	2
"<tag1.*>(.*)</tag1>\1"	2
"<tag1.*>(.*)</tag1>\1"	2
"<tag1.*>(.*)</tag1>\\1"	2
^([^=]+)=\1$	2
sed 's/read=\(.*\)kB/\1/'	1
sed 's/.*read=\([0-9]*\)kB.*/\1/'	1
sed 's/read=\(.*\)kB/\1/'	1
$string -match '(["])(\\?.)*?\1'	1
$string -match '(["])(\\?.)*?\1$'	1
egrep "^b([aeuio])\1$"	1
echo "baa" | grep -P '^b([aeuio])(?!\1).$'	1
echo "bay" | grep -P '^b([aeuio])(?!\1).$'	1
([[:punct:]])\1	1
.*^(?=.*[[:lower:]]{2})(?=.*[[:upper:]])(?=.*[[:digit:]])(?=.*([[:punct:]])\1$).*$	2
bash-3.1$ sed -En "1{s/''/''''/g;:a;s/(<xsl([^>']|'')+)'(([^>']|[^>']+'')+)'(([^'>])+)/\1''\3''\5/;ta;p};" input.txt > output.txt	2
(.)\1{3}	1
(.)\1{2,}	1
\b\w*?(\w)\1{2}\w*	1
\b\w*?(\w)\w*?\1\w*?\1\w*	1
(["'])(?:(?=(\\?))\2.)*?\1	1
(["'](?<!\\))(?:(?=(\\?))\2.)*?\1	1
((?<!(?<!\\)\\)["'])(?:(?=(\\?))\2.)*?(?<!(?<!\\)\\)\1	1
sed 's/\({"file": "bundle.js",\n   "hash": "\).*\("\n   }\)/\1'$NEW_HASH'\2/g' chcp.manifest	1
echo "444,555,text with, separator" | sed  "s/\([0-9]*\),\([0-9]*\),\(.*\)/\1\n\2\n\3/"	1
<img[^>]*?src=("|')(.*?)\1[^>]*?>	2
(.+? .+?)( \1)+?	3
\b(\w+)\b.*\b\1\b	2
\b((\w+)\b.*?)\b\2\b	2
(\+[0-9]{7,12}|\b[0-9]{7,12}|[0-9]{3,5} [0-9]{5,9}|\+[0-9]{3,6} [0-9]{5,9}|\+[0-9]{1,4} [0-9]{3,6} [0-9]{4,9}|\+[0-9]{1,4} [0-9]{6,13})(?!.*\1)	2
\d{1,3}(?:([\.,'])?\d{3})*(?!\1)[\.,\s]\d{2}	1
^\d+(([.,])\d{3})*(?!\2)[.,]\d{2}$	1
sed 's/.*class="\([^"]*\)".*/\1/' file.txt	1
r'\1(\2)\3'	4
sed -r -i 's/((\d+\.\d+\.\d+\.\d+) - - \[(.*?)\] "(\w{3,4}) (\/.*?(\/|\.\w+)) (HTTP(S)?\/.*?)"(\d{3}) (\d+) "(.*?)" "(.*?)" "(.*?), (.*?)"(\[.*?\]) (\[.*?\]))/$12 - - [\2] "\3 \4" \8 \9 "$10" "$11"/g;' fileA.txt > fileB.txt	2
(?:([-_])[a-z0-9]+(?:\1[a-z0-9]+)*)?	1
^[a-z][a-z0-9]*(?:([-_])[a-z0-9]+(?:\1[a-z0-9]+)*)?$	1
df -m /dev/sda8 | sed -En 's~.* ([0-9]+)([0-9]{3}) +([0-9]+%).*~\1.\2MB/\3~gp'	2
^(?:\d+(?:\.\d+)?[+\-*\/^](?:\d+(?:\.\d+)?[+\-*\/^])*)?\D(\D)(?:[+\-*\/^](?:\d+(?:\.\d+)?\1?|\D\1?))*$	1
^(?:\d+[+\-*\/^](?:\d+[+\-*\/^])*)?\D(\D)(?:[+\-*\/^](?:\d+\1?|\D\1?))*$	1
^((.)(?!\2)(.)(?!\2)(?!\3).)\1$	4
^(?:(?!(\w)\1\b).)*$	4
:g/\(^.*$\)\n\(^.*$\)/s//\1 \2	1
^(?:(a)(?!\1{2})|[^a])+$	1
^(?:([abc])(?!\1{2})|[^abc])+$	1
(?<!def )my_method (["'])(?:(?=(\\?))\2.)*?\1	1
grep -P '(?<!def)\s*my_method[^"]+"[^"]+"' | sed 's/^[^"]\+\("[^"]*"\).*$/\1/g'	1
sed -r 's/^(.*?)(Some text)?(.*)$/\2/' list_of_values	2
^\([a-z]*\) = \1$	1
(?=(\d+))\1(?!px)	2
(?)(\w+d+).*\1	2
(\d+)\.\1	2
cat testfile | grep -Po 'Package: .+?Version: .+?(?=\\0a)' | sed 's/\(.*\)\\0a.*\(Version.*\)/\1 \2/'	1
##((A)|(B))##?##\1##	1
##(A|B)##(?!\1)[AB]##\1##	1
(\w)\1+	1
(.)\1+	1
([abc])\1+	1
logsheet = "!f() { git log --format='%h ^ %<(80,trunc)%s ^ A:%<(20,trunc)%an ^ D:%ad ' --no-merges --date=short $1 | sed -e 's/\\([A-Z]*-[0-9]*\\)/\\1 ^/'; }; f"	2
^((?!(\d)\1{7}).)*$	4
<script[^>]+?src=(['"]?)([^\s>]+)\1[^>]*>(<\/script>)?	2
^(?:([+-])(?!\1))+$	3
sed -r "s/(.*\.com.*)|(.*\.uk.*)|(.*\.us.*)/\3\2\1/g" file	2
sed -En "s/^\s*([[:digit:]]+\.)\s*([[:digit:]]+\.)\s*([[:digit:]]+\.)\s*([[:digit:]]+)\s*\|.*$/\1\2\3\4\,/;T;{N;N;N;N;s/\n[^|]+\|//g;s/ \| /,/g;s/ \|//;x;N;z;N;N;s/,/ -/g;G;s/\n\s*/,/g;s/^,//;p}" input.txt	2
s/^\s*([[:digit:]]+\.)\s*([[:digit:]]+\.)\s*([[:digit:]]+\.)\s*([[:digit:]]+)\s*\|.*$/\1\2\3\4\,/;T;	2
(.)\1+	1
^(.)\1*$	1
sed -E 's/(.[^[:blank:]]+)([[:blank:]])(.*)/\1\2\U\3/g' file	2
r'^(?!.*(\d)-?\1-?\1-?\1)(\d{4}-?\d{4}-?\d{4}-?\d{4}$)'	4
r'(?!.*(\d)\-?\1\-?\1\-?\1)(^d{4}\-?\d{4}\-?\d{4}\-?\d{4}$)'	4
%s/[^()]*(\([^()]*([^()]*)\))\(.*\)/\1\2/g	2
<a\s+(?:[^>]*?\s+)?href=(["'])(tel:.*?)\1	2
echo initialString | sed -e 's/^.*"access_token":"\([^"]*\)".*$/\1/'	1
finalString=$(echo $initialString |  sed -e 's/^.*"access_token":"\([^"]*\)".*$/\1/')	1
echo $line | grep -Po "^[0-9]+" | sed "s/\(.*\)000$/\1/"	1
sed  's/\([^\w\s]\)\(_\)/\2\1/g' test.txt	1
^\w+\s*(.)\s*\w+\s*\1\s*\w+(?:(?!\1).)*$	1
(one|three|four)\s*,\s*(?!\1)(one|three|four)\s*,\s*(?!\1|\2)(one|three|four)	4
echo "21/1/2016" | sed -E 's|/([1-9])/|/0\1/|; s|^([1-9]/)|0\1|; s|([0-9]{2})/([0-9]{1,2})/([0-9]{4})|\3-\2-\1T00:00:00.008Z|'	1
"<(.+)>([^<>]+)</\\1>"	2
/^(\d{2})[./](\d{2})\1(\d{4})$/	1
set c [regsub -all {\s*(\S+)\s*} $a {{\1}}]	1
^(?!.*(.).*\1)	4
^(?!.*(.).*\1)[msbrelft]+$	4
(.)\1	1
^(?!.*(.)\1)[msbrelft]+$	4
(.).*\1	1
^(?!.*(.)\1)	4
mysqli_query\(\$db, ('|")(.+?)\1\)[\s;]	2
^(.|\n)*<\[SG (?!.*(.).*\2)[msbrelft]+\]>(.|\n)*$	4
sed -n 's/^[^ ]* *\(.*\)/\1/p' file	1
<\[SG (?![^\]]*([^\]])[^\]]*\1)[msbrelft]+\]>	4
<\[SG (?:([msbrelft])(?![^\]]*?\1))+\]>	3
<\[SG (?!\w*(\w)\w*\1)[beflmrst]+\]>	4
^[\S\s]*<\[SG (?!\w*(\w)\w*\1)[beflmrst]+\]>[\S\s]*$	4
^.*<\[SG (?!\w*(\w)\w*\1)[beflmrst]+\]>.*$	4
(?i)\b((\w{1,3})(-|\.{2,10})[\t ]?)+(\2\w{2,})	1
((.)\2)(.*?)\1	4
(.)\1	1
System.out.println(data.replaceAll("([a-zA-Z])\\1{1,}", "$1"));	1
System.out.println(data.replaceAll("([a-zA-Z])\\1{2,}", "$1"));	1
"(?i)([a-z])\\1{2,}"	1
"(\\p{L})\\1{2,}"	1
"(\\p{Alpha})\\1{2,}"	1
([a-z])\\1{2,}	1
<.+(class)=("|').+?\2[^>]+?\1.+>	1
echo abcd |  perl -pe "s/(ab)(cd)?/defined($2)?\1\2:''/e"	1
\b(\w+)\s+\1\b	2
\b(\d+)\/+\1\b	2
\b(\d+)\/(\1)\b	2
%s/\.  \\([^ ]\\)/.  \\1/g	1
:%s/\. \([^ ]\)/.  \1/g	1
(</?\w+[^>]*>)(?1)*\1	2
(([a-z])\2[a-z]*){3}	2
([a-z])\2[a-z]{0,20}	1
grep '<name>' config.xml | sed "s@.*<name>\(.*\)</name>.*@\1@"	1
's/\\red({((?>[^{}]+|(?1))*)})/\2/ig'	2
echo "$2.99" | sed -e 's:^\([^\\$]*\).:the price is \1.:'	1
override func\s(\w*)\(.*?\{.*?super\.\1.*?\}	2
gsub("^(.*?)(?:[,_\\s-]\\1)+", "\\1", x)	2
gsub("^(.*?)(?:[,_\\s-]\\1){1,2}", "\\1", x)	2
sed 's,.*/\([^_]*\)_.*,\1,g'	1
sed -E 's,.*/([^_]*)_.*,\1,g'	2
sed 's,/\([^_]*\)_,\1,g'	1
echo "first url, second url, third url" | sed -E 's/.*second (url).*/\1/'	1
(?!.*([(),.#/-])\1)	4
:%s/<hr\/>\n\(<hr\/>\n\)\+/\1/	1
(?=(...))\1	1
:%s#\(<hr/>\n\)\+#\1	1
:%s#\v(\<hr/\>\n)+#\1	1
s/(\s*\b\w+\b\s*) (?=.*\b\1\b)//	2
(\b\w+\b)(?=[\s\S]+?\b\1\b)	2
$ grep -iE '[a-z]*([a-z])\1{1,}[a-z]*([a-z])\2{1,}[a-z]*`	1
(?i)\b(([a-z]{1,3})[-…] ?)+(\2[a-z]{2,})	1
sed -E 's/^>.+\(\+\) ([^:]+):.+$/>\1/' $file	2
(.)(?<=\1{2,})	1
(to)(?!.*\1)(.*)Mary	2
'(to)(?!.*\1)'	2
sed -iE "s/(ALTER DATABASE \`).*(\`)/\1$3\2/" file.sql	1
(?=(...))\1	1
^(?:aa(?=(?:aa)*(\1?+b)))+\1$	4
(.)\\1+	1
df1[nchar(gsub("(.)\\1+", "", gsub("\\b(\\S)\\S+\\s*", "\\1", df1$V1))) !=0,]	1
(\\w)\\1+(*SKIP)(*F)	2
(\\w+?)\\2+	2
^(.)(.*)\n(?!\1)	2
^(.)(.*)\n(?!\1)(.)	2
^(\w)(.*)(\R)(?!\1)(?=\w)	2
(.*)', r'\2	2
^(\w+),\1,\1$	2
std::regex reg(R"(([0-9]+)\.(\1)\.(\1)\.(\1))");	4
<!--BEGIN DELIMITER\((?<expr>(\w+))\)-->(?<content>([\s\S]*?))<!--END DELIMITER\((\k<expr>.*)\)-->	2
\bo{1,2}\b|\b(((((((((o{4})\9?)\8?)\7?)\6?)\5?)\4?)\3?)\2?)\1?\b	4
(['"])(.*?)\1	2
(?<=\s)([$]{1,2})[^\$]*\1(?=\s)	1
([$]{1,2})[^\$]*\1	1
(?:(?<=\s)|(?<=^))([$]{1,2})[^\$]*\1(?=\s|$)	1
echo "  Have a nice day  "|sed -E "s/^ *([^ ]+.*[^ ]+) +$/\\1/"	2
([,;])\1+	1
^\d{3}([+.-])\d{3}\1\d{4}$	2
\d{3}([+.-])\d{3}\1\d{4}	2
^([A-Z])[A-Z]{2}\1\d$	1
A(.)B\1	1
((?<=Seite)(?=\s)).*(?=\1)	1
Seite\K(\S+)\s+\S.*?(?=\s*\1)	2
s/([[:digit:]])[.] */\1","/	1
s/ *(County") *$/","\1/	1
sed -r 's/(Table [0-9]+)\. (.*) (County)/\1","\2","\3/'	2
$ echo 'Number xxx in text' | sed -En 's/[^0-9]*([0-9]+)[^0-9]*/\1/p'	2
^(?!.*(.)\1{3})	4
^(?!.*(.)\1{3})[^\s0-9]+$	4
set newstr [regsub -all {(\y[a-zA-Z]+_in)(\d+)} $str {\1[\2]}]	1
^(?!.*(.)\1{3})[a-zA-ZÀ-ÿ]+$	4
^(?!.*(.)\1{3})[a-zA-Z\u00c0-\u00ff]+$	4
(?!.*(.)\1{3})	4
's/(\t+)_(\w+)/\u\2, \u\1, \0/'	2
Seite((\S+)\s+\S.*?)(?=\s*\2)	2
([a-zA-Z]).*?\1	1
([a-zA-Z]){3,}.*?\1	1
([a-zA-Z]{2,}).*?\1	1
(\w)(\1*)	2
(\w)(?=\1)\1+|(\w)(?!\2)	4
(\w)(?=\1|[^\1])\1+|(\w)(?!\2)	4
^\d{2}(?|(-)|(---)|(\.)|(\:))\d{2}\1\d{2}\1\d{2}$	1
for i in `seq 1 6 30`; do sed -i -E  "${i}s/(^.*)/<questiontag>\1<\/questiontag>/g" sample.txt; done	2
for i in `seq 1 6 30`; do qs=$(($i+1)); qe=$(($i+5)) ; sed -i -E  "${qs},${qe}s/(^.*)/<answertag>\1<\/answertag>/g" sample.txt; done	2
filename="$(echo $filename | sed -e 's/\(^.*[a-z]\)\([A-Z][a-z].*$\)/\1_\2/g')"	4
sed -E 's/([a-z][a-z])([A-Z][a-z])/\1_\2/'	1
(Jan|Fev|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)(?=[\s\S]*Dictionary.*:\1=(\d+))\s(\d{2}),\s(\d{4})	2
grep . -Prle '(?s)(?<ref>foo\d+)\b(?! bar).*\k<ref>(*SKIP)(*FAIL)|foo\d+ bar'	2
\[\[(?<placeholder>[^\]]*\w)\]\](?!.*\[\[/\1\]\])	2
^(.*?)$\s+?^(?=.*^\1$)	2
^(.+?)\R(\1\R?)+	3
sed -i 's/\([0-9][0-9]\)\/\([0-9][0-9]\)\/[0-9][0-9]\([0-9][0-9]\)/\3\/\1\/\2/g' your_text_file	1
(?<=\(\\(\w)\.(?>\((?'c')|\)(?'-c')|(?>(?!\(|\)|\1).)*)*)\1(?=(?>\((?'c')|\)(?'-c')|(?>(?!\(|\)|\1).)*)*(?(c)(?!))\)\s((?>\((?'c')|[^()]+|\)(?'-c'))*(?(c)(?!))))	4
LGR.info( LGR.isInfoEnabled() ? \1 : null);	4
sed -E -e 's_.*://([^/@]*@)?([^/:]+).*_\2_'	2
[^[\w]\s]|(.)(?=\1)	1
[^[\w]\s]|(,|;|\s)(?=\1)	1
rename -v 's/(NIHMS.+tons).csv.+/\1_[0-9]\.csv/' *.csv*	2
ls *csv* | sed -E 's/(NIHM.+tons)\.csv.*$/\1_{1..5}.csv/'	2
s/(\d{2}:\d{2}:\d{2}.)\d{3}/\1000/	1
sed -rn 's/^Include[[:blank:]]+"?([^"]+)"?/\1/p'	2
sed -n 's/.*TMI IS \([0-9]+\).*/\1/g' input.txt > output.txt	1
sed -n 's/^\S\+TMI IS \([0-9]\+\).*/\1/gp' input.txt	1
(((.*\R)\3*){7})	2
%s/\(a-z\)\zs : \1\ze//	1
SELECT REGEXP_INSTR('a_kollision', 'o([lm])\\1'); # -> expected 4 got 1	1
%s/\([a-z]\+\)\zs : \1\ze//	1
sed -n '/MapNodeId=/ { s/^.*\sMapNodeId="\([^"]*\)"\s .*$/\1/p; q }'	1
(?i)(?<!\S)(?=(?:\d|([a-z])(?!\1\1\1))+(?!\S))(?=(?:([^\Waceilorsu\d_])(?!\2\2)|[aceilorsu\d])+(?!\S))(?:[^\Waeiouy_]+|(?=[a-z\d]*?(?:bstr|dscr|dstr|nscr|nstr|rscr|nsfl|nsfr))[a-z\d]*?[^\Waeiouy_](?:[a-z\d]*?[^\Waeiouy_]){2}[a-z\d]*?)(?!\S)	3
([,.:-])\1+	1
(,|\.|:|-)\1+	1
sed -i '/![^#]/ s/\(^.*BBB.*$\)/#\ \1/' file	1
grep interface test_sample | sed 's@interface\(.*\)@\1@'	1
^(.*?)$\s+?^(?=.*^\1$)	2
([\s\S]{2,})(\1+)	2
/\[([a-z0-9]+).+?\[\/\1\]/i	2
\[([a-z0-9]+)(?:(?!\[\1\b).)+?\[\/\1\]	2
-e 's/(interface Ethernet)/\n\1/g'	1
sed -r -e ':a' -e 'N' -e '$!ba' -e 's/\n//g' -e 's/(interface Ethernet)/\n\1/g' |awk '{gsub(",", " ", $15); print "echo "$1"_"$2" "$15}' | sed -r 's#([0-9]*)-([0-9]*)#`seq \1 \2`#ge'	1
sed -r -e ':a' -e 'N' -e '$!ba' -e 's/\n//g' -e 's/(interface Ethernet)/\n\1/g' |awk '{gsub(",", " ", $15); print "echo "$1"_"$2" "$15}' | sed -r 's#([0-9]*)-([0-9]*)#`seq \1 \2`#ge'	2
/<(.*?)>([^<]+)<\/\1>/i	2
/<([^>]+)>([^<]+)?<\/\1>/i	2
(?!.*([_-])\1)	4
^(?!.*([_-])\1)[\w -]+$	4
^(?!.*([_-])\1)[\w-]+$	4
r'(.)[^\1]' # doesn't work	1
r'(.)([^\1])([^\1\2])\2' # also doesn't work	4
r'(.)(.)(.)\2' # 1st and 3rd letters *should* be different!	1
(?=(\d+))\w+\1	2
(?=((\d+)\w*\2))	4
(\b\w+(?:\s+\w+)+)(?:.*?(\1))(?:.*?(\1))	2
(\b\w+(?:\s+\w+)+)(?:.*?(\1))(?:.*?(\1))?(?:.*?(\1))?	2
(\b\w+(?:\s+\w+)+)(?:.*?(\1))+	3
(\b\w+(?:\s+\w+)+)(?:.*?(\1)){1,3}	2
(\b\w+(?:\s+\w+)+)(?:.*?(\1))+	3
(\b\w+(?:\s+\w+)+).*?(\1)	2
sed -r 's/^(.*)([\{])(.*)$/\1\+0\3/g' -i "$FILENAME"	2
sed -r 's/,([^,]*)\{([^,])*/,+\10\2/g; s/,([^,]*)P([^,]*)/,-\17\2/g' "$FILENAME"	2
sed 's/\(\([^|]*|\)\{6\}\)[^|]*/\1REP/'	1
's/\(.*\)\//\1\//g'	1
echo "p1ath/p2ath/p3ath" | sed -r 's|([^/]{3})[^/]*|\1|g'	1
<([\w]+)[^>]*>sample<\/\1>	2
<([\w]+)[^>]*>[a-zA-Z ]*sample[a-zA-Z ]*<\/\1>	2
<(?:\w+:)?(\w+)[^<]*>[^<]*?sample[^<]*</(?:\w+:)?\1>	2
(#+).*?\1|\S+	2
^[^\s]+(?=\s+|\d{6})|\d{6}(?=C|P)|(C|P)(?=0+)|(?!:\1)0+|\d+$	2
^(["'])(.*)\1$	2
sed -i -E 's/([0-9]{2})([0-9]*)\.([0-9]+)/\1.\2\3/g' large_file.geojson	2
sed -i 's/\([0-9]\{2\}\)\([0-9]*\)\.\([0-9]\+\)/\1.\2\3/g' large_file.geojson	1
([<+>])\1\1	2
sed -E "s/^view\/(v_os_.*)\/.*$/\1/"	2
([`"])(?:(?=(\\?))\2.)*?\1	1
(?=(...))\1	1
(?=(Article\s[0-9]+))\1(?!\()	2
(.+)\1+	2
(.+?)\1+	2
(?=(.+)\1+(.*))(?=(.+?)\3+\2$)(?=(\3+))	4
(?=(.+)\1+(.*))(?=(.+?)\3+\2$)\3+	4
(?=(.+)\1+(.*))(.+?)\3+(?=\2$)\3*	4
--regex-R=/.+function[ ]*\([ \t]*(,*([^,= \(\)]+)[,= ]*)/\2/a,Arguments/	2
1,\$s/\(\/dev.*\)\(c0\)\(d0s.*\)\(\/dev.*\)\(c0\)\(d0s.*\)/\1c1\3\4c1\6/g	1
1,\$s/\(\/dev.*\)\(c0\)\(d0s.*\)/\1c1\3/g	1
~([\'\"])(?<!\\).*?\1(*SKIP)(*FAIL)|(?|(?P<comment>(?s)\/\*.*?\*\/(?-s))|(?P<comment>\/\/.+))~gx	2
/\/\*[\s\S]*?\*\/|(['"])[\s\S]+?\1(*SKIP)(*FAIL)|\/{2}.*/	2
(['"])[\s\S]*?\1(*SKIP)(*FAIL)	2
([\"'])({0})\1|%q<({0})>	1
(\d+)\s\1	2
(?:(?:(["'])|%q<)(?P<name>[a-zA-Z0-9\-_\.]+)(?(1)\1|>))	2
(={2,3})([a-z]+)\1	2
(["'])(.*?)\1\s*?:\s*?(['"])(.*?)\3	2
cat a|perl -lane ' if( length($_) == 7) { s/(..)(..)(.*)/\1\U\2\E\3/; print}   if( length($_) > 7) { s/(..)(...)(.*)/\1\U\2\E\3/; print} '	2
(?:([a-z])(?!\1)([a-z])(?:(?!\2)[a-z]$)?)+	4
:%s/^\([^:]\+\):\([^:]\+\):\([^:]\+\):\([^:]\+\):/\4:\3:\1:\2:/	1
$ sed -r "s/(PRODUCT_BUNDLE_IDENTIFIER = )[a-zA-Z0-9_]+(\.[a-zA-Z0-9_]+){0,2}/\1${BUNDLE_ID}/"	2
cat a |perl -npe 's/^[a-z]+[0]+([1-9][0-9]+)$|^[a-z]+([0]+[\d]+\w\d+)$/\1\2/'	2
</[BI]-(\w+)>\s*<I-\1>	2
^((.)\2?(?!\2))+$	3
(.)\1{2}	1
^(\w+) (x{length of \1})	2
sed  's/\(level="\).*/"\1\debug\"/' file.xml	1
(\d{5}|K\d{4})(?!.*?\1.*$)	2
()text(?:\1a|(?!\1)b)	1
(?<=^|\D|()43)[0-9]{8}(?=(?:\1(?:43)|(?!\1)(?:\D|$)))	1
str.replaceAll("(.)\\1+", "$1");	1
([0123][0-9])-(\1)-(\d{4})	1
(\w)\1+	1
(.)\1+	1
(.)\1	1
(\w)\1+	1
^(?:(\w)\1+)+$	1
(?:(\w)\1+)+	1
(\{%IF:(.+?)%\}\r?\n?)(.+?)|(?R)(\{%ENDIF:\2%\})\r?\n?	2
(\{%IF:(.+?)%\}\r?\n?)(.+?)(\{%ENDIF:\2%\}\r?\n?)	2
~\A(\d)\1(?!\1)(\d)\2\z~	4
**(?i)\\b([a-z]+)\\b(?:\\s+\\1\\b)+**	2
"([dog])(?!\1)([dog])?(?!\1|\2)[dog]?"	4
sed i.bak '1{s/^<?php \$uifbpsmx.*>\(<?php\)/\1/;}' file	1
^.*(\S)\1{9,}.*$	1
sed -e 's,\(.*\)/P.*$,\1,'	1
([a-z0-9.]*)\1	2
([a-z0-9.]*) Continuation of regular expression \1	2
^(?=.{2})(?!.*([a-z])\1{3})[a-z]+(?:[' -][a-z]+)*$	2
(?!.*([a-z])\1{3})	4
([a-z])(?=.*\1)	2
(.)[^.]*\1*	1
(?i)(\w)(?:(?!\1).)*\K	1
(?i)(\w)(?:(?!\1).)*	1
^(?!123([ -]?)45([ -]?)6789)(?!\b(\d)\3+\b)(?!000|666|900|999)[0-9]{3}([ -]?)(?!00)[0-9]{2}\4(?!0000)[0-9]{4}$	4
sed 's:.*\([0-9]*\)%</td>.*:\1:'	1
<([a-z][a-z0-9]*)\b[^>]*>(.*?)</\1>	2
<([a-zA-Z]\w*).*?>[^'"]+?\K(?:(['])((\w+)\2)?|(["])((\w+)\5)?)(?=[^<]*<\/\1>)	2
(\s-,)\1+	1
^(?!\b(0)\1+\b)(\+?\d{1,3}[. -]?)?\(?\d{3}\)?([. -]?)\d{3}\3\d{4}$	4
^(?=((5\-? ?)?))\1(\d{3})(\d)$	1
^(?=(...))\1	1
%s/\\subsection{\v<\(.\)\(\w*\)}/\\subsection{\u\1\L\2}/gc	1
%s/\\subsection{\(.\)\(\w*\)}/\\subsection{\u\1\L\2}/gc	1
^(?=.*F)(?=.*N)(?:\d|([FNKJ])(?!.*\1))*$	3
^(?=[string]{1,6}$)(?!.*(.).*\1).*$	2
([a-z])\1{2}(?!\1)	1
sed "s/\(\$config\['default_host'\] = \)'';/\1'localhost';/" fileName	1
(["'])(?:(?=(\\?))\2.)*?\1	1
(\w+\b\s*)*?(?:\w+\b\s*)(\w+\b\s*)*[.?!]+\1\2[.?!]	2
echo $my_var | sed -n "s/.*\([0-9\.]\+\):.*$/\1/p"	1
echo $my_var | sed -n "s/.* \([0-9.]\+\):.*$/\1/p"	1
echo $my_var | sed -n "s/^\(\|.*[^0-9]\)\([0-9.]\+\):.*$/\2/p"	1
echo '(a)ccc(b)' | sed -r 's/.*(\(a\)).*(\(b\)).*/\1 \2/'	1
:%s/^\(.*\)$/>>\1<</g	1
:%s/^([.]+)$/>>\1<</g	2
((['"])(?:\\.|(?!\2).)*\2)|:|([^'":]*)	2
sed -i "" "s/(['].*['])/[\1]/g" file.txt	2
sed "s/(\('[^']*'\))/[\1]/g"	2
content=$(echo "$content"|sed -e 's|/\$\(#.*\)$|\1|g')	1
while read -r; do echo "${REPLY%%=*}" | sed -e 's/RFC1213-MIB::\(.*\)\.0/\1/'; done <$FILE	1
sed 's/RFC1213-MIB::\([^\.]*\).*/\1/' $FILE	1
:%s/\v(\|\s*\d+(;\d+)*\s*\|\s*)\d+(;\d+)*/\12;0;0;0;0;0;0;0;0;0;0;0;0;0;0/	2
^([a-z])([\1-z])([\2-z])([\3-z])([\4-z])$	4
(["'])[A-Z](\\?.)*?\1	1
(["'])((?:[A-Z][a-z]+ ?){1,3})\1	2
([\"'])(([A-Z][^ ]*? ?){1,3})\1	2
sandwich((?:(?!forbidden).)*?)(ham|turkey)(.*?)(?!\2)(ham|turkey)	2
(pere|mère|a)(?!.*\b\1\b)	2
(9\d{7})(?!.*\1)	2
sed -ri 's~(src=")(videos\/)~\1content\://com.company.app/\2~' index2.html	1
(9\d{7})\b(?!.*\1\b)	2
<(.*)(?:\s+(\S*)=.*)?>.*<\/\1?>	2
(?<=\;|^)(.+?)\;(?=(.+\;)?\1(\;|$))	2
select regexp_replace(column_name,'(.*)([0]{2,})(.*)','\1\2xxxx') from table_name;	4
~<(span).*?(/\1)>~	1
~<(span|div).*?(/\1)>~	1
%s/(^\d)/\r\1/g	1
s/^([0-9])/\r\1/gc	1
%s/^(\d)/\r\1/g	1
%s/^\(\d\)/\r\1/g	1
sed -E 's/(^|[[:space:][:punct:]])\./\1/g' file	1
sed -E 's/([^[:alnum:]])\./\1/g' file	1
sed -E 's/([[:space:][:punct:]])\./\1/g' file	1
sed -E 's/(^|[^[:alnum:]])\./\1/g' file	1
:%s/\v^(\d)/\r\1/	1
sed -E ':a;s/(\t)*\b0\b(\t)/\1NA\2/g;ta;' file	1
cat sample.yml | sed -e "s/{{ \(.*\) }}/${\1:?}/g" > /tmp/a	1
^(\w+).*(\1)$	2
^(.*?)\bVs\b(?!.*\s+\1).*	2
(?!\w*([p])(\w*\2){2})	2
\b(?!\w*([alertho])\w*\1)(?!\w*([p])(\w*\2){2})[aplertho]{5}\b	4
(?!\w*([alertho])\w*\1)	4
(\d+(_[^\.]+\.jpg))\n(\d+)\2	2
.*([A-Za-z0-9])\1\1.*	1
echo 'not nnn ooo ttt 123 111' | grep -E -o '([[:alpha:]]|[[:digit:]])\1{2,}'	1
echo 'CHAIRMAN AAAAAAAND CHIEF EXECUTIVE OFFICER' | grep -E -o '([A-Z])\1{2,}'	1
echo 'not nn nnn oo ooo tt ttt 123 11 111' | grep -E -o '(\w)\1{2,}'	1
http-response replace-value  My-Customer-Header (.*)((?<=:)(.*)(?=:))(.*) \1XYZ\2	2
http-response replace-header My-Customer-Header (.*)((?<=:)(.*)(?=:))(.*) \1XYZ\4	2
sed -e "s@.*<Transport_key>\(.*\)</Transport_key>.*@\1@" test.txt	1
echo "$DATA" | sed -rn 's/ DA:(.*) /\1/p'	2
sed -i 's%href="/\([^/]*\)/\([^/]*\)%href="<?php echo $this->url("\1", action-> "\2") ?>%g' changes.txt	4
(.)\1+	1
(.+)(?=(\1))	2
(.)(?=.*\1)	2
"abcd" s|(\w)*|\1|	1
/<mml:(mn|mi|mo)>(.*)<\/mml:\1>/sU	2
/<mml:(mn|mi|mo)>(.*?)<\/mml:\1>/sU	2
/(?:<mml:)(mn|mi|mo)>(.+)(?:<\/mml:\1>)$/	2
/(<mml:(mn|mi|mo)>([^<]+)<\/mml:\2>)+/	3
(['"])\w+\1(*SKIP)(*F)|\b(?!return|elseif|else|if|floor|NULL|pow|function|\d+)\w+	2
'([0-9])([0-9])...([0-9])' --> (\1\2\3) \4\5\6-\7\8\9\10	4
(\1) \2-\3	4
^(?!.*(.)\1{4})[A-Z0-9]{1,25}$	4
(?![a-zA-Z0-9]*([a-zA-Z0-9])\1{4})	4
^(?![a-zA-Z0-9]*([a-zA-Z0-9])\1{4})[a-zA-Z0-9]{1,24}$	4
^(?![a-z0-9]*([a-z0-9])\1{4})[a-z0-9]{1,24}$	4
/(?:<(select|textarea)[^>]*>[^<]+<\/\1>)|(<input[^>]*type=\"([a-z]+)\"[^>]*\/?>)/ximsg	2
:%s/\v(\d{2}\.)+jpg/\1png/g	1
:%s/\v(\d{2}\.)jpg/\1png/g	1
s.str.extract('(\d)\1{2,}', expand=True)	1
s.str.contains('(\d)\1{2,}')	1
sed -i 's%href=\"\/\([^/]*\)\/\([^/]*\)?\([^/]*\)%href=\"<?php echo $this->url(\"\1\", array(\"action\"=>\"\2\"))?> \"<%g' changes.txt;	4
~<m{2}l:(m[ino])>\K[^<](?=</m{2}l:\1>$)~	1
string pattern = @"^((\d{3})(x{3})\-\2\1)|((x{3})(\d{3})-\2\1)";	4
(  (group 1)  (group 2)  -  \2  \1  )  |  (  (group 1)  (group 2)  -  \2  \1  )	4
((\d{3})(x{3})\-\2\1)	4
((x{3})(\d{3})-\2\1)	4
^((\d{3})(x{3})\-\2\1)|((x{3})(\d{3})-\2\1)	4
(?:(?<open><)(?<start>[^ >]+)[^<>]*>)?Description:\k<open>\/?\k<start>>|Description:	2
(\d\d?|[a-zA-Z]{2,8})([:/-])(\d\d?)\2(\d{2,4})	1
/<(body)(?:\s+(?>"[\S\s]*?"|'[\S\s]*?'|(?:(?!\/>)[^>])?)+)?\s*>\K[\S\s]*?(?=<\/\1\s*>)/	2
"crontab -l | sed -e 's/\\([0-9]*\\) [0-9]* \\(.*#mycomment\\)/\\1 mynewhour \\2/' | crontab -"	2
"crontab -l | sed -e 's/[0-9]* \\([0-9]*\\) \\(.*#mycomment\\)/ mynewminutes \\1 \\2/' | crontab -"	2
"crontab -l | sed -e 's/^[0-9][0-9]* [0-9][0-9]* \\(.*#mycomment\\)/mynewminutes mynewhour \\1/' | crontab -"	2
sed -e 's/^[0-9][0-9]* [0-9][0-9]* \(.*#mycomment\)/mynewminutes mynewhour \1/'	1
cat config.xml | grep "<widget"  | sed 's/[^0-9.]*\([0-9.]*\).*/\1/'	1
cat config.xml | grep "<widget"  | sed 's/.*version="\([0-9.]*\).*/\1/'	1
s/(\\href\{.*?)#(.*?)\}/\1\\#\2/g	2
sed -e "s/\([0-9]\{2\}\)/\1./g"	1
sed 's/\B\([0-9]\)\([0-9]\)\b/\1.\2/g'	1
sed 's/\B\([0-9]\)\b/.\1/g'	1
rename 's/\<\([-_a-zA-Z0-9]*\)@\([-_a-zA-Z0-9]*\)\>/\2@\1/' foo@bar	1
grep 'ServerMethod(me\.' | sed 's/.*ServerMethod(me\.[a-zA-Z]*\.\([a-zA-Z]*\)).*/\1/'	2
(?=(<!\[CDATA\[[\S\s]*?\]\]>))\1((?:(?:(?!<!\[CDATA\[[\S\s]*?\]\]>)[\S\s])*\]\]>)+)	2
(<([a-zA-Z]\w*\s)[^>]*>).*?<\/\2>	2
(<.+?)(?<=\s)on[a-z]+\s*=\s*(?:([\'"])(?!\2).+?\2|(?:\S+?\(.*?\)(?=[\s>])))(.*?>)	2
GR\d{2}(?<sep>[ -]?)\d{4}\k<sep>\d{3}\w\k<sep>\w{4}\k<sep>\w{4}\k<sep>\w{4}\k<sep>\w{3}	1
(\S+) \1	2
r'(.*) \1'	2
r'^(.*) \1'	2
sed 's/\(.+\) \(.+\) /\2 \1/ ' file.txt	1
sed 's/\(.*\) \(.*\)/\2 \1 /' file.txt	1
sed 's/\(.*\) \(.*\) /\2 \1 /' file.txt	1
sed -E 's/(.+) (.+) /\2 \1/ ' file.txt	2
sed 's/\(..*\) \(..*\) /\2 \1/' file.txt	1
sed 's/\(.\+\) \(.\+\) /\2 \1/ ' file.txt	1
s/\(.*\) \(.*\)/\2 \1 /	1
s/\(.*\) \(.*\) /\2 \1 /	1
sed "N;s/^\\(.*buildNumber:.*.*$^.*iOS: \\)[0-9]*.*$/\\1myBuildNumber/;P;D" file.asset	2
sed '/^def xyz/,/^[[:space:]]*context/{s/^\([[:space:]]*\)context/\1This is new line\n&/;}' file	1
s/^\([[:space:]]*\)context/\1This is new line\n&/;	1
sed "/^[[:space:]]*buildNumber/{n;s/\(iOS: \)[0-9]*/\1myBuildNumber/;}" file	1
sed -i '' "/^[[:space:]]*buildNumber/{n;s/\(iOS: \)[0-9]*/\1myBuildNumber/;}" file	1
sudo cat /var/log/lynis.log | grep "Hardening Index" | sed -r "s/.*?\[([0-9]+)\].*/\1/"	2
(.*?)\1$	2
^(.*)::(.*?)\1$	2
(u)(x|i)\/?\1\2	1
(?:(u[xi])[\/ ]?(?!\1)){2}	1
(u)([xi])[\/ ]\1(?!\2)[xi]	1
.*([A-Za-z\d])  replace with         \1	1
\b(\w+)(\W+\1\b)+	3
<([a-zA-Z0-9_]+)>(?!.*\1)	2
<([a-zA-Z0-9_]+)>(?!.*\\1)	2
<img.*?src\s*?=\s*?(?:(['"])(?<src>(?:(?!\1).)*)\1|(?<src>[^\s>]+))[^>]*?>	2
echo "abcdef12345" | sed -E "s#^[a-zA-Z]+([a-zA-Z])[0-9]+\$#\1#"	1
gsub("(^[\\w|.|:|\\/]*),\\1+", "\\1", text)	2
(^[\w|.|:|\/]*),\1+	2
jira_key=$(curl --request GET "http://jenkins-server/job/myProject/job/mySubProject/job/myComponent/${BUILD_NUMBER}/api/xml?xpath=/*/changeSet/item/comment" | sed -e "s/<comment>\(.*\)<\/comment>/\1/")	1
if (a.matches("(.)(.)(?:\\1\\2)*\\1?")) {	1
perl -pe 's/(.*)[\.,]../\1/;s/[\.,]//g'	2
sed 's/\(.*\)[\.,]../\1/;s/[\.,]//g'	1
\shref=(["'])\K(?:(?!\1).)*/	1
([\w-]+)=((['"]).*?\3)	2
(?=([A-Z][a-z]+)([A-Z][a-z]+)([A-Z][a-z]+)?([A-Z][a-z]+)?([A-Z][a-z]+)?)(?=(\1\2))(?=(\6\3)?)(?=(\7\4)?)(?=(\8\5)?)\1	4
r'(?<!(\w)\.)\b\1\.+\1\b(?!\.\1)'	1
r'\b(\w+)\.+\1\.+\1\b'	2
r'\b(\w+)\.+\1(?!\.+\1)\b'	2
ip add show dev eth0 | sed -rn 's@^.*inet[[:blank:]]([[:digit:]]{1,3}(.[[:digit:]]{1,3}){3})/.*$@\1@p'	1
:%s/"\([0-9]\+\)"/\1/g	1
:%s/\v\c<(fall)\s+(out)>/\1\2/g	1
echo "afghanistan : Afghanistan" | sed 's/\(.*\):\(.*\)/\2/'	1
sed -r 's#([^,]*),(.*)#s/^\1$/\1,\2/#' /home/aaron/file1	2
sed -f <(sed -r 's#([^,]*),(.*)#s/^\1$/\1,\2/#' /home/aaron/file1) /home/aaron/file2	2
find *.xml |  sed -n "s/\(^.*\)\.xml/\1/p"	1
sed -r 's/^[^0-9]*([0-9]+x[0-9]+).*$/\1/')	2
sed -r 's/.*\(([0-9]+x[0-9]+).*/\1/'	2
xdpyinfo | sed -nE '/dimensions/{s/.*\(([0-9]+x[0-9]+).*/\1/p;q;}'	2
sed -rn 's@^.*\[(.*)\]\((.*)/.*$@\1 \2@p'	2
\s*<div[^<>]*>[^<>]*</div>(?=(?:\s*<(div|span)[^<>]*>[^<>]*</\1>)*[^<>]*</span>)	4
(^.{3}).|. and replace w/ \1*	1
:%s/\(size is \w*\) \(Identifier is \w*\)/\2 \1/g	1
String.matches("(\\w)\\1")	1
(\\b\\w+\\b)\\s{1}\\1	2
\\b(\\w+)\\b\\s{1}\\1	2
\b(\w+)\s\1\b	2
sed -E 's/.*(App\.\S+).+(ERROR .*)$/\1 \2/' errors.txt	2
(["'])([^\\]*?(?:\\.[^\\]*?)*)\1	2
\b(\w+)\1\b	2
^(?=(11?))\1(?!3)	1
([^"]+?)\2(?:,|$)	2
(.)\1{3}	1
(?!.*(.)\1{3})^.*$	4
(\b(?:this|that)\b).*?\1	1
\b[^.?!]*\b(th(?:is|at))\b[^.?!]*(\b\1\b)[^.?!]*\b[.!?]	1
echo "_VERSION'] = \"1.1.1\"" | sed "s/\(_VERSION.*\)[1-9]\.[1-9]\.[1-9]/\11.1.2/"	1
sed "s/\(_VERSION.*\)[1-9]\.[1-9]/\1***/" -i test.php	1
sed "s/\(_VERSION.*\)[1-9]\./\1***/" -i test.php	1
sed "s/\(_VERSION.*\)[1-9]\.[1-9]\.[1-9]/\11.1.2/" -i test.php	1
(\b\w*\b)\s\band\s(?!\1)	2
(\b\w+\b)\s\band\s(\1)	2
(?![^<]*>)(\s<[^/]*?>|\s|^)([\wåäö])(?=.*\2(.)\S*$)|[\wåÅäÄöÖ]+$	2
sed -Ez 's/[[:space:]]+//g; s/""/","/g; s/(([^,]+,){3})([^,]+),/\1\3\n/g; $a\\' myfile.txt	2
s/(([^,]+,){3})([^,]+),/\1\3\n/g	2
(?m)^(?=(?<I>[A-Z]{1})(?<W1>[A-Za-z0-9_]+)(?<S>[ \t\r\n\v\f]{1})(?<I2>[A-Z]{1})(?<W2>[A-Za-z0-9_]+)).{0,20}(?<=(\k<I>)(\k<W1>)(\k<S>)(\k<I2>)(\k<W2>))	2
echo "method ( arg" | sed -E "s/([a-zA-Z]+) *(\() *([a-zA-Z]+)/\1\2\3/g"	2
(\s)\1{1,}	1
sed -i.bak -r "s/^(\S*HTTPS*_SERVER\S*)(\s*'https*:\/\/)(\S*)('\);)$/\1\2test.com\4/" file.txt	2
sed -E -i.bak "s/^(define\('HTTPS?_SERVER', 'https?:\/\/)[^']*('\);)/\1test.com\2/" file.txt	1
sed -n 's/.*userkey="\(.*\)"/\1/p' | cut -f1 -d ' ' | tr -d '"'	1
curl -s https://myurl.com/api/json | sed -r 's/^.*version": "([^"]+).*$/\1/'	2
\b(\w+(?:\s*\w*))\s+\1\b	2
$rec =~ s/^(.*)MACRO1(.*)MACRO2(.*)$/\1MACRO1\2MACRO3\3/;	2
/<a.*?href=\"http[s]?:\/\/([\w\.]+).*?\".*?>(?!\1).*<\/a>/g	2
sed -E 's/^([^#]+)#[^a-zA-Z\s]*(.*)$/\1 # \2/g'	2
^.*?pop_([^_]+)_throughput_\1.*$	2
^(?!0{3})(?!.*0{4}$)(\d)(?!\1*$)\d*$	2
([\"'])(?:\\\1|.)*?\1	1
([\"'])(?:\\.|(?!\1)[^\\])*?\1(*SKIP)(*F)|(?:[^\\"']|\\.)+	2
([\"'])(?:\\.|(?!\1)[^\\])*?\1	1
(['"])[^$1]+\1	1
(['"])(?:\\[\s\S]|(?!\1)[^\\])*?\1	1
(['"])(?:(?!\1)[\s\S])+\1	1
\b[ACGT]*([MNPQ])[ACGTMNPQ]*((?!\1)[MNPQ])[ACGTMNPQ]*((?!\1|\2)[MNPQ])[ACGTMNPQ]*((?!\1|\2|\3)[MNPQ])[ACGTMNPQ]*\b	4
(?!([a-z])\1\1)(.)([a-z])\3(?!\3)	4
egrep "^b([aeuio]).$" | egrep -v "^b([aeuio])\1$"	1
^\d([-.]?)\d{3}\1\d{3}\1\d{4}$	1
echo "uri=https://myserver.domain.de:1234" | sed 's|//\(.+\):|\1|'	1
echo "uri=https://myserver.domain.de:1234" | sed 's|.*//\(.*\):.*|\1|'	1
echo "uri=https://myserver.domain.de:1234" | sed -r 's|(.+//)([^:]+)(:.+)|\2|'	2
sed -r "s/^([^#]|$)/export \1/"	1
sed -c -i "s#^\(keyTab\s*=\s*\).*$#\1NEW/PATH#' file.cfg	1
sed -i 's|\(keyTab\s*=\).*|\1"'"$DIR"'"|' file.conf	1
sed -i 's/^\(keyTab=\).*/\1NEW\/PATH/' test.conf	1
sed 's/^some_var[[:space:]]*=[[:space:]]*\(.*\)/\1/'	1
(\w)(\1){4}	1
([?!.])\1+	1
sed -i 's/\(\([0-9]\{1,3\}\.\)\{3\}\)[0-9]\{1,3\}/\1XXX/g' "${file}"	1
^(?:([oofd])(?!.*\1))	2
sed -i.bak -E 's/\b([0-9]{1,3}\.){2}([0-9]{1,3}\.[0-9]{1,3})\b/XXX.ZZZ.\2/g' "${file}"	1
"\w*(\w)\1+\w*"	1
perl -pe 's/^(\d+.\d+.\d+.\d+)( *$)/\1__/' samplefile.txt	2
\w*?(\w)(?=\w*?(\1))\w*	2
^(?:(?:^|,)([1-7])(?=(?:,(?!\1)[1-7])*$))+$	3
(?!.*\b(\d+)\b.*\b\1\b)	4
(?!(\d+),[^\n]*\b\2\b)	2
^((?!(\d+),[^\n]*\b\2\b)([1-9]\b|[1-2]\d|3[0-1])(,(?1))?)$	4
"([a-z\\d])\\1{3,}"	1
"([a-z\\d])\\1\\1"	1
([a-zA-Z0-9])\\1+	1
"s/\(,\).*-/\1,&/g"	1
^([\r\n]*)((?!\[data-module=(['"])\d+\3\])[^\r\n{}])+({[\s\S]*?})$	4
/<(p)[^>]*?>(\s|(&nbsp;))*?<\/\1>/gi	1
/<(span)\b.*?class=(['"\s]?)article-id post-id\2.*?>.*?<\/\1>/gi	1
^\s+$\n^([ \t]+)Summary.*(?:\n\1[ \t]*\S.*)+	2
sgmlString.replaceAll("<(([^<>]+?)>)([^<>]+?)(?=<(?!\\1))", "<$1$3</$2>");	2
$Input =~ s/<(?!\/)([^<>]+)>\s*([^<>]+[^\s<>])\s*<\/\1>/<$1>$2<\/$1>/g;	2
sgmlString.replaceAll("<(?!\/)([^<>]+)>\s*([^<>]+[^\s<>])\s*<\/\1>", "<$1>$2<\/$1>");	2
perl -pe 's/^(\d+\.\d+\.\d+\.\d+)(\s)(.*)/\1__/' text.txt	2
perl -pe 's/^(\d+.\d+.\d+.\d+)(.*$)/\1__/' text.txt	2
^(UA-\d+)(-)(\d+)\|\|\1\2?((?=\3).*)?$	2
\b(\w+)\b(?=.*\b\1\b)	2
(\w+\b)(?!.*\1\b)	2
\w+([.|-])\w+\1\d+\1\d+	1
^\s+$\n^([ \t]+)Summary.*(?:\n\1[ \t]*\S.*)+	2
(?s)\b(\w+)\b(?<!^.*\b\1\b.*\b\1\b)	2
(?!.*(.)\1{2})	4
^(?=.*[0-9])(?=.*[^\w\s])(?=(?:[^a-z]*[a-z]){3})(?=.*[A-Z])(?!.*(.)\1{2})[a-zA-Z].{7,}$	2
perl -pe "s|(some).*(text)|\11\2|"	1
sed -Ee "s/\[\[(.*)\]\]/`host -t A \1 | rev | cut -d " " -f1 | rev`/g" <<< $TEXT	2
(([_*]).+?\2[^_*]*)*	3
([_*]).+?\1[^_*]*	2
((([_*]).+?\3[^_*]*)*)	3
(([_*]).+?\3[^_*]*)	2
(?P<digit>\d{3})-(?P<char>\w{4})&(?P=char)-(?P=digit)	1
=(['"])(\d{24})\1	1
~<(\S+).*?</\1>(*SKIP)(*FAIL)| *\([^()]*\) *~	2
/^(?!.*([A-Za-z0-9!@#$&()\\-`.+,/?"])\1{2})(?=.*[a-z])(?=.*\d)[A-Za-z0-9!@#$&()\\-`.+,/?"]+$/	4
sed -e 's/("ip":"[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|([0-9]{1,3})/\1\20/g' file.json	1
sed -r 's/("ip":"[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)[0-9]{1,3}(")/\10\2/' file	1
sed -e 's/\("ip":"[[:digit:]]\{1,3\}\(\.[[:digit:]]\{1,3\}\)\{2\}\.\)\([[:digit:]]\{1,3\}\)"/\10"/g' tst.json	1
(?!.*(\d)\1{2})	4
([^A-Z]+|([A-Z])\2|([A-Z])[A-Z]*([A-Z])[A-Z]*\3[A-Z]*\4)	2
[^A-Z]+|([A-Z])\1|([A-Z])[A-Z]*([A-Z])[A-Z]*\2[A-Z]*\3	1
sed ':a;N;/\n\([[:lower:]]\)/!ba;s// \1/' file	1
(?!.*(.).*\1)(?=.*[A-Z].*[A-Z])(?=.*\d.*\d.*\d)[a-zA-Z0-9]{10}	4
(?=(?:.*[A-Z].*){2,})(?=(?:.*\d.*){3,})(?!=(.).*\1)(^[a-zA-Z0-9]{10}$)	2
(?!.*?(\d)(.*?\1){5,})	4
^(?!.*?(\d)(.*?\1){5,})(?:048|48)?\d{9}$	4
^(?!.*?(\d)(.*?\1){5,})\d{9}$	4
(?!.*?(\d)(.*?\1){5})	4
sed -E "s|\b(A{7})[0-9]+\b|\101|g"	1
^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()])(?!.*userName)(?!.*(.)\1{2,}).{8,}$	2
static final String NAME_PATTERN = "(?!.*([-' ])\\1)[\u00C0-\u017Fa-zA-Z-' ]+";	4
(\d{4})(-?)(\d{4})(\2\d{4}){2}	1
((\d)(?!\2{3})){16}	1
\b((?(?<=\d{4})-?|)(\d)(?!\2{3}|\2{2}-\2|\2-\2{2}|-\2{3})){16}\b	1
$ sed -i -e 's/G1\(.*F4500\)/G0\1/' input.txt	1
$ echo 'G1 X95.090 Y104.910 F4500' | sed -e 's/G1\(.*F4500\)/G0\1/'	1
$ sed -E 's/^(1499[[:digit:]]*).*$/\1/' file	2
sed -i -E "s/(.*?)_pt\b/grid%\1/g" file.txt	2
perl -pe 's|(*?)_pt\b|grid%\1|g'	2
sed -E 's/[[:<:]]([_[:alnum:]]+)_pt[[:>:]]/grid%\1/g' file	2
sed -E 's/\b([_[:alnum:]]+)_pt\b/grid%\1/g' file	2
perl -pe 's/(\w+?)_pt\b/grid%\1/g' file	2
s/([A-Z]+)/\1-\1/g	2
.*(.)\\1.*	1
(?:^(['"])(\w+)\1\s+\1\2\1$)|(?:^(\w+)\s+\3$)|(?:^(\w+)\s+(?:['"]\4$|\4['"]$))	2
(?!.*([_.])\1)	4
^(?![^a-z])(?!.*([_.])\1)[\w.]*[a-z]$	2
^(?!([1-5])\1{4})(?!54321)(?!12345)[1-5]{5}$	4
\A([1-5])\1{4}\z	1
^(.)\1{10,}$	1
'^(.)\\\\1{10,}$'	1
([""'])(?:(?=(\\?))\2.)*?\1	1
(['"]?)([A-Za-z ]+)\1 <.+>	2
^(.)\1+$	1
\s*([#-])\1+\s*	1
[ \t]*([#-])\1+[ \t]*	1
/<(title|h1|h2|h3|h4|h5|ul|ol|p|figure|caption|span)(.*?)><\/(\1)>/	2
(?=(a+))\1	2
(?=([0-9]{1,4}))\1([0-9])	1
[0-9]{3,6}([-\/])[0-9]{1,3}\1[0-9]{1,2}	1
([-\/?&])\1	1
(cat|dog|bird|fish).*?(?!\1)(cat|dog|bird|fish).*?(?!\1|\2)(cat|dog|bird|fish).*?(?!\1|\2|\3)(?:cat|dog|bird|fish)	4
(cat|dog).*?(?!\1)(?:cat|dog)	1
(cat|dog|bird|fish)(?>.*?(?!\1)(cat|dog|bird|fish))(?>.*?(?!\1|\2)(cat|dog|bird|fish))(?>.*?(?!\1|\2|\3)(?:cat|dog|bird|fish))	4
^(?:(\w)(?!\1))+$	3
(?=.{LENGTH}(.*))EXPRESSION(?=\1)	2
^(?:\W|(\w)(?!\1))*\z	3
(\w)\1	1
^(?:(.)(?!\1))*\z	3
^(?:(\w)(?!\1))*\z	3
sed 's/[-0-9.]\+\([.]x86_\)/-NEW\1/'	1
\b([a-zA-Z-]+)[^a-zA-Z-]+\1\b	2
.*import com.+([a-zA-Z]+Factory\.class).*\\1.*	2
final String regex = "(?s)import\\s+com.+?\\.([a-zA-Z]+Factory\\.class).*(\\1)";	2
(?s)import\s+com.+?\.([a-zA-Z]+Factory\.class).*(\1)	2
^(")?(.*)(?(1)\1|)	2
^(?!.*([A-Za-z0-9])\1{2})(?=(.*[a-zA-Z]){3})(?=.*\d)[A-Za-z0-9]+$	4
^(?!.*([A-Za-z0-9])\1{2})(?=.*[a-zA-Z])(?=.*\d)[A-Za-z0-9]+$	4
(foo|bar|baz)(.*?)((?!\1)(?:foo|bar|baz))(.*?)((?!\1|\3)(?:foo|bar|baz))	4
\A(?!.*\b(hello|supernova)\s.*\b\1\b).*\Z	4
^([aeiou]).*\1$	1
[^\\w\\s]|(.)\\1	1
.replaceAll("([\n\t])\\1+", "$1")	1
sed -r ':a;s/^(([^|]*\|){4}X*)[^X|]/\1X/;ta' file	2
([^@]+@[^\s]+) <(?!\1)>	2
((CAV-\d\s)[AGCT]+)(?:\n\2[AGCT]+)*	2
^.*?((?(?=.*?(\b(?:broadway|acme)\b).*?)\2|.*)).*?$	4
((?(?=.*?(\b(?:broadway|acme)\b).*?)\2|.*))	4
^(?(?=(acme|broadway))\1|[\w\s])+?$	4
^(\d)(?!\1+$)\d{5}$	2
(?(?=(?:^.*?)?(ACME|Broadway)(?:.*$)?)\1|(^.*?$))	4
sed -n "s/^.*browser\(test-lab.*/.*/\).*$/\1/p"	1
sed 's/\(.[^//]*\)\/\/\(.[^/]*\)\(.[^/]*\)\(.[^/]*\)\/\(.*\)/\5/'  Input_file	1
(?:.*?)(\b\w.{3,}\b)(?:.*?)(\1)	1
$ sed 's/\([A-Z]\)/ \1/g' input.txt > output.txt	1
sed -r 'N;N;s/<([a-z_]+)>( *\n* *)([[a-z]+ ?[a-z]+]+)( *\n* *)(<\1>)/<\1>\3\5/g' question.txt	4
s/>\s*\n\s*(\w.*\w)\s*\n\s*</>\1</	2
<img.*?src\s*=\s*(?:(['"`])((?:(?!\1).)*)|((?:(?!\s*\/\s*>)[^>])*)).*	2
p\((m[0-9])\).*(?!n\(\1\))	1
sed -e 's/\([a-z]\) \{1,\}\([^a-z]\)/\1\2/ig' -e 's/\([^a-z]\) \{1,\}\([a-z]\)/\1\2/ig' -e 's/\([^a-z]\) \{1,\}\([^a-z]\)/\1\2/ig' test.csv > test.bak	1
sed -e 's/\([a-z]\) \{1,\}\([^a-z]\)/\1\2/ig' -e 's/\([^a-z]\) \{1,\}\([a-z]\)/\1\2/ig' -e 's/\([^a-z]\) \{1,\}\([^a-z]\)/\1\2/ig' test.csv > test.bak	1
sed -e 's/\([a-z]\) \{1,\}\([^a-z]\)/\1\2/ig' -e 's/\([^a-z]\) \{1,\}\([a-z]\)/\1\2/ig' -e 's/\([^a-z]\) \{1,\}\([^a-z]\)/\1\2/ig' test.csv > test.bak	1
sed 's/\(six\)\|\([^ ]\+\)/\1Z/g;s/sixZ/six/g'	1
ls *.epub | sed 's/^\([^-]*\)-_\([^.]*\)/\2-\1/' | sed -E 's/.(.epub)$/\1/g'	1
ls *.epub | sed 's/^\([^-]*\)-_\([^.]*\)/\2-\1/' | sed -E 's/.(.epub)$/\1/g'	1
sed -E 's/^(.*)_-_(.*)\.epub$/\2-\1.epub/'	2
\b(?![^a-zA-Z]+)(?!(?:[a-zA-Z]*([a-zA-Z]))*\1)[a-zA-Z]+\b	2
\b(?![^a-zA-Z]+\b)(?![a-zA-Z]*([a-zA-Z])[a-zA-Z]*\1)[a-zA-Z]+\b	2
(?![a-zA-Z]*([a-zA-Z])[a-zA-Z]*\1)	4
([a-zA-Z0-9])\1+	1
(.*?);?([0-9]+);?(.*?)\2	2
^(?!(?:\d+|([\'.])\1*)$)[a-z0-9\'.]{5,30}$	4
if(Regex.IsMatch(temp,@"^([a-zA-Z])[a-zA-Z]{3,}\1$"))	1
(^.*$)((?:\v+^\1$)+)	2
sed -E -e :a -e 's/^( *) ([^ ])/\1.\2/' -e ta file	2
sed -r ':a; s/^( *) ([^ ])/\1.\2/; ta' file	2
s/^( *) ([^ ])/\1.\2/	2
(?s)<([^>]+)>\\s*<\\s*spring:message\\s+code=\"([^\"]*)\"[^<]+<\\/\\1>	2
echo "abc def 0/1 dls dl 9/0 1//o" | sed -r 's%^[^/]* ([^ ]*)/([^ ]*) .*%\1 \2%'	2
select case when REGEXP_LIKE('KK12340000', '^KK(?=\d{4})(?:(.)\\1*|0?1?2?3?4?5?6?7?8?9?)\d{4}$') then 1 else 0 end as valid from dual;	1
Y:\\([0-9]{4})_.*(?<!\1)_ADMIN\\.*	1
^([A-Za-z])\1*([A-Za-z])\2*([A-Za-z])\3*$	1
echo "var1=prueba1&mod=SgaCac&mod=SgaGenSgm&env=&var2=prueba2" | sed 's/^.*mod=\([^&]*\).*/\1/'	1
sed -E 's/.*&mod=([^&]*)&mod=([^&]*).*/\1,\2/'	2
sed -nr 'G;:a;s/mod=([^&\n]*)(.*)/\2,\1/;ta;s/.*\n,//p' file	2
(\S+)\s*=\s*([']|["])\s*([\W\w]*?)\s*\2	2
(\S+)\s*=\s*([']|["])([\W\w]*?)\2	2
cat 1.txt | grep s/.*r([^aeiou])/\1/g	1
^(?:5[1-5][0-9]\d{1}|222[1-9]|2[3-6][0-9]\d{1}|27[01][0-9]|2‌​720)([\ \-]?)\d{4}\1\d{4}\1\d{4}$	1
sed 's/\(.*\)\(r\)\([^aeiou]\)/\3/g' 1.txt	1
sed 's/\(.*\)\(r\)\([^aeiou]\)/\1/g' 1.txt	1
sed 's/\(.*\)\(r\)\([^aeiou]\)/\1\2\3/g' 1.txt	1
sed 's/\(.*\)\(r\)\([^aeiou]\)/\1\2/g' 1.txt	1
sed 's/\(.*\)\(r\)\([^aeiou]\)/\1\3/g' 1.txt	1
sed 's/"\([^"]*\)";"\([^"]*\)";"\([^"]*\)".*/\3/'	1
sed 's/[rR]\([bcdfghijklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]\)/\1/g'	1
#<a [^>]*\bhref=(['"])http.?://((?<!mywebsite)[^'"])+\1 *.*?</a>#i	1
\.SetTimeouts\((\w+)\s*,\s*[0-9]{5}\s*,\s*\1\s*,\s*\w+\)	2
\.SetTimeouts\((\w*)\s*,\s*[0-9]{5}\s*,\s*\1\s*,\s*\w*\)	2
(.)\1{2}	1
(.)\1	1
sed -i.bak -E 's#(figure +)([0-9-]+)#\1\\ref{fig:\2}#g' main.tex	2
((?<!\\)(?:\\.)*)(["'])(?:\\.|(?!\2).)*?\2	2
grep -P -v '^(.)\1*$'	1
s/\v^(\d+ &)( \d+ &)( \d+ &)/\1\3\2/g	2
(?:href=)('|")(.*)\1	2
("|')log\3	1
(.).*?\1	1
(.).*\1	1
(.).*?(?=\1)	1
(.).*?(?=\1)	1
^\/api\/([a-zA-Z0-9-_~ %]+)\/page\/\1?$	2
M(?!([0256])\1{2})\d{3}	4
M(\d)(?!\1{2})\d{2}	1
fully=$(echo "$temp" | sed 's/\([[]\)/\\\1/;s/\([]]\)/\\\1/') ; echo "$fully"	1
/\{([a-z]+)\s*item=([a-z]+)\}(.*?)\{\/\1\}/	2
\b(\S+)\b.*?\1	2
r'(.)\1'	1
(.)\1+	1
(.)\1	1
(.)\1	1
([a-z]([a-z])([a-z])?([a-z])?)\1\1\1?\1?	1
([a-z]{2,})\1{1,100}	1
sed -E 's/([[:alpha:]]*two[[:alpha:]]+|[[:alpha:]]+two[[:alpha:]]*)/\1 \1/g' file	2
sed -r 's/(\S*two\S+|\S+two\S*)/\1 \1/g	2
echo $path | sed 's#\(.*\)\(:*\)\(/.*/jdk/jdk[0-9._]*/bin\)\(:*\)\(.*\)#\1\2CHANGED\4\5#'	1
echo $PATH | sed 's#\(.*\)\(:/.*jdk[^:]*\)\(:.*\)#\1:CHANGED\3#'	1
sed "s/^[[:space:]]*\([^[:space:]]\+\)[[:space:]]\+\(.*\)$/echo '\2' > '\1.txt'/g" input.txt > output.sh	1
sed "s/^\s*\(\S\+\)\s\+\(.*\)$/echo '\2' > '\1.txt'/g" input.txt > output.sh	1
sed -E "s/^[[:space:]]*([^[:space:]]+)[[:space:]]+(.*)$/echo '\2' > '\1.txt'/g" input.txt > output.sh	2
.{4}(?=\d{5}(.++))0{0,4}(?<part_x>\d+(?=\1))filler(?=\d{6}(.*+))0{0,5}(?<part_y>\d+(?=\3))	4
%s/\v(\d{2}:\d{2}:\d{2}\s+)[a-zA-Z0-9]+/\1hello/g	2
echo "string[3]" | sed -n 's/string\[\([0-9]\+\)\]/\1/p'	1
\b(\w+)\s+\1\b	2
\b(\w+).*\1\b	2
sed 's/\([^#]*\)\([^a-zA-Z]*\)\(.*\)/\1 \3/g'   Input_file	1
sed -r 's/.*pattern1=([^ ,]+).*pattern2=([^ ,]+).*pattern3=([^ ,]+).*pattern4=([^ ,]+).*/\1\t\2\t\3\t\4/' file.txt	2
([\\~]+(['"]))(.*?)\1	2
^(\d+),(.*$)(?=[\s\S]*^\1,(.*))	2
s/.*pattern1=([^ ,]+).*/\1\t/	2
sed -r -e 'h;s/.*pattern1=([^ ,]+).*/\1\t/;G;s/\n.*pattern2=([^ ,]+).*$/\1\t/;G;s/\n.*pattern3=([^ ,]+).*$/\1\t/;G;s/\n.*pattern4=([^ ,]+).*$/\1\t/;'	2
s/\n.*pattern2=([^ ,]+).*$/\1\t/	2
perl -pe 's/^(?:.*\.LIB).*?([\w_.]*.LIB).*$/\1/g' file	2
perl -pe 's/^(?:.*?\.LIB).*?([\w_.]*.LIB).*$/\1/g'	2
sed 's/.*\/\([[:alnum:]_]*\.LIB\).*/\1/' file	1
^(?!.*(.).*\1)[a-z]+$	4
filename\*?=((['"])[\s\S]*?\2|[^;\n]*)	2
^The sentence is (?:['"])(.*)\1$	2
^The sentence is (['"])(.*)\1$	2
RewriteRule (.+)\/\1$ $1 [L,R=301]	2
([\[\(])?(?:(\+62)|62|0)\1? ?-? ?8(?!0|4|6)\d(?!0)\d\1? ?-? ?\d{3,4} ?-? ?\d{3,5}(?: ?-? ?\d{3})?\b	1
(\w+)\1	2
((\w)\2*)	2
filename[^;=\n]*=(?:(\\?['"])(.*?)\1|(?:[^\s]+'.*?')?([^;\n]*))	2
^(.+)\v(-|=)\2+$	2
^([^=\-\v]+)\v(-|=)\2+$	2
(.)\2{2,}	1
regex = "(.*)\n(.)\2{2,}$"	2
:command! COMMANDNAME %s/^\(\d\+\)\s*\n\n/\r\1\t/ | %s/^\D/\t&/ | nohlsearch	1
SELECT REGEXP_REPLACE ('a,a,a,b,b,c,c', '([^,]+)(,\1)+', '\1') FROM DUAL;	3
SELECT REGEXP_REPLACE ('a+a+a+b+b+c+c', '([^\+]+)(\+\1)+', '\1') FROM DUAL;	3
SELECT REGEXP_REPLACE('a+a+a+b+b+c+c', '([^\+]+)(\+\1)+', '\1') FROM DUAL;	3
([\(\[\{\<]).*\1	1
sed -r 's/([0-9]{4})-([0-9]{2})-([0-9]{2})/\1.\2.\3/' <<< 'abc-def-ghi-2017-10-31'	1
sed  's/\([0-9]\{4\}\)-\([0-9]\{2\}\)-\([0-9]\{2\}\)/\1.\2.\3/' <<< 'abc-def-ghi-2017-10-31'	1
(?:\(()|\[()|\{()|<()).*(?:\1\)|\2\]|\3\}|\4>)	1
(?:opening_char_1()|opening_char_2()|...).*(?:\1closing_char_1|\2closing_char_2|...)	1
sed -ri 's/(<li>\n\s+<a href="#introduction")/<li><div class="toc-group">Topics<\/div><\/li>\1/' index.php	2
(?=.{1,12}(.*))(?=.*?[^\W_].*?[\W_].*?\1).{1,12}(?<=_|\b|\Z)|.{1,12}	2
grep -P '.*(?!(\w)\1)' testfile	4
grep -P '(?!.*(\w)\1)' testfile	4
grep -P '(?!(\w)\1)' testfile	4
grep -P '^(?!.*(\w)\1)' testfile	4
grep -P '(?=(\w)\1)' testfile	4
grep -P '(\w)(?!\1)' testfile	1
(markup).*\1(*SKIP)(*F)|(example)(?![^<]*>)	2
:%s/\(\d\+\)\(\d\d\d\)/\1,\2/g	1
:%s/\(\d\+\)\(\d\d\d\)/\1,\2/gc	1
:%s/(\d*[2-90])(\d\d\d)/\1,\2/g	2
%s/\v(.*)((\|[^|]*){3}$)/\=substitute(submatch(1),'\v(\d+)(\d{3})','\1,\2','g').submatch(2)/g	2
^(.).*\1$	1
:%!perl -F'\|' -lane 'for(@F[2..4]) { s/(\d+)(\d{3})/\1,\2/;} print join "|", @F'	2
([+-])\1	2
sed -ie "s/^\s*worker\.\(.*\)\.balance_workers=\(.*\)wallet,*\(.*\)/worker.\1.balance_workers=\2\3/"	1
sed -ie "s/^\s*worker\.\(.*\)\.balance_workers=\(.*\)wallet2,*\(.*\)/worker.\1.balance_workers=\2\3/"	1
sed 's/=wallet,\(.*\)/=\1/g' file	1
sed -e "s/^\s*worker\.\(.*\)\.balance_workers=\(.*\)wallet,\(.*\)/worker.\1.balance_workers=\2\3/" file	1
sed -Ee 's/=(.*)wallet2($|,(.*))/=\1\3/g' -e 's/,$//' file	2
sed 's/\(.*,\)\([^[:digit:]]*\)\(.*\)/\1\3/g'  Input_file	1
mv "$f" $(sed -r 's/([^0-9]+)([0-9]{4})(.*)/echo "\1$((\2+1))\3"/e' <<< "$f")	2
#([0-9A-Fa-f]{2})\1{2}	1
(?<=(["']\b))(?:(?=(\\?))\2.)*?(?=\1)	1
(.)(.)(.)\1\2\3	1
cat file | sed 's/iconv(.*,.*,\(.*\)).*/\1/g'	2
:%s/a\([\ -]\/*\ *\)b\(\1\)*\(_\)*\(c\)*/"a\1b\2\4" => a_b\3\4/g	1
%s/\(\a\)\A\+/\1_/g	1
sed -e 's/([a-z]*) :/\1:/g' .	2
sed -e 's/([a-z]*)\ \:/\1\:/g'	2
sed -e 's/([a-zA-Z]*) :/\1:/g'	2
sed -e 's/([a-z]*) :/\1:/ig'	2
<(.+?)>([^<>]+)</(\\1)>	2
sub("(.)\\1(.)\\2(.)\\3(.)\\4(.)\\5(.)\\6(.)\\7(.)\\8(.)\\9(.)\\10", "~", "112233445566778899aa", perl=TRUE)	1
sed 's/\(.*\)-.*/\1/' file	1
date.matches("[0-3][0-9](-|/)[0-1][0-9]\\1[0-2][0-9][0-9][0-9]"))	1
echo 'abcd(100 efgh)' | sed 's/abcd(\([0-9]\+\) efgh)/ab(\1)/'	1
^(\d)(?!\1+$)\d{3}$	2
(?=^\d{4}$)(\d)+(?!\1)\d\d*	1
:%s/\(\w\+\)\.json/test.\1/g	1
select regexp_replace('GiftCard,GiftCard',  '([^,]*)(,\2)+($|,)', '\2\3')	4
(ä|ö|ü)(?=[\s\S]*Dictionary:[\s\S]*\1=([^\s=:]+))	2
find 2>/dev/null / -name libgfortran.so | sed 's/\(\/.*\/\)/\1/'	1
find 2>/dev/null / -name libgfortran.so | sed -E 's#(/.*)/(.*)#\1#g'	2
R"(([a-z])\1)"	4
([a-z])\1	1
^(.)\1'	1
(.)(.(?!\1))\2(.(?!\1)(?!\2))	4
(?!.*([A-Za-z0-9])\1{2})(?=.*[a-z]).{5,}	4
(?!.*([A-Za-z0-9])\1{2})	4
(?!([A-Za-z0-9])\1{2})(?=.*[a-z]).{5,}	4
(?!([A-Za-z0-9])\1{2}$)(?=.*[a-z]).{5,}	4
(?=.*[a-zA-Z])(?=.*\d)(?!.*([A-Za-z0-9])\1{1}).{4,}	2
(?=.*[a-zA-Z])(?!.*[\W])(?!.*([A-Za-z0-9])\1{1}).{4,}	2
(.)(?!\1)(.)\2(?!\1|\2)(.)	4
<a[^<]+href=(['"]{2})\1?[^>]*?>([^<>]*)<\/a>	2
<a [^<]+?href\s*=\s*("|')(.*?)\1>(.*?)<\/a>	2
sed -i "s/container\s+([a-zA-Z_][a-zA-Z_0-9]*)\s*\{/container \1 \{\nstring:string-string 0;/g" file_to_edit;	2
(["'])(?:(?=(\\?))\2.)*?\1	1
(["'])(.+)\\\\?(.+)\1	2
s.replaceAll("(\\+|-|<|>)\\1*", "$0\n")	2
sed -n 's/.*XC:Z:\([^[:blank:]]*\).*XM:Z:\([^[:blank:]]*\).*/\1, \2/p;' file	1
sed -n 's/.*XC:Z:\([^[:blank:]]*\).*XM:Z:\([^[:blank:]]*\).*/\1, \2/;s/.*XM:Z:\([^[:blank:]]*\).*XC:Z:\([^[:blank:]]*\).*/\1, \2/;p;' file	1
sed -E 'h;s/(XC:Z:.*XM:Z:)//;tA;x;s/(.*XM:Z:)([^[:blank:]]*)(.*XC:Z:)([^[:blank:]]*)(.*)/\4,\2/;b;:A;x;s/(.*XC:Z:)([^[:blank:]]*)(.*XM:Z:)([^[:blank:]]*)(.*)/\2,\4/' infile	2
(\d)+((?!\1)(\d))	1
^(?=\d{6})(\d)\1*(?!\1)\d+$	1
$string =~ s/^.*?=(.*?)UTC\s*(.*)$/\1\2/	2
^(\d)\1{2}-\1{2}-\1{4}$	1
(?<=(\w))(?=\w)(?!\1)	1
(.)\1*	1
^([.-[\D]])\1+$	1
^(\d)\1+$	1
^(\d)(?:[\1-[\D]])+$	1
^(?=.*J(\w))(?=.*Q\1)(?=.*T\1)(?=.*K\1)(?=.*A\1).*$	2
([AB])([AB]&&[^\\1])	1
([AB])(?!\1)[AB]	1
([AB])(?!\1)(?1)	1
^(?!([AB])\1)[AB]+$	4
(?!([AB])\1)	4
([a-z]\-[a-z])(\1?)	1
sed -i -e "s/\(log_min_messages = \).*/\1notice/" "/opt/PostgreSQL/9.6/data/postgresql.conf"	1
sed -E 's/(\[.*\])/\1---/'	2
\.-?(?:[_a-z]|[\240-\377]|(?:(:?\\[0-9a-f]{1,6}(\r\n|[ \t\r\n\f])?)|\\[^\r\n\f0-9a-f]))(?:[_a-z0-9-]|[\240-\377]|(?:(:?\\[0-9a-f]{1,6}(\r\n|[ \t\r\n\f])?)|\\[^\r\n\f0-9a-f]))*	1
sed -i "s/\(\d{4}-\d{2}-\d{2}\)\*/\1 /g" *.md	1
sed -r 's/([^-]*[-][^-]*[-][^-]*).*/\1/'	2
sed -i -r 's/([0-9]{4}-[0-9]{2}-[0-9]{2}).*/\1/' *.md	1
echo '2011-05-27 13:08:00.000000000 +02:00 true' | sed -r 's/([0-9]{4}-[0-9]{2}-[0-9]{2}).*/\1/'	1
\b\d{3}([.\s]?)\d{3}\1\d{2}(?:\1\d{1,2})?\b	1
(?<=;|^)([^;]*);(\1)+(?=;|$)	3
(([^;]*;).*)\2	2
s/(<\/p>$)/TEXT_TOAPPEND\1/g	1
sed -r '/VERY_SPECIFIC/ s/(<\/p>$)/TEXT_TOAPPEND\1/g' file	1
sed -r -i.backup '/VERY_SPECIFIC/ s/(<\/p>$)/TEXT_TO_APPEND\1/g' file	1
([?!])\1*	1
(([?!])\2*)	2
([?!])\1*	1
^.*([\.]*)abc\1.*$	2
^(.*([.;]))?abc((?=[.;])\2.*)?$	2
((?=[.;])\2.*)?	2
^(?!.*([xampl]).*\1)(?!(.*e){3})[example]*$	4
(?<=>>([0-9]+)<<).*?(?=>>\1<<)	2
^(?!.*([xampl]).*\1)(?!(?:[^e\n]*e){3})[example]*[a-z][example]*$	4
(?m)(\bAccelerated\.feature\b)(?=[\s\|\-\n]*\1)	2
~("|\').*?\1(*SKIP)(*FAIL)|\#(?:[^##]|(?R))*\#~	2
((?<= )[\w.]+$)(?=.*(?<= )(\1)$)	2
((?<= )[\w.]+$)(?=[\s\S]*(?<= )(\1)$)	2
(?=[\s\S]*(?<= )(\1)$)	4
Url=(['"])(.+?)\1	2
(["'])(.*?)\2	2
\b(text|xmlUrl)\s*=\s*(?:(["'])(.*?)\2|(\S*))	2
\b(text|xmlUrl)\s*=\s*(["'])(.*?)\2	2
\b(text|xmlUrl)\s*=\s*(?:(["'])(?<v>.*?)\2|(?<v>\S*))	2
s/^(([^"]*"[^"]*")*[^"]*"[^"]*);/\1SEMICOLON/	2
sed -E "s/[^']*('[^']*').*/\1/" <<< "to_date('04/10/12','DD/MM/RR')"	2
sed -n 's/^.*-\([0-9]*\)-.*/\1/p'	1
sed 's/[^0-9]\([0-9]\)[^0-9]/-0\1-/'	1
sed -n 's/^.*-\([0-9]*\)-.*/\1/p'	1
sed 's/-\([0-9]\)-/-0\1-/'	1
echo gi.1234562.123124 | sed 's/\(gi\.\w*\)\..*/\1/'	1
cat {your_file} | sed 's/\(gi\.\w*\)\..*/\1/' | sed 's/$seq_char/$label /g'	1
echo "../parent/child/" | sed "s_.*/\(.*?\)/$_\1_p"	1
sed -e 's_.*/\([^/]*\)/$_\1_'	1
(?<=,|^)([^,]*)(?=.*\\b\\1\\b)(?=,|$)	2
(\d)\1	1
sed -i -E "s/(?<=syslog\()(.*)(?=\);)/assert(syslog(\1));/" /path/to/somewhere	2
sed -i "s/syslog(\(.*\));/assert(syslog(\1));/g" /path/to/somewhere	2
sed -i "s/syslog(\(.*\));/assert(syslog(\1));/g" /path/to/somewhere	2
^[$][\w:($)\2]+[$]$	1
sed -i 's/leaf \(\w+\)-/leaf \1_/g' file	1
(\w{3}).+(\1)	1
^(\d)\1*$	1
<asp:RegularExpressionValidator ID="Regex" runat="server" ValidationExpression="^(\d)\1*$" ErrorMessage="" CssClass="errfont" ControlToValidate="txtKilometer" Display="Dynamic"></asp:RegularExpressionValidator>	1
sed -r "s/calc\((.*?)([\/\+\-\*])(.*?)\)/calc(\1 \2 \3)/g" style.css	2
^([A-Za-z])\1([A-Za-z])\2(\d)\3{5}$	1
(\w)\1{1,}	1
r'(\w).*\1	1
r"([a-z])\s\1\w*([a-z])\s\2"	1
sed -r 's/(<[A-Z]+>)(.*: - )(.*)/\1 - \3/g'	2
sed -E 's/^(<[A-Z]+>).*:( - .*)/\1\2/' logfile	2
(.*)\n\1	2
(- |\|)(?:(?!\1).)+$	1
Page:\s (\d+) of \1	2
^Page:\s*(\d{1})\s*of\s*\1$|^Page:\s*(\d{2})\s*of\s*\2$|^Page:\s*(\d{3})\s*of\s*\3$	1
sed -E "s/(.{4,}?)\1+/\1/g" test.txt	1
sed 's/\(.\)\1\+/\1/g' test.txt	1
^\(.*\)\n\1$	1
(foo|bar|123).*\1	1
(?<=^|;)([^\n;]+)(?=.*(?:(?<=^|;)\1(?=;|$)))	2
:%s/(.+):\r/\n\1:/g	2
(?<char>\w)\k<char>	1
sed -r ':a;s/((\b|[[:punct:]]).+)\s*\1/\1/;ta' file | uniq	2
^.*(.)\1\1.*$	1
^([\x22\x27]?)[\w.&#]+\1$	1
^\w+(?=(,?\s))(?:\1\w+)+$	1
(?=(,?\s))(?:\1\w+)+	1
(?<=/)([0-9]{1,2})[*]*([GM])[+]?(\1[*]*\2[+]?)+	3
(\w)\1*	1
sed '/%%###/!b;G;s/.*\(.\)/\1&/' file	1
sed 's/\(AAA\|BBB\)\(_CCC\)\?/\1_CCC/g' file	1
sed -E 's/(AAA|BBB)(_CCC)?/\1_CCC/g' file	1
f(o)+(.)\2+	1
f(?:o)+(.)\1+	1
sed -Eun 's/[^>]+> ([0-9.]+)\.[0-9]+:.+q: A\? ([a-z0-9.-]+)\.([^:]+).*/\1:\2:\3/pg	2
^PIN (\S+).*?^END \1$	2
^PIN (\S+).*^END \1$	2
r'(\d)\1*'	1
^(?:([0-2])(?!\1))*$	3
^(([012])(?!\2))+$	3
grep -E '(.)\1{3,}' input_file	1
grep -E '(.)(.*\1){3}' input_file	2
's/\(\([[:digit:]]\+.[[:digit:]]\+\)[[:space:]]\+\)\{6\}/\2/p'	1
([nep])(?!\2)	4
([nep])(?!\3)	1
(?:([nep])(?!\2)([nep])(?!\3))(?!\2)	4
((?:([nep])(?!\2)([nep])(?!\3))(?!\2)[nep])	4
^\([A-Z]\)[^\1]*\1[^\1]*\1[^\1]*	1
grep '^\([A-Z]\).*\1.*\1'	1
grep -P '^([A-Z])(?:(?!\1).)*\1(?:(?!\1).)*\1(?:(?!\1).)*$'	1
\b(([A-Za-z])(?!\2))+\b	3
\b(?:([A-Za-z])(?!\1))+\b	3
(shark|trip)(?!.*\1)	2
([A|F])(?!.*\1)	2
(^\s*+)(.*?)((?=($(?!\r\n)|\r\n)(?!\1 )))	2
#(?:(?!<)[^<>]+(?!>))|(?:<(?=[^/>]+\/>).*\/>)|(?:<([^\s]+).*>.*(?=<\/\1>)<\/\1>)#g	2
echo "FIXTEST_XYZ             23040/tcp       # 127.0.0.1:23040" | sed -n 's/^FIXTEST_\([A-Za-z0-9]\+\)\s\+\([0-9]\+\)\/tcp\s\+#\s*\([A-Za-z0-9.]\+\):\([0-9]\+\)\s*/\1 \2 \3 \4/p'	1
sed '/version: /{h;s/.*\( [0-9]*\)/echo $((\1+1))/e;x;s/ .*//;G;s/\n/ /}' infile	4
sed ':A;s/\(.*\)\([^ |\*]\)\([ |\*]*[ ][^ ][^ ]*[ ]*$\)/\1*\3/;tA' infile	1
^(\d+)(?: +)(?:\d* *)*?\1 *$	2
^(\d+)(?: +)\1 *$	2
sed -r ':a; N; /^(#[^,]+,).*\n\1/! { P; D }; s/\n/ /; ba' file	2
s/^(([^']*'[^']*')*[^']*'[^']*)[[:space:]]/\1_/	2
( [a-zA-Zآ-ی] )\1+	1
(.)\1+	1
(.)\1+	1
\b\d+(\W)\d+\1\d+\b	1
\d{4}([-/.])\d{1,2}\1\d{1,2}	1
([.])\1{1,}	1
^(?!.*(.)(?=\1)).*$	4
\b(?!\w*(\w)\1)\w+\b	4
(?!\w*(\w)\1\w*)	4
\b([a-z])?([a-z])?([a-z])?\2\1\b/gi	1
sed -i~ -e '/^>/!b' -e 's/\([>_]\)[0-9]*_/\1/g' -e 's/_[0-9]*$//' *.fasta	1
echo "xx yy [a1 b1] / zz [a2 b2]/" | awk '{p=gensub(/.*\[([a-z0-9 ]+)\].*/,"\\1",1); print $2,p}'	4
capture\.kernel_packets.*Total.*\|\s+(\d+)\1	2
sed ':a;s/\([ab]\)  *\([ab]\)/\1\2/g;ta' file	1
sed -E 's/([ab]) +([ab])/\1\2/g;s/([ab]) +([ab])/\1\2/g' file	1
sed 's/\([ab]\)  *\([ab]\)/\1\2/g;s/\([ab]\)  *\([ab]\)/\1\2/g' file	1
sed -E ':a;s/([ab]) +([ab])/\1\2/g;ta' file	1
sed -r ':rep; s/(xx.*)a(.*zz)/\1hello\2/; trep'	2
sed -E ':a;s/(xx([^z]|z[^z])*z?)a(([^z]|z[^z])*zz)/\1hello\3/g;ta' file	2
sed -r ':a;s/zz/\n/;:b;tb;s/(xx[^\na]*)a([^\n]*\n)/\1hello\2/;tb;/zz/ba;s/\n/zz/g' file	2
(?!.*([-()])(?=\1))	4
^\+?(?!.*([-()])(?=\1))(?=.*?[1-9])[0-9-()+ ]+$	4
grep -E "(the)((?=\s(.+)\s)\1){2,}" file.txt	2
grep -E "(the)(\s(.+)\s\1){2,}" file.txt	2
- debug: msg="{{ 'test.home.com' | regex_replace('^([^.]*).*', '\\1') }}"	4
sed 's/\([^@#] \)*\([@#][-A-Z0-9]*\)/\2\n/g' <<<"$string"	1
let pattern = "(\\w)\\1*"	1
(.)\\1+	1
sed 's/\(TCP_IN =\) .*/\1 "22, 80, 443, 9000"/' file	1
sed -E 's/(TCP_IN =) .*/\1 "22, 80, 443, 9000"/' file	1
^\((\d)(?!\1{2}-\1{3}-\1{4}$)\d{2}\)\d{3}-\d{4}$	1
^(\d)(?!\1{2}\1{3}\1{4}$)\d{2}\d{3}\d{4}$	1
(?:(?:(\d)(?!\1)){3}-?)	1
^(?:(?:(\d)(?!\1)){3}-?){2}(?:(?:(\d)(?!\1)){4})$	1
^(Av)\1([^A]|$)	1
AvAv    - matches (Av)\1$	1
^(Av)\1([^A]|$)	1
^(?!(\d)\(\1{3}\))(?!(\d)\2{9})(?!(\d)\3{2}-\3{3}-\3{4})(?:\(\d{3}\)|\d{3})(-?)?\d{3}\4\d{4}$	4
\d{2}(-?)\d{3}\2\d{4}	1
^(\d)(?!\1{9})(?!\1{2}-\1{3}-\1{4})\d{2}(-?)\d{3}\2\d{4}$	4
sed -rn 's|^directory_root[[:blank:]]+(/[^/]*/?).*|\1|p' data	2
cat file | sed -e 's|^directory_root \(/[^/]*/\).*$|\1|;tx;d;:x'	1
^(boo|foo|tar)(?!.*\1)(?:,(boo|foo|tar)(?!.*\2))*$	4
(?:,(boo|foo|tar)(?!.*\2))*	4
^(?:,?(boo|foo|tar)(?!.*\1))*$	3
sed -r ':a;/^\s*abc:/!b;:b;$d;N;/^(\s*)abc.*\n\1[^\n]*$/{/^(\s*)abc.*\n\1\S/!bb};s/.*\n//;ba' file	2
^.*?filename=(["\'])?([^"\']+)\1?(?:;|$)	2
?\d{3}([ -])\d{3}\1\d{3,4}	1
filename=(['"])?(?(1)(.+?)\1|([^;]+))	2
sed -En "N;s/^(.*)\n(.*)$/>\1\n>\2/;:a;s/>([01])(.*)\n(.*)>\1/.>\2\n\3.>/;ta;s/>([^$\n])/\1>/g;ta;s/>//g;p"	2
git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1) /'	4
(["'])(?:(?=(\\?))\2.)*?\1	1
^(?:(IN|THE|BUSH|COM|NET|ALL)\h*,?\h*(?!.*\1))+$	3
^(\d{3})(\.?)(\d{4})\2(\d{4})\2(\d{2})$	1
^(?!\s)(?!.*\s$)(?!.*?(\s)\1)(?=.*?[A-Z])(?=.*?[a-z]).+$	2
(?!.*?(\s)\1)	4
sed -n '/<ol>/,/<\/ol>/p; /<\/ol>/q' changes.html | sed -r 's/<li>(.*)<\/li>/\1/g;s/<.*//g'	2
(?<id_name>%{DATA}) - Static Text \k<id_name> %{GREEDYDATA:rest_of_line}	1
(?=(([A-Z]+-\d+-)[A-Z]+))\2	2
<([a-zA-Z0-9_]*)[a-zA-Z0-9_'"= ]*>[^<]*De 7e Hemel[^<]*<\/\1>	2
<([a-zA-Z0-9_]*)>[^<]*De 7e Hemel[^<]*<\/\1>	2
(space)\1	1
(\n.*?;(.*?);.*?;.*?;.*?;.+)(\n.*?;\2;.+)+	3
([a-z])([a-z])\2{1}\1{1}(?![^[]*])	2
([a-z])(?!\1)([a-z])\2\1(?![^[]*])	4
([a-zA-Z\d]).*\1	1
s/(^|\s)([A-Za-z])/\U\2/g	1
sed -E 's/^([A-Z])|[[:blank:]]+([A-Za-z])/\l\1\U\2/g'	1
sed -E 's/^([[:upper:]])|[[:blank:]]+([[:alpha:]])/\l\1\U\2/g'	1
(src|href)(\s*=\s*)(["'])(.+(?=\s).+)\3	2
sed -n 's/.*"nb": "\([^"]*\)".*/\1/p'	1
<img(?<prepend>[^>]+?)src=('|")?(?<src>[^\2>]+)[\2]?(?<append>[^>]*)>	2
(?i)(<img)(?=((?:[^>"']|"[^"]*"|'[^']*')*?\ssrc\s*=\s*(['"])/mycms/~/media/)([a-f0-9]{32})(\.ashx\3(?:"[\S\s]*?"|'[\S\s]*?'|[^>]*?)+>))\s+(?:"[\S\s]*?"|'[\S\s]*?'|[^>]*?)+>	4
(?i)(<a)(?=((?:[^>"']|"[^"]*"|'[^']*')*?\s)(href\s*=\s*(['"])/mycms/~/link\.aspx\?_id=([a-f0-9]{32})&amp;_z=z\4)((?:"[\S\s]*?"|'[\S\s]*?'|[^>]*?)+>))\s+(?:"[\S\s]*?"|'[\S\s]*?'|[^>]*?)+>	2
(?i)(<a)(?=((?:[^>"']|"[^"]*"|'[^']*')*?\shref\s*=\s*(['"])/mycms/~/link\.aspx\?_id=)([a-f0-9]{32})(&amp;_z=z\3(?:"[\S\s]*?"|'[\S\s]*?'|[^>]*?)+>))\s+(?:"[\S\s]*?"|'[\S\s]*?'|[^>]*?)+>	4
(?i)(<img)(?=((?:[^>"']|"[^"]*"|'[^']*')*?\s)(src\s*=\s*(['"])/mycms/~/media/([a-f0-9]{32})\.ashx\4)((?:"[\S\s]*?"|'[\S\s]*?'|[^>]*?)+>))\s+(?:"[\S\s]*?"|'[\S\s]*?'|[^>]*?)+>	2
find . -type f -exec sed -i.bak -E "s/\.`([0-9]+)/[\1]/g" {} \;	2
sed -re ':a;N;$!ba;s/[[:digit:]]+([^.])/\1/g;s/([^.])\n/\1/g' file.txt	1
".*([._])\\1{1,}.*"	1
grep -E "(\b[a-zA-Z0-9]{6,}\b)(.*)\1"	2
([aeiou])\1	1
(?i)<iframe(?=((?:[^>"']|"[^"]*"|'[^']*')*?\s(src\s*=\s*(['"])(?:(?!\3)[\S\s])*?soundcloud(?:(?!\3)[\S\s])*\3)(?:"[\S\s]*?"|'[\S\s]*?'|[^>]*?)+>))\1\s*</iframe\s*>	4
\b(\w+)\b(?=.*\1)	2
(\b(\w+)\b(?=.*\1)){3,}	4
"\1(?2(?3ae)(?4oe)(?5ue)(?6sz)(?7_))\8"	1
src=(["“])(.*?)\1	2
(?=.*([/.]).*\1)	4
^(?=.*([/.]).*\1)<your regex here>$	4
^(?=.*([/.]).*\1)(0[1-9]|[12][0-9]|3[01])[/.](0[1-9]|1[012])[/.](19|20)\d\d$	4
^(?:0[1-9]|[12][0-9]|3[01])(\/|\.)(?:0[1-9]|1[012])\1(19|20)\d\d$	1
(<([^>]+)>[^>]*?[ ]\w+?)\!([^>]*?<\/\2>)	2
sed -E ':A;s/(".*)\t(.*")/\1\n\2/;tA' TSV_Data_File	2
(?P<cc>([A-Za-z])\2*)0(?P=cc)	4
^((.)(?1)?\2|.)$	1
(\w)(?:(?R)|\w?)\1	1
^((.)(?:(?1)|.?)\2)$	1
^((\w)(?:(?1)|\w?)\2)$	1
^((.)(?1)\2|.?)$	1
^((.)(?1)*\2|.?)$	2
sed ´s/return self\._values\.has_key\(([^()]*)\)/mark1 \1 mark2/'	2
((["']).*?\2)	2
(\"')[^\1]*?\1	1
find . type f -exec sed -i "s/<pattern1>/$(find . -type f -exec sed -n 's/abcd\(pattern2\)efgh/\1/p' {} \;)/g" {} \;	4
find . type f -exec sed -i "s/<pattern1>/$(sed -n 's/abcd\(pattern2\)efgh/\1/p')/g" {} \;	4
sed -E 's/^(..:..:..).*length.*([0-9]+).*/\1 \2/' file	2
r'([a-z]+)\1+'	2
(?:\n<li.*name=(["'])(.*?)\1.*src=(['"])(.*?)\3.*?)	2
/<title.*?class=(['"])(.*?)\1 \/>(?:\n<li.*(?:name=(["']).*?\3.*|src=(['"]).*\4.*){2})+/g	2
sed -E 's/([^. ]*).*length ([^ ]*).*/\1 \2/' infile	2
printf '%s\n' "k|k|jill|hill|k" | sed -r 's/\b([[:alnum:]])(\||$)/-\1\2/g'	1
printf '%s\n' "k|k|jill|hill|k" | sed 's/\([|]\|^\)\([[:alnum:]]\)\([|]\|$\)/\1-\2\3/g'	1
^(?!.{0,2}(.).{0,2}\1)[imsU]{1,4}$	4
^(?!.*(.).*\1)[imsU]+$	4
.*(.).*\1	1
(\d+)(?=.*\1)	2
^(?:a(?=a*(\1?+b)))+\1$	4
(?=((?:a(?=a*(\2?+b)))+\2))	4
grep -E '^AND\s+([^=\s]*)\s*=\s*\1\b'	2
\/\*([a-zA-Z0-9]+)_START\*\/(.*?)\/\*\1_END\*	2
(([\s\S]*?)(production|public))(?P<app>\2)\g	2
\/\*([a-zA-Z0-9]+)_START\*\/(?=(.*?)\/\*\1_END\*)	2
(?!^.*([A-Z0-9])\1.*$)^[A-Z0-9]+$	4
\b(\d+)\b(?!.*\1\b)	2
Illegal/unsupported escape sequence near index 10 [^[/^(\d)\1+$/g]] ^	1
(.).*\1	1
\b(cat|mat)\b(?=.*\b\1\b)	2
(\1**) ***-**\2	4
(?!(\d)\1{3})	4
\b(?!(\d)\1{3})[13-9]{4}[1346-9][013-9]{5}\b	4
^(.*?)$\s+?^(?=.*^\1$)	2
echo "sec(name=test)"| sed -n 's/.*sec\(([^()]*)\).*/\1/p'	2
#([0-9]{5})\+#\1	1
(?!.*(.)\1{2})	4
(one|two|three|four).*(?!\1)(one|two|three|four)	1
(one|two|three|four).*(?!\1)(?-1)	1
(?<=(.))(?!\1)(?!$)	1
sed -i 's/\(<component-name \)directive \([^<]*<\/component-name>\)/<directive>\1\2<\/directive>/' *.html	1
^(?!(?:\s*$|.*(?:Niveau|stime)))(.*$)([\s\S]*?)(\1\s*)	2
( c\d{2}m\d{2} )(?![\s\S]*\1)	2
^(?=.{14,}0000$)[pP][a-zA-Z0-9]*(?:(?(1)\1|([- +]|%20)?)[a-zA-Z0-9]+)*$	2
(?(1)\1|([- +]|%20)?)	4
\shref=(["'])(.*?)\1	2
(?i)<(field|exclGroup).*name\s*=\s*"([a-z_]\w*)"[\s\S]*?<\/\1>	2
grep("([[:lower:]]).*\\1", c("Moro", "moro"), value=TRUE)	1
grep("([a-z]).*\\1", c("Moro", "moro"), value=TRUE)	1
(x)y[a-z](?<!\1)	1
'(\d+)\1+'	2
(\d)((?!\1)\d)	1
((\d)(?!\2)\d)\1	4
(["']).*?\1(*SKIP)(*FAIL)|\.	2
$ awk '{$0=gensub(/(.*)\//,"\\1|",$0)}1' file	4
(^\s+)(if\(.*)([\n]+\1(\s+.*)+)	2
.+echo\s|([\\?])\1+|[\\?]	1
sed -E "s/(ctx\._source\.meta=')([^']*)(')([^']*')/\1\2\\'\4/"	2
sed "s/\\(meta='[^']*\\)'\\([^']*'\\)/\\1\\\\'\\2/"	2
sed -r 's/(.*):.*/\1/	2
s/([^:]*):.*/\1/	2
sed -E 's/^(.{0,300}).*/\1/'	1
sed -n 's/<evar29>\(.*\)|\(.*\)<\/evar29>/<evar29>\1@@\2<\/evar29>/pg' test.txt	1
sed -i 's/<evar29>\(.*\)|\(.*\)<\/evar29>/<evar29>\1@@\2<\/evar29>/g' test.txt	1
(?<!(?P<happy>:\)))(?P=happy)	1
(?<happy>:\))(?<!\k<happy>{2,})(?!\k<happy>)	1
(*ANYCRLF)^(\*{1,3})([^\*]+?)\1$	2
AND (\w+)\s*=\s*\1	2
(.{3})(?=.*\1)	2
echo $url | perl -pe 's|^.*/branches/(.*?)/.*$|\1|'	2
sed 's|^.*/branches/\([^/]*\)\(/.*\)\?$|\1|'	1
s/(?:"([^,]*)")/\1/g	2
"(?:(NGN|USA|TWN|IND|VN)\h*,?\h*(?!.*\1))+"	3
([ab])\1{5}(?!\1)([ab])\2{5}(?!\2)[ab]{6}	4
sed -rz -i 's/^(deb .*\s+)^# deb-src/\1deb-src/gm' /etc/apt/sources.list	2
(.)\1+	1
sed 's/^[[:blank:]]\{3,\}\(809\)/\1/'	1
(?=(\w)\2{2})	1
<([^>]*)> +([^<]*) +<\/\1>	2
(["'])(.*?)(a)(.*?\1)	2
\b([^;]+)(?=.*;\1;);	2
(?<![^;])([^;]++;)(?=(?>[^;]*;)*?\1)	2
--mline-regex-PDB=/(^ATOM).*$[[:space:]](ATOM.*$[[:space:]])*/\1/a/{mgroup=1}{_advanceTo=2end}	2
(^[A-Z]+).*$\s(?!\1)	2
\b(?:([clagey])(?!\S*\1)){5}\b	2
sed 's/.*\(*-*-*\).*/\1/'	1
sed -E 's/(config.json\?raw)&amp;at=dev\b/\1/' file	1
"(?=(?P<group1>.+?Block B starts))(?P=group1)(?=(?P<group2>.+?END))(?P=group2)"	2
\b([A-Za-z0-9]+)\s+\1\b	2
([A-Za-z0-9]*) \1	2
\b(\w+)\s\1\b	2
'~(["']).*?\1(*SKIP)(*FAIL)| #.*~'	2
sed 's/.*MSISDN=\(.*\)/\1/'	1
sed -E 's/.*&MSISDN=([^&]+).*/\1/' file	2
(.)\1{2}	1
(.)\1\1	1
([[:alpha:]])\\1{2,}	1
(\d)\1\1[^\1]\1\1\1	1
^(\d)\1{2}(?!\1)\d\1{3}$	1
(\d)\1{2}	1
(\d)\1\1	1
([0|1]?[0-9]?[0-9])\\.\\1	1
<(a|em|")[^>]*>(.*?)(?:</\1>)	2
<([^>]+)>([^>]+)<\\\1>	2
s/\(\w*\)a\(\w*\)y$/\1o\2/g	1
re2 = /(\/.+)(?=.*\1)\1\1/	2
re1 = /((.+\/)+)\1\1/	2
sed -E 's/^\s*\S+\s+(\S+).*/\1/'	2
(\${1,2})[^]*?[^\\]\1|[^\$]+\1	1
(\${1,2})[^]*?[^\\]\1	1
(?!.*([A-Za-z0-9])\1{2})[A-Za-z0-9]{4}	4
sed -r 's/<link href="\/([^<]+).html" rel=/<link href="https:\/www.domain.com\/\1.html" rel=/' canon.html	2
sed -z 's/\([^.:]\)\n/\1 /g' ~/Desktop/bak2	1
"(\\w\\d)\\1"	1
^(?!.*\b(\w+)\b.*\b\1\b)(?:another|contact|all)(?:,(?:another|contact|all))*$	4
(?!.*\b(\w+)\b.*\b\1\b)	4
(?=(?P<section>Sections?\W+(\w+)(\(\w+\))?(, (\w+)(\(\w+\))?)*))(?P=section)(?! of)	2
(.)(?=\\1)	1
s/"\([^"]*\)/\1/g	1
sed -i '/[^#]/ s/\(^.*BBB.*$\)/#\ \1/' file	1
perl -pe 's/("com\.FitDegree\.).*?"/\1ThisIsIt"/' ../config.xml	1
sed -e 's/\(\"com\.FitDegree\.\)[^"]*/\1ThisIsIt/' ../config.xml	1
perl -i -pe 's/("com\.FitDegree\.).*?"/\1ThisIsIt"/' ../config.xml	1
sed -i -e 's/\(\"com\.FitDegree\.\)[^"]*/\1ThisIsIt/' ../config.xml	1
(?:([\d()+-])(?!\1+$)){6,20}	2
((?:([0-9()+\-])(?!\2{5})){6,20})	2
^(?:\(\d{3}\)|\d{3})(?: |([-.])?)\d{3}(?(1)\1|[ -.]?)\d{4}$	1
/-DartifactId=my-jarfile-([0-9.]+)(.*-Dversion=)<version>/-DartifactId=my-jarfile\2\1/g	2
var\s+(\w+)\s*=\s*\d+\s*;\s*\1\s*=\s*\d+\s*;	2
:%s/^[^_]*_\([^_]*\)_\(.*\)_.*$/\1, \2/g	1
sed -r 's/\b([0-9]{1})(\.|$)/00\1\2/g;s/\b([0-9]{2})(\.|$)/0\1\2/g;s/(([0-9]{3}\.|$){3})/\1.000/g'	1
(.+?)[^a-zA-Z\d].?\1.(.+?)[^a-zA-Z\d].?\1.\2.(.+?)[^a-zA-Z\d]	2
(\S+)\s*&&\s*\1\.\S+	2
cat test.js| tr -d '\n'  | grep -P '(\S+)\s*&&\s*\1\.\S+'	2
(\d)(?=\d\1)	1
(?=\$(\w+))((\$|\b)\1\b)*	3
(^\S+ )([^\n]*\n)\1([^\n]*\n)	2
\babc(\d+)_def((?!\1)\d{1,2})\b	2
\b([a-zA-Z])\1+\b	1
\b([A-Za-z])(?!\1)([A-Za-z])\2+\b	4
:%s/\v\n(\D)/ \1/g	1
tr -d '\v\n\r' < input.txt | sed 's/\([0-9]\{2\}\.[0-9]\{2\}\.[0-9]\{4\}\)/\n\1/g'	1
tr -d '\v\n\r' < input.txt | perl -pe 's/(\d{2}\.\d{2}\.\d{4})/\n\1/g'	1
([A-Z])\1	1
(x)[^\1]	1
(n)[^\1]	1
(n)(?!\1).	1
(d)(?!(\w+?)?\1(\w+?)?)	2
(n)(?!(\w+?)?\1(\w+?)?)	2
(\s(\d{3}PS)\s.*\s)\2\s	2
egrep '(.)\1{3}' fileName	1
(.)\1.*(.)\2.*(.)\3	1
(?:href)=("|').*?([\w.]+\.(?:css))\1	2
M-x replace-regexp <RET> \([a-z]\):\([0-9]\) <RET> \1\2 <RET>	1
^(?!.*(.).*\1)[AEIOU]+$	4
'([\s\-])\1?'	1
(?!\s)[0-9\.\1]{0,}	1
([^,]+)(,\1)+	3
^((?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z])(.{8,15})(?!.*(.)\1{2}))$	4
^(?=.{8,15}$)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z])(?!.*(.)\1{2}).+$	2
(\b\w+\b)(\s+\1)+	3
((\w;)+\w\n)(-{3,}\n)\1+	2
(?<!\S)(?!\S*(\S)\1{2}|\S*(?!\s)[_\d\W])\S+	2
(?!\S*(\S)\1{2}|\S*(?!\s)[_\d\W])	4
^(?:([a-z]+))([0-9a-z]+)(?=\1)	2
(([a-z])\2)	1
\b(([a-z])\2)([0-9a-z]+)(\1)\b	4
^(([a-z])\2)([0-9a-z]+)(\1)$	4
sed -nre 's/.*Array of.*\s(\S*)\s+in\s.*/\1/p'	2
sed 's/test="\([^"]*\)"/test="quiz \1"/'	1
sed -n -r 's/^>(\d+)/>seq_x\1/' file	2
\b(FF\S+)\b.*\K\1\b	2
sed -i 's/\(<keyStore.*>[\s\S]*<password.*>\)[^<>]*\(<\/password.*>\)/\1$WSO2_STORE_PASS\2/g' $WSO2_PATH/$1/repository/conf/broker.xml	1
$ echo "/abddc/bcqsdd/cdde/" | sed -E 's|(/)?[^/]+/|\1../|g'	1
#[(?!\1)((?:one|two))](.*?)[\/\1]#	2
(?:[^a]|^)(a)(?=\1+)	2
(?:5049|6219)([ -]?)\d{4}(?:\1\d{4}){2}	1
^(?:(?:([a-d])(?!.{0,2}\1))(?:([a-d])(?!.{0,1}\1))(?:([a-d])(?!\1))[a-d])+$	1
^(?:(?:([a-d])(?!.{0,2}\1))(?:([a-d])(?!.{0,1}\1|\2))(?:([a-d])(?!\1|\2|\3))[a-d])+$	4
(?<=\[\[)(.*)(?=\|)\|\1\]\]	2
\[\[(.*)\|\1\]\]	2
\[\[(.*?)\|\1\]\]	2
$ sed -nr 's/.*"auth": "([^"]+)"/\1/p' | base64 -d	2
<(.*?>)(.*)</\1	2
(?<=[\s"'])on\w+=(["']).*?\1	1
(##)?([^#]*)(\1)?	2
(##)?(.*)(\1)?	2
^(##)?(.*?)(\1)?\s*$	2
^(##)?(.*?)(\1)?$	2
<(.*?)(?:\s.+?>)(.*?)</\1[>]?	2
(\'|")location:\s*(?P<url>[^\1]+)\1	2
x=([12]) or x=[\1]	1
x=([12]) or x=(?!\1\b)[21]\b	1
x=([12]) or x=(?!\1)[21]	1
x=(\d+) or x=(?!\1)\d+	2
(\b(\S+\s+){1,10})\1.*MY	2
((\S+\s)+)(\S+\s){0,9}\1	2
\b\d{1,2}([-/]|\. ?)\d{1,2}\1\d{2}(?:\d{2})?\b|\b\d{4}-\d{2}-\d{2}\b	1
.*:(.*)\n.*\1	2
.*:\(.*\)\n.*\1	1
(?!\d*(\d)\1{4})	4
@"^[6-9](?!\\d*(\\d)\\1{4})\\d{9}$"	4
s/((^\* .*\n){2,})/LIST\n\1\nEND/gm;	1
%s/\\(.\*\\),\\(.\*\\)\n\1..../\1,\2/gc	1
last_modify_date=$(sed -rn "/<meta .*name=.lastmod./ s/.*content=.([0-9-]+).*/\1/p" "$i")	2
.*(.)\\1$	1
(.)\\1	1
\[MarshalAs\(UnmanagedType\.ByValArray,\sSizeConst\s=\s(\d+|[\w+.]+)\)\](?!\r?\n\[SizeConst\(SizeConst = \1\)\])	2
sed -E '1s/(\t?[^\t_]+)_([^\t]+)/\1#\2/g' infile	2
sed -i '/-- Grafana --/b; s/\("datasource": "\).*\(".*$\)/\1$GRAPHITEVOL\2/g' $DASHBOARDS	1
sed -E 's/([^,"])""/\1" "/g' file	1
sed -i.bak -E 's/([^,"])""/\1" "/g' file	1
(<h([1-6])> .*?) (\.) (.*? <\/h\2>)	2
\b\d{3}(\D)\d{2}\1\d{4}\b	1
^(\d)\1-\1{7}$	1
([. ])(?=\1)	1
([. ])(?=\1)|[^a-zA-Z. ]	1
(\d+\.\d+\.\d+\.\d+).*(\1)	2
.*:\(.*\)\n.*\1	1
Transferring( [0-9]*) of\1+ records.	2
Transferring ([0-9]+) of \1 records\.	2
sed -ie 's/\(\s*\)@media/\n\1@media/' estilos.less	1
(.)(.)\1	1
sed -E -i 's/(<!-- BEGIN FOOTER -->)(.|\n)*(<!--END FOOTER-->)/\1 <br>REPLACE<br> \3 /m'  file.html	1
sed -n -e 's/\(([0-9]*)\)\([0-9]*-\)\([0-9]*\)/First: \1 Second: \2 Third: \3/p'	2
((?:<br \/>\s*){2})[^\.\n]*\.\s*\1?(.*?)$	2
^(\w)\1*	1
^(\w)\1*	1
^(?!.*?(.).*\1)[rat]{3}$	4
([rat]).*\1	1
.*?(.).*\1	1
[^\w\s]|(.)(?=\1(?<![^o]oo|[^e]ee))	1
^(Word)(?:(?!\1).)*\1?(?:(?!\1).)*$	1
sed -nr '/(Word).*(\1).*(\1)/d; /^(Word)/p' filename.txt | wc -l	1
grep -Ev '(Word).*(\1).*(\1)' filename.txt | grep -c "^Word"	1
^((\d+ \d+ \d+\w+.(?:\s+\w+)\1{0,1}$))	4
sed -E -i 's/([a-z])([1-9])/\1\.\2/' file.txt	1
Type.*<.*>\s*(\w*)[\s\S]*?\K(?<!\+\+)\1(?!->|\+\+)	2
(\\w)(\\1{N})\\1*	1
(.)\1*	1
/<(a|h[1-6])[^>]*>(?:[a-zA-Z0-9\s\'\-\.,]|(?:<(.*)>.*<\/\1>))*<\/(a|h[1-6])>(*SKIP)(*FAIL)|\b(Find Me)\b(?=[^>]*(?:<|$))/ig	2
"(?=.{7}$)(\\d)\\1*+(\\d)(\\1|\\2)*"	3
(\d)\1*(?!\1)(\d)	1
.*?(word1 word2 word3).*?\/\/\/.*?(?(1)\1)	1
s/(\w+\s*=\s*)(\d+\.\.\d+:\d+)/\1"\2"/	2
sed '/\\addplot3\[%/{N;s/\(.*\)\n.*\(},.*\)/\1 surf, z buffer=sort, colormap={my}{ rgb255=(20,20,20) rgb255=(50,50,50) rgb255=(250,250,250) \2/g}' file	1
"([a-zA-Z0-9])\\1{1,}"	1
regex statement = ^((?=A)A(B?)|(?=B)B)(?!.*(\w)\1)$	2
$ cat file-containing-pattern.txt | perl -ne "print $1 if s/.*\s(.*)(\[)/\1/"	2
[a-z]*([aeiou])[a-z]*(?!\1)[aeiou][a-z]*	1
(?=\w*([aeiou])\w*(?!\1)[aeiou])	4
\b(?=\w*([aeiou])\w*(?!\1)[aeiou])\w+	4
sed: 1: "s/([0-9])-([0-9])/\1\2/g": \1 not defined in the RE	1
sed 's/\([0-9]\)-\([0-9]\)/\1\2/g' $date	1
\b([a-zA-Z]+) is \1\b	2
([a-zA-Z]+) is \1	2
^([a-zA-Z]+) is \1$	2
^([a-zA-Z]+) is \1\z	2
:%s/^\d\+\s\+\([\w\.-]\+\)\s\+.*/\1/g	1
:%s/\d\+\s\+\(\[\\w\.-\]\+\)\s\+.*/\1/g	1
:%s/\v^\d+\s+([\w\.-]+)\s+.*/\1/g	2
:%s/\d\+\s\+\([\\w\.-]\+\)\s\+.*/\1/g	1
:%s/\v^\d+\s+([a-zA-z\.-]+)\s+.*/\1/g	2
:%s/\d\+\s\+\([\w\.-]\+\)\s\+.*/\1/g	1
:%s/^\d\+\s\+\([a-zA-Z\.-]\+\)\s\+.*/\1/g	1
^(?<pool>([A-Z]))\k<pool>{0,2}(?<number>(100|[1-9]\d?))$	1
^(?<pool>(?<letter>[A-Z])\k<letter>{0,2})(?<number>(100|[1-9]\d?))$	1
\b(([A-Z])\2{0,2}(?:100|[1-9]\d?))\b	1
^(?<pool>([A-Z])\2{0,2})(?<number>(100|[1-9]\d?))$	1
\b(?<pool>([A-Z])\1{0,2})(?<number>(\d{1,2}(?!\d)|100))\b	4
(?<named>(\d)a)\1	1
^(?<pool>([A-Z])\1{0,2})(?<number>(100|[1-9]\d?))$	4
(?<named>(\d)a)\2	1
^\s*\w*\S*(?:(#)(?!\1))\s?$	1
sed 's/.*\(\<[0-9]\+\).*/\1/'	1
echo "32 ABSTREET 5566 BC" | sed 's/.*\(\<[0-9]\+\).*/\1/'	1
s/\(.*\)\/.*/\1/	1
echo $0 | sed 's/\(.*\)\/.*/\1/'	1
sed 's/\(.*\)\/.*/\1/'	1
(\W|^)(.+)\s\2	2
(.+)\s\1	2
(\w+\s\w.*)\s.*\1	2
regex re("(a)xxx(?=\\1)");	1
src=(['"])(?:(?!\1)[\S\s])*\1	1
(["'])((?:\\\1|.)*?)\1	2
(["'])(?:\\\1|.)*?\1	1
"<s:message(?=\\s)(?=(?:[^>\"']|\"[^\"]*\"|'[^']*')*?\\scode\\s*=\\s*(?:(['\"])([\\S\\s]*?)\\1))\\s+(?:\"[\\S\\s]*?\"|'[\\S\\s]*?'|[^>]*?)+/>"	2
((?<![\\])['"])((?:.(?!(?<![\\])\1))*.?)\1	3
sed.exe -i "/^ *author *=/ s/(\{|and )([A-Za-z]{2,}) ([A-Za-z]\.[A-Za-z]\.)\}/\1\3 \2/g" file.bib	1
^[0-9]{4}([- /.])(((0[13578]|(10|12))\1(0[1-9]|[1-2][0-9]|3[0-1]))|(02\1(0[1-9]|[1-2][0-9]))|((0[469]|11)\1(0[1-9]|[1-2][0-9]|30)))$	1
(.)+\1	1
(.)+\1	1
(.)+?\1	1
ng-\w+=("|').*?\1	1
sed -e ' /\$\$/{s/\$\$/{\$latex }/;:a;N;/\$\$/!ba;s/\$\$/{\$}/};s/^\(\$\)\(.*\)\(\$\)$/{\$latex }\2{\$}/' test.html	1
sed -e 's/\$\([^$]*\)\$/$\\latex \1$/g'	1
sed -e 's/\$\([^$]*\)\$/$latex \1$/g'	1
(\w+\s\w.*)\s.*\1	2
REGEXP '\\b(\\w+\\s+\\w+)\\b.*\\b\\1\\b'	2
str.replaceAll("(?:(\\w)(?:\\1\\1)+|(\\w)\\2+)(?!\\1|\\2)", "$1");	1
(?:(\\w)(?:\\1\\1)+|(\\w)\\2+)(?!\\1|\\2)	1
(?:(.)\\1)+	1
^([A-Za-z0-9])\1+$	1
\s\d{1,2}(\.|\-)\d{1,2}\1\d{4}	1
s/^\(ENGINE.*\)DEFAULT CHARSET=utf8mb4$/\1/g	1
s/^\(ENGINE.*\)DEFAULT CHARSET=utf8mb4/\1/g	1
(?<=(['"])\b)(?:(?!\1|\\).|\\.)*(?=\1)	1
(['"])(?:(?!\1|\\).|\\.)*\1	1
cat grep2 | grep '"is_verified": true' -B3 | grep '"username":' | sed 's/ *"username": "\(.*\)",/\1/'	1
(\w++)-?(?=.*\b\1\b)	2
sed 's/"\([^"]*\),\([^"]*\)"/\1\2/g' file > file2	1
echo test:abc.io/gng-cp:1.34.2-of1231 | sed 's/\([^test:]*:\).*/\11.333.555/g'	1
sed 's/^\(test:[^:]*:\).*$/\11.333.555/' abc.txt	1
(?|([XmMtTaiWw])|(Jx|xJ)|([1-9][0-9]*))+(?!\1)	2
echo $(cat yourJsonFilePath) | tr "," "\n" | grep '"is_verified": true' -B3 | grep '"username"' | sed -r 's/"username"://' | sed -e 's/"\(.*\)"/\1/'	1
perl -i.bak -pe "s/^^( *|\t*)func\s(\w+)func\s(\w+)/\1#Mark \2\n\1func \2/g" code	2
s/^( *|\t*)func\s(\w+)func\s(\w+)/\1#Mark \2\n\1func \2/g	2
([0-9])\1{2,}	1
^(x*)(x[^x]+x)(\1)$	2
#TEST_ENV_([^=]*)=(\"?)([^\"]*)\2	2
([^.]+)(.[ ]*\1)+	3
^(?!.*(.).*\1.*\1.*\1).*	4
s.matches("(?!.*?(.).*?\\1.*?\\1.*?\\1)")	4
s.matches("(?!.*(.).*\\1.*\\1.*\\1)")	4
^(?!.*?(.).*?\1.*?\1.*?\1).*	4
(?!.*(.).*\1.*\1.*\1)	4
(\d+\.)(\1)+	3
(^|\.)(\d+)(\.(\2))+	3
([^.]*)([.]\1)+	3
([^.]+)(.[ ]*\1)+	3
regexp_replace(val,'([^.]*)([.]\1)+([.]|$)','\1\3')	4
(?!.*?(.).*?\1)	4
^(?!.*?(.).*?\1)[a-z]*$	4
r'(\b\w+)\s+\1'	2
sed -i 's|\(<logos>\)\(.+\)\(</logos>\)|\1\3|gi' $filename	1
(<)(h1|h3)(.*?)(\2)(>)	2
select REGEXP_REPLACE(s,'(func_.)\((func_.\(.*?\))\)','\1_\2') from t ;	4
String regex = "\\b(\\p{IsAlphabetic}+)(\\s+\\1\\b)+";	3
(["'])(?:(?=(\\?))\2.)*?\1	1
((?=(\\?))\2.)	1
a\s+(?:[^>]*?\s+)?href=(["'])(.*?)\1	2
sed -e '{ y/àáÀÁèéÈÉìíÌÍòóÒÓùúÙÚ/AAAAEEEEIIIIOOOOUUUU/; s/=\([AEIOU]\)/\1/g; }'	1
s/\(.*\)men\(.*\)/ not just the \1men\2, but the \1women\2 and \1children\2 too /	1
sed -r -n '/vendorCheck/{s/(.{32}).*changed: \"(.*)\"/\1 \2/; p;}' $( ls -1 $INPUTDIR | egrep '^[0-9]+_[0-9]+$' ) >> $OUTPUTFILE	2
sed -r 's/[0-9]+(([sS]([^Tt]|$)|[Tt]([^Hh]|$)|[RNrn]([^Dd]|$))|[^RNSTrnst0-9]|$)/\1/g' file	1
sed -r 's/^/\n/;:a;s/\n([^0-9]+)/\1\n/;ta;s/\n([0-9]*(1st|2nd|3rd|[4-90]th))/\1\n/I;ta;s/\n[0-9]+/\n/;ta;s/\n//' file	2
(\d+)( \1)+	3
(\b\d+)( \1\b)+	3
echo "foobarbaz barfoobaz barbazfoo barbaz" | sed 's/\([^ ]*foo[^ ]*\)/qux\1/g'	1
\{\*(\w+)[\s\S]*?\*\/\1\}	2
^\d{2}([-]?)(\d{2})\1\d{2}\1\d{2}$	1
^(\d{2})([-]?)\1\2\1\2\1$	1
sed -r 's/(tvg-name=")[^"]*(".*)tvg-chno(.*,([^,]*))$/\1\4\2channelid\3/' file	2
:%s/(\w+)(.*\s+)(\w+)$/\3\2\1/	2
:%s/\(\w\+\)\(.*\s\+\)\(\w\+\)$/\3\2\1/	1
:%s/\v(\w+)(.*\s+)(\w+)$/\3\2\1/	2
<!--Q(\d)-->\n\\n(.*)\\n\n<!--Q\1END-->	2
(?<=<!--([A-Z]\d)-->)[\s\S]*?(?=<!--\1END-->)	1
<!--([A-Z]\d+)-->([\s\S]*?)<!--\1END-->	2
sed -e 's/<?\([^=p]\)/<?php\1/g' -e 's/<?$/<?php/g'	1
(?:(?:(?!\1)()|\1(?:S))(?:(?!\2)()(?:A)|(?!\3)()(?:B)|(?!\4)()(?:C)|(?!\5)()(?:D))){4}	4
(?:(?!\1)()|\1 )	4
(?:(?:(?!\1)()|\1(?:S))(?:(?!\2)()(?:A)|(?!\3)()(?:B))){2}	4
(?:(?:(?!\1)()|\1 )(?:(?!\2)()fat|(?!\3)()cat)){2}	4
(?:(?!\1)()(?:A)|(?!\2)()(?:B)|(?!\3)()(?:C)){3}	4
(?:(?!\1)()(?:A)|(?!\2)()(?:B)){2}	4
(?:(?:(?!\1)()|\1(?:S))(?:(?!\2)()(?:A)|(?!\3)()(?:B)|(?!\4)()(?:C))){3}	4
(?:(?!\1)()fat|(?!\2)()cat){2}	4
(?:(?!\1)()(?:A)|(?!\2)()(?:B)|(?!\3)()(?:C)|(?!\4)()(?:D)){4}	4
(?<=,|^)([()\w\s]+),\s(.*?)((?: and)?(?=\1))	2
"(?<=(.))(?!\\1)"	1
<([^>]+)>([^<]*?)<\/\1>\s(\w*);?	2
(\b[^,]+)[, ]+(?=.*\1)	2
(\b\w+\b)[^\w\r\n]+(?=.*\1)	2
(templateUrl:\s*)(['"])([^\2]+?\.html\2)	2
(templateUrl:\s*)('|")([^\2]+?\.html\2)	2
regexp_replace(name,'\D+\d+(\D+)','\1')	4
\\(?\d{3}\\)?([\-\s\.])?\d{3}\1?\d{4}	1
[a-z]+(?=([^'"]*(["'])[^"']*\2)*[^"']*$)	4
[a-z]+(?=([^"'\\]*(\\.|(["'])([^"'\\]*\\.)*[^"'\\]*\3))*[^"']*$)	4
(['"]).*?\1	1
((['"])(?>[^'"\\]++|\\.|(?1))*+\2)	2
^(["'])(.*)(\1)$	2
(?:([<>])(?!.*\1))?	2
sed -E 's/([^@]+)@[^[:space:]]*[[:space:]]*/\1,/g;s/,$//'  Input_file	2
sed 's/\([^@][^@]*\)@[^[:space:]]*[[:space:]]*/\1,/g'	1
echo 'get \tag-start Snooby ~p snoopy \tag-end please' | sed 's/.*tag-start \(.*?\) ~p.*/\1/'	1
echo "get \tag-start Snooby ~p snoopy \tag-end please" |sed 's/.*tag-start \(.*\) ~p.*/\1/'	1
persName>\(.*\)#<persName>\1\2<	1
$ sed -e "/group='[a-z]/b e" -e "s/group='' *//" -e "s/,\([a-z]*\)$/ group='\1', /" -e ':e' input.txt	1
TIME_REGEX = "([0-1][0-9]|2[0-3])(?P<sep>[:\-\_]?)([0-5][0-9])(?P=sep)([0-5][0-9])"	1
([a-z])\\1{2}	1
^([-.])\1*$	1
sed -i '' -e 's/{filedir_9}\([-a-z_0-9]\{2,\}\)\.jpg/{filedir_7}\1/g'	1
sed -E 's@^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}\/)32$@\1128@g'	1
('|")(((?!\1).)*).	3
%s/parser(\(.\+\));/\1;/	1
<(footer)\s*.*\>[^<]*<\/\1>\r*\n*	1
\b(\w+)\b(?=.*\b\1\b)	2
\5\b<\b(?=>)\1	1
<(.+)( .+)?>(.*)<\/\1>	2
sed -r 's/^0*([0-9]+)\.0*([0-9]+)\.0*([0-9]+)\.0*([0-9]+)$/\1.\2.\3.\4/'	2
sed -r 's/^0*([0-9]+)\.0*([0-9]+)\.0*([0-9]+)\.0*([0-9]+)-0*([0-9]+)\.0*([0-9]+)\.0*([0-9]+)\.0*([0-9]+),...,(.*)$/\9:\1.\2.\3.\4-\5.\6.\7.\8/'	2
^(?=.*?1)(?=.*?2)(?=.*?3)(?=.*?4)(?=.*?5)(?!.*?([1-5]).*?\1).*	2
sed -En 's/^([^" ]+ |"[^"]*" ){12}([^" ]+|"[^"]*").*$/\2/p' file	2
(.*)\1+	2
\b(.+)\1+\b	2
sed -nr 's/,([0-9]{5}),[^,]*$/\1/p' file.csv	1
sed -nr 's/.*,([0-9]{5}),[^,]*$/\1/p' file.csv	1
sed 's/^[^0-9]*\([0-9][0-9]*\).*/\1/'	1
sed -E 's/^[^0-9]*([0-9]+).*/\1/'	2
^((.)(?!\2\2))*$	3
^(?:(.)(?!\1{2,}))*$	3
^(?:(.)(?!\1\1))+$	3
^( ?(?!sa|sd|ss|SA|SD|SS)[A-Za-z]{2})[1][7][9][0]\1|[8][8][8][8]\1 $	1
(.)\1{3}	1
^(?:https:\/\/open\.spotify\.com|spotify)([\/:])user\1([^\/]+)\1playlist\1([a-z0-9]+)	2
/^<(first|last|state)>([^<]+)<\/\1>$/mi	2
cat dicentry1.txt | sed -e 's/MEANING\(.*\)IDIOM/\1/')	1
cat anydicentry.txt | sed -e 's/MEANING\(.*\)\(IDIOM|SYNONYM\)/\1/')	1
(.)\1*	1
RELEVANT=(echo "$VAR" | sed -e 's/.*Title1\(.*\)Title2.*/\1/g'))	1
((?<![\\])['"])((?:.(?!(?<![\\])\1))*.?)\1	3
([:punct:])\1+	1
(\b\w+(?:\.\w+)*)\s*&&\s*(\1\.\w+)\s*&&\s*\2\.\w+	4
(\d+-)\1\d{4}	2
In fun(): \1	1
\w+\n\w+\t(\d+)(\n\w+\t\1){2,}	2
(?<key>import|export)\s+(?:(?<alias>[\w,{}\s\*]+)\s+from)?\s*(?:(["'])?(?<ref>[@\w\s\\\/.-]+)\3?)\s*;	2
[+\-]*([x/.])\1*	1
&VAR1\s*=\s*(['"])?1{4}\1;?	1
<(\w+)[\s\w\d=\-+\.]*>(.*)</\1\s*>	2
(["'])(?:(?=(\\?))\2.)*?\1	1
echo "this/cluster/data/mydata.data?x-username=me" | sed 's,.*data/\(.*\)?x.*,\1,'	1
<(div|span)></\1>	1
sed -r 's/^([^:]*:){2}([^:]*):(.*):.*$/\2 \3/' file	2
"title":\s*"(\\"|(?!\\"))(.*)\1"	2
:%s/llr\([0-9]\)/tmpLLR\[\1\]/gc	1
:%s/\vllr(\d)/tmpLLR\[\1\]/gc	1
([^ymd]+\b)(?!.*\1\b)	2
([^ymd])(?!.*\1)	2
(.+) \1	2
(.+) (.+) \2	2
(.+) (.+) \1	2
(\b\w+\b)(?=\b.*\1\b)	2
([0-9a-f])\2	1
#([0-9a-f])\1([0-9a-f])\2([0-9a-f])\3	1
([0-9a-f])\3	1
#([\dA-F])\1([\dA-F])\2([\dA-F])\3\b	1
(['"`])(?:(?!\1)[\s\S])+\1	1
(['"`]).*?\1	1
([a-z0-9])\1{3,}	1
(?!.*([a-z]{2}).*\1)	4
^(?!.*([a-z]{2}).*\1)(fr|sa|su|mo|tu|we|th)?(?:,(?:fr|sa|su|mo|tu|we|th)){0,5}$	4
(.)[^\1]\1	1
(.)(?!\1).\1	1
(?=\<)(?:(?=.*?\<(?!.*?\1)(.*\>(?!.*\2).*))(?=.*?\>(?!.*?\2)(.*)).)+?.*?(?=\1)[^\<]*(?=\2$)	4
(\b\S.+\b)(?=.*\1)	2
(?<decimal)\d+(?<=\1)	1
^(?|(\d{1,3}(?=([.,\h])?)(?:\2\d{3})*)(?:(?!\2)[.,](\d*))|(\d+)()(?:[.,](\d*))?|()()[.,](\d+))$	4
^(\d{0,3}(?=([.,](?!\d+$)| |))(?:\2\d{3})*)(?:[,.](\d*))?$	2
^(\d{0,3}(?=([ .,]|))(?:\2\d{3})*)(?:[,.](\d*))?$	2
(\d)\1{8}	1
(?!.*\b(\d+)\b.*\b\1\b)	4
(\S*?)(.)\2{2,}(\S*)	2
(\S*?)(.)\2{2,}(\w*)	2
^(.+) >> (.+)(\n\1.+)+	3
^((\S++).+)(\r?\n\2 .+)+	3
^((.+) >>.+)(\r?\n\2 .+)+	3
perl -0777 -lpe 's/^(repeat[ ]+\d+)\s+/\1\t/mg; s/^[ ]*>/\t\t>/mg;' file	2
([0-9]+(\.?[0-9]{1,8})?)+[-+*\/](\1)	2
(?:([a-zA-Z\d])(?!.*\1)){10}	2
^[0-9]{1,2}(?=([,|])|$)(?:\1[0-9]{1,2})*$	1
String pat = "^[0-9]{1,2}(?=([,|])|$)(?:\\1[0-9]{1,2})*$";	1
s/(.)\1*$//	1
s/(.)\1+$//	1
sed -r 's#(.*\([0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}\)).*#\1#' Input_File	2
/(.*),\s{0,}/\1, \&ThisClass::/	2
sed -i -re '/^BEGIN_MESSAGE_MAP/,/^END_MESSAGE_MAP/{/(BEGIN_MESSAGE_MAP|\/\/)/!s/(.*),\s{0,}/\1, \&ThisClass::/;}' *.cpp	2
Map(gsub,"([[:punct:]])","\\\\\\1",dat)	4
echo "/gpx/trk/name=MyTrack1" | sed 's/\(.*=\)\(.*\)/\2/'	1
(.)\3\3+	1
(.)(?!\2)	4
(?:(.)(?!\2)|(.)\3\3+)+	4
(["'])((?:\\\1|(?:(?!\1)).)*)(\1)	2
(["'])(?:\\\1|[^\1]+)*\1	1
echo "0x4e46436b|0x6669746f|0x74616369|0x416e6f69|0x624f796e|0x7463656a"|perl -pe 's/0x([\da-f]{2}){4}/0x\4\3\2\1/g'	1
echo "123,456,789" | sed 's/\(\d*\)\(,\d*\)/\1,a/g'	1
sed -e 's/"requestId":"\([0-9]\+\)"/"requestId":\1/g' test.json	1
sed -e 's/"requestId":"\([0-9]*\)"/"requestId":\1/g' test.json	1
sed -e 's/\("requestId":\)"\([0-9]*\)"/\1\2/g' test.json	1
<img(\s*(?!alt)([\w\-])+=([\"\'])[^\"\']+\3)*\s*\/?>	3
```.*?```|`.*?`|(<img(?!.*?alt=(['\"]).*?\2)[^>]*)(>)	4
s/(\d{5})/\r\n\1/gs	1
s/(?<=\D)(\d{5})(?=\D|$)/\n\1/g	1
sed -E 's/(;)(include_path \= \")(((?!\").)*)(\")/\2\3:/var/www/html/\5/g' FILENAME	2
sed -E 's|;(include_path = ")([^"]*)(")|\1\2:/var/www/html/\3|g' FILENAME	2
echo 1234.556 | sed 's/\([0-9]\)\([0-9]\)\([0-9]\)\([0-9]\)\(\.[0-9]*\)/\1,\2\3\4\5/'	1
(?i).*?(\b\w+\b).*?(\b\w+\b).*?\|\|(?:.*\b\1\b.*\b\2\b.*|.*\b\2\b.*\b\1\b.*)	2
([A-Za-z]+)(.*?)(?=\1)	2
sed "s/\([0-9]+\) insertion/\1/"	1
^(?:(.)\1\1.*|.{3}(.)\2\2.*)$	1
^(?:...)?(.)\1\1.*\r?\n?	1
(.)\1\1	1
(\d)(?!\1)\d	1
^(?:(\d)(?!\d*\g{-1}))+$	4
(?<first>\d)(?!\k<first>)\d	1
echo "aaa1-bbb2-ccc3-dddd4-ffff5-11.22.33-VERS" | sed -E 's#((^[[:alnum:]]+.*)-(\d+\.\d+\.\d+-VERS|\d+\.\d+\.\d+))#\3 \2#p'	2
sed -E 's/([[:alnum:]]+.*)-([0-9]+\.[0-9]+\.[0-9]+|[0-9]+\.[0-9]+\.[0-9]+-VERS)/\1 \2/'	2
echo "aaa1-bbb2-ccc3-dddd4-ffff5-11.22.33-VERS" | sed -E 's#((^[[:alnum:]]+.*)-([0-9]+\.[0-9]+\.[0-9]+-VERS|[0-9]+\.[0-9]+\.[0-9]+))#\3 \2#g'	2
sed -r 'h;s/^(([[:alnum:]]+-?)+)-(([[:digit:]]+\.?){3}(-VERS)?)/group1="\1"/p;g;s//group3="\3"/p;d' file	2
sed -r 'h;s/^(.*)-([0-9].*)/group1="\1"/p;g;s//group2="\2"/p;d' file	2
sed 's/\(.*tvg-name=\)\("[^"]*"\)/\2\1\2/'	1
sed 'N;s/\n//;s/\(.*tvg-name=\)\("[^"]*"\)/\2\1\2/' filename | sort | sed 's/^"[^"]*"//;h;s/http.*//;p;g;s/.*http/http/'	1
sed 'N;s/^\(.*\)\n/\1\1/;2h;2!H;$!d;x;s/.*/echo '\''&'\'' | sort -k3,3/e;s/^\(.*\)\1/\1\n/Mg' file	1
sed -E 's/(^\+.*)( $)/\1/'	1
(.)(?<!\1.*)	2
(.)\1{1,}	1
(?<sep>\W{40,}).*?(\k<sep>)	1
s/.* \(.*\)% .*/\1/	1
sed -n '/ .*% /{s/.* \(.*\)% .*/\1/;p;}' input.txt | sed ':a;N;$!ba;s/\n/,/g'	1
sed -n '/ .*% /{s/.* \(.*\)% .*/\1/;H;};${g;s/\n/,/g;s/,//;p;}' input.txt	1
sed -r 's/.*_(.+yyy)_.*:/\1 /':	2
sed 's/\([^_]*\)_\([^_]*\)_\(.*yyy\).*/\3/'  Input_file	1
echo $value | sed -e 's/.*service.*vhost:\s\?\(\S*\).*/\1/';	1
echo "$value" | sed -nE '/^service:$/,$!b; s/^\s+vhost: (\S+)/\1/; T; p; q'	2
s/^\s+vhost: (\S+)/\1/	2
sed -r 's/ +/ /g;/\n/!s/^((\S+)\s*[^,]*),/\1\n\2/;P;D' file	2
git branch -vv |  sed -r  's|\*?(\w+).+|\1|'	2
sed -r 's|\*?\s*(\w+).+|\1|'	2
^([A-Z])\d+(?:\R\1\d+)*	1
([A-Z])\d\n\1\d\n\1\d	1
(\S+)(\w)\1{2,}(\S+)	2
([a-zA-Z])\1{2,}(.*$)	2
sed "s/.*(\(.*\))/\1/"	2
^(?P<first>\d+)\.(?P<second>\1)$	2
(?P<first>\d+)\.(?P<second>\1)	2
\b(?P<first>\d+)\.(?P<second>(?P=first))\b	2
(?P<first>\d+)\.(?P<second>(?P=first))	2
.*?(\w+?)\sare\sgood.*?(\w+?)\sare\sgood.*(I\swant\s(\1|\2)).*(I\swant\s(\1|\2))	2
awk '{ print gensub(/([a-zA-Z])( )([a-zA-Z])/, "\\1~\\3", "g", $0) }' cou.data | sed -r 's/ +/:/g; s/~/ /g'	4
s/ +([0-9])/:\1/g	1
s/([0-9]) +/\1:/g	1
ls -1|sed -r 's/.*([0-9]{14}).*/\1 &/' f|sort -n|sed 's/^[0-9]* //'	1
(").*?\1(*SKIP)(*FAIL)|\$\w+\]?\[(?!\w*\(|\w*:)(?=[^\]]*[a-z])(\K[a-zA-Z_]+[\w]+)	2
`^(?=.*?[a-zA-Z])(?=.*?[0-9])((.)\2{0,4}(?!\2)).{6,15}$`	2
System.out.println(input.replaceAll("(?i)\\b(\\w+)(\\s+\\1\\b)+", "$1"));	3
^(?<bracket>\()?\d+(?(\k<bracket>)\))$	1
$ echo "name=hello 123" | sed 's/.*name=\(.*\)\s.*/\1/'	1
^(?!.*(.).*\1)\d{3}$	4
^(?!.*(.).*\1)\d{3}$	4
^(\d)((?!\1)\d)(?!\1|\2)\d$	4
sed -E 's/^[P]{0,1}[0-9]{0,4}[_\s]{0,2}(.*$)/\\1/g'	2
^[a-zA-Z0-9](?!.*(.)\1{2})(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^A-Za-z0-9]).{6,48}[a-zA-Z0-9]$	4
(?!.*(.)\1)	4
^(?!.*(.)\1)(?=.*\d)(?=.*(\W|_))(?=.*[a-z])(?=.*[A-Z])[^\W_].{6,48}[^\W_]$	4
\(?([0-9]{3})\)?([ .-]?)([0-9]{3})\2([0-9]{4})	1
^(?:[a-zA-Z0-9]|([._])(?!\1)){3,28}$	1
<img[^>]*?\ssrc=(["'])([^\1]*?)\1	2
perl -lpe 's/([0-9])\s/\1/' <(echo 'Apples 2 Green 3 Red \nApples 5 Yellow 4 Rotten')	1
^(?:\d{8}(?:\d{2}(?:\d{2})?)?|\(\+?\d{2,3}\)\s?(?:\d{4}[\s*.-]?\d{4}|\d{3}[\s*.-]?\d{3}|\d{2}([\s*.-]?)\d{2}\1\d{2}(?:\1\d{2})?))$	2
\d{2}([\s*.-]?)\d{2}\1\d{2}(?:\1\d{2})?	2
(?<q>'|")([\w ]+)(\k<q>)	2
\b(link)\b(?=.*\b\1\b)	2
^(import[^\S\r\n].+?[^\S\r\n]from[^\S\r\n]*(["']))((?:(?!(?:\.js)?\2)[\S\s])+)(\2\s*;)	2
sed -r "s@msg=([A-Z0-9]*)\$@msg=$(xxd -r -p <<< \1)@"	2
sed -r "s/.*msg=([A-Z0-9]*).*/xxd -r -p <<< \1/e" input	2
\b(\w+)\b.*?\1	2
(?<=\b| )([^ ]+)(?= |$).+(\1)	2
(.+\w)(?=\1+)/gu	2
^([a-z0-9]{2,}).*(\1)$/gumi	1
^([a-z0-9]{1,}).*(\1)$/gumi	1
^(\d)\d*(?!\1)$	1
^(\d)(?!\d*\1$)\d*$	2
(a)?b\1	1
/(['"])(https?:\/\/[^'"]+)\1/	2
(<\?XSL PageEnd _[[:alnum:]]+\?>)(?s:.*)\1	2
sed -r 's/(^IPADDR=[0-9.]+)([0-9]$)/\17/g' file	2
(?=(^<\?XSL PageEnd _\d+\?>$))(?<=\1[\s\S]+)\1	2
echo 'select-value'|sed -r 's/(-)(\w)/\U\2/g'	1
echo 'select-value'|sed -r 's/(-)(\w)/\%U\2/g'	1
echo 'select-value'|/bin/sed -r 's/(-)(\w)/\U\2/g'	1
(?P<opentag>((?P<oc>(?<!['])<)(?P<tag>\S)\s*(?P<attr>.*?)(?P<cc>>(?![']))))(?P<inner>.*?)(?P<closetag>(?P=oc)\/(?P=tag)(?P=cc))	2
/s/r/<li>(.*?)(?= \(<) \(<a href=\"(.*?(?=\"))\">link<\/a>\)<\/li>/• \1 \2/	2
sed -nr 's/\./#/g;:a;/#/!{p;bb};s/#([^#]+)$/.\1/;h;s/.*#//p;g;ta;:b' subdomains.txt	2
<u\s[^>]*([^\" >]*?)\\1[^>]*>(.*)<\/u>	2
cat test.log | sed -e 's/^\(.*\)\[ParOldGen.*secs\]\(.*\)$/\1\2/'	1
sed -e 's/^\(.*\)\[ParOldGen.*secs\]\(.*\)$/\1\2/' test.log	1
^[À-ÿA-Za-z]+(?:[À-ÿA-Za-z]+|([-' ])(?!\1))*	3
(.)\\1{1,}	1
^[0-9A-Fa-f]{2}(?=([:-]))(?:\1[0-9A-Fa-f]{2}){5}$	1
^([0-9A-Fa-f]{2})(?=([:-]))(?:\2(?1)){5}$	1
'~^([0-9A-F]{2})(?=([:-]))(?:\2(?1)){5}$~i'	1
(\d+)(?:_)(?![\s\S]*\1)	2
sed -E 's|^Link[\s]*([a-zA-Z\/\-]*)[\s]*([a-zA-Z\/\-]*)$|"\2" : "\1"|' ./backward	2
sed -E 's|^Link\s*([a-zA-Z\/\-]*)\s*([a-zA-Z\/\-]*)$|"\2" : "\1"|' ./backward	2
sed -E 's|^Link[[:space:]]*([a-zA-Z\/\-]*)[[:space:]]*([a-zA-Z\/\-]*)$|"\2" : "\1"|' ./backward	2
sed -E 's|^Link\s+([[:alpha:]/-]*)\s+([[:alpha:]/-]*)$|"\2" : "\1"|' ./backward	2
sed -E 's|^Link\s+([a-zA-Z\/\-]+)\s+([a-zA-Z\/\-]+)$|"\2" : "\1"|' ./backward	2
sed -i '' 's/^\([^,]*,\).*/\1/' file	1
sed -En 's|^Link[[:space:]]*([^[:space:]]*)[[:space:]]*([^[:space:]]*)$|    "\2" : "\1"|p' ./backward	2
((?:'|"){1,3})([^'"]+)\1	2
echo '69: 0 0 55 0 PCI-X eth-1@XX'|sed 's/^\(..\).*X \(.*\)@\(.*\)$/\1 \3@\2/g'	1
$ sed -E 's/^([0-9]+):.*?(eth-[[:xdigit:]]+)@([^[:space:]]+)/\1 \3@\2/' file	2
type(?!3\.)\d+\.value(\d+)=\K\d+(?=[\s\S]*?type3\.value\1=(\d+))	2
for f in *; do mv $f `echo $f | sed 's/-.*-([^-]*)$/-\1/'`; done	2
final String regex = "(\\d+)/\\1";	2
(\d+)/\1	2
sed -n 's/.*dealersCode:\([0-9][0-9][0-9][0-9][0-9][0-9]*\).*/\1/p'	1
sed 's/^.*"dealersCode":\([0-9]*\).*/\1/'	1
